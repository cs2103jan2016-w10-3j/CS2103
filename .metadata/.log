!SESSION 2016-01-20 10:45:22.277 -----------------------------------------------
eclipse.buildId=4.5.1.M20150904-0015
java.version=1.7.0_79
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/admin/.eclipse_keyring -showlocation
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/admin/.eclipse_keyring -showlocation

!ENTRY org.eclipse.core.net 1 0 2016-01-20 10:45:42.406
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences

!ENTRY org.eclipse.equinox.p2.transport.ecf 2 0 2016-01-20 10:57:22.147
!MESSAGE Connection to http://download.eclipse.org/eclipse/updates/4.5/R-4.5.1-201509040015/plugins/org.eclipse.pde.core_3.10.101.v20150722-0954.jar failed on Operation timed out. Retry attempt 0 started
!STACK 0
java.net.ConnectException: Operation timed out
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at org.eclipse.ecf.internal.provider.filetransfer.httpclient4.ECFHttpClientProtocolSocketFactory.connectSocket(ECFHttpClientProtocolSocketFactory.java:86)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:177)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:131)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:611)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:446)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:863)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:82)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.performConnect(HttpClientRetrieveFileTransfer.java:1077)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.access$0(HttpClientRetrieveFileTransfer.java:1068)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer$1.performFileTransfer(HttpClientRetrieveFileTransfer.java:1064)
	at org.eclipse.ecf.filetransfer.FileTransferJob.run(FileTransferJob.java:73)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)

!ENTRY org.eclipse.equinox.p2.transport.ecf 2 0 2016-01-20 10:57:22.148
!MESSAGE Connection to http://download.eclipse.org/eclipse/updates/4.5/R-4.5.1-201509040015/plugins/org.eclipse.pde.api.tools.ui_1.0.600.v20150831-0659.jar.pack.gz failed on Operation timed out. Retry attempt 0 started
!STACK 0
java.net.ConnectException: Operation timed out
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at org.eclipse.ecf.internal.provider.filetransfer.httpclient4.ECFHttpClientProtocolSocketFactory.connectSocket(ECFHttpClientProtocolSocketFactory.java:86)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:177)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:131)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:611)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:446)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:863)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:82)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.performConnect(HttpClientRetrieveFileTransfer.java:1077)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.access$0(HttpClientRetrieveFileTransfer.java:1068)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer$1.performFileTransfer(HttpClientRetrieveFileTransfer.java:1064)
	at org.eclipse.ecf.filetransfer.FileTransferJob.run(FileTransferJob.java:73)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)

!ENTRY org.eclipse.equinox.p2.transport.ecf 2 0 2016-01-20 10:57:23.153
!MESSAGE Connection to http://eclipse.c3sl.ufpr.br/eclipse/updates/4.5/R-4.5.1-201509040015/plugins/org.eclipse.pde_3.11.1.v20150904-0015.jar.pack.gz failed on No route to host. Retry attempt 0 started
!STACK 0
java.net.ConnectException: No route to host
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at org.eclipse.ecf.internal.provider.filetransfer.httpclient4.ECFHttpClientProtocolSocketFactory.connectSocket(ECFHttpClientProtocolSocketFactory.java:86)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:177)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:131)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:611)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:446)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:863)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:82)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.performConnect(HttpClientRetrieveFileTransfer.java:1077)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.access$0(HttpClientRetrieveFileTransfer.java:1068)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer$1.performFileTransfer(HttpClientRetrieveFileTransfer.java:1064)
	at org.eclipse.ecf.filetransfer.FileTransferJob.run(FileTransferJob.java:73)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
!SESSION 2016-01-20 11:22:23.578 -----------------------------------------------
eclipse.buildId=4.5.1.M20150904-0015
java.version=1.7.0_79
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product -product org.eclipse.epp.package.java.product -keyring /Users/admin/.eclipse_keyring -showlocation
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -data file:/Users/admin/Desktop/CS2103/ -product org.eclipse.epp.package.java.product -keyring /Users/admin/.eclipse_keyring -showlocation

!ENTRY org.eclipse.core.net 1 0 2016-01-20 11:22:31.396
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences
!SESSION 2016-01-25 14:05:53.048 -----------------------------------------------
eclipse.buildId=4.5.1.M20150904-0015
java.version=1.7.0_79
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/admin/.eclipse_keyring -showlocation
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/admin/.eclipse_keyring -showlocation

!ENTRY org.eclipse.core.net 1 0 2016-01-25 14:06:02.350
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences

!ENTRY org.eclipse.recommenders.types.rcp 1 3 2016-01-25 14:40:46.337
!MESSAGE Full project indexing required:
  [+] /Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/charsets.jar
  [+] /Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/ext/dnsns.jar
  [+] /Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/ext/localedata.jar
  [+] /Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/ext/sunec.jar
  [+] /Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/ext/sunjce_provider.jar
  [+] /Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/ext/sunpkcs11.jar
  [+] /Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/ext/zipfs.jar
  [+] /Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/jce.jar
  [+] /Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/jfr.jar
  [+] /Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/jsse.jar
  [+] /Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/resources.jar
  [+] /Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/rt.jar
  [+] /System/Library/Java/Extensions/AppleScriptEngine.jar
  [+] /System/Library/Java/Extensions/MRJToolkit.jar
  [+] /System/Library/Java/Extensions/dns_sd.jar
  [+] /System/Library/Java/Extensions/j3daudio.jar
  [+] /System/Library/Java/Extensions/j3dcore.jar
  [+] /System/Library/Java/Extensions/j3dutils.jar
  [+] /System/Library/Java/Extensions/jai_codec.jar
  [+] /System/Library/Java/Extensions/jai_core.jar
  [+] /System/Library/Java/Extensions/mlibwrapper_jai.jar
  [+] /System/Library/Java/Extensions/vecmath.jar

!STACK 0
org.eclipse.recommenders.utils.Logs$LogTraceException
	at org.eclipse.recommenders.utils.Logs$LogTraceException.newTrace(Logs.java:381)
	at org.eclipse.recommenders.utils.Logs.log(Logs.java:134)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.needsRebuild(ProjectTypesIndex.java:170)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.startUp(ProjectTypesIndex.java:126)
	at com.google.common.util.concurrent.AbstractIdleService$2$1.run(AbstractIdleService.java:54)
	at com.google.common.util.concurrent.Callables$3.run(Callables.java:93)
	at java.lang.Thread.run(Thread.java:745)
!SESSION 2016-01-25 15:27:04.069 -----------------------------------------------
eclipse.buildId=4.5.1.M20150904-0015
java.version=1.7.0_79
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/admin/.eclipse_keyring -showlocation
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/admin/.eclipse_keyring -showlocation

!ENTRY org.eclipse.recommenders.rcp 2 15 2016-01-25 18:38:08.578
!MESSAGE Failed to parse news feed
!STACK 0
java.net.UnknownHostException: www.codetrails.com: nodename nor servname provided, or not known
	at java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)
	at java.net.InetAddress$1.lookupAllHostAddr(InetAddress.java:901)
	at java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1295)
	at java.net.InetAddress.getAllByName0(InetAddress.java:1248)
	at java.net.InetAddress.getAllByName(InetAddress.java:1164)
	at java.net.InetAddress.getAllByName(InetAddress.java:1098)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:44)
	at org.apache.http.impl.conn.HttpClientConnectionOperator.connect(HttpClientConnectionOperator.java:102)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:319)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:363)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:219)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:195)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:86)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:108)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:184)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:82)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:57)
	at org.apache.http.client.fluent.Executor.execute(Executor.java:206)
	at org.eclipse.recommenders.internal.rcp.news.CheckForProjectNewsJob.getRSSFeed(CheckForProjectNewsJob.java:138)
	at org.eclipse.recommenders.internal.rcp.news.CheckForProjectNewsJob.doRun(CheckForProjectNewsJob.java:89)
	at org.eclipse.recommenders.internal.rcp.news.CheckForProjectNewsJob.run(CheckForProjectNewsJob.java:62)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
!SESSION 2016-01-27 10:00:45.536 -----------------------------------------------
eclipse.buildId=4.5.1.M20150904-0015
java.version=1.7.0_79
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/admin/.eclipse_keyring -showlocation
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/admin/.eclipse_keyring -showlocation

!ENTRY org.eclipse.core.net 1 0 2016-01-27 10:00:51.696
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences

!ENTRY org.eclipse.recommenders.types.rcp 1 3 2016-01-27 10:04:35.390
!MESSAGE Full project indexing required:
  [+] /Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/charsets.jar
  [+] /Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/ext/dnsns.jar
  [+] /Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/ext/localedata.jar
  [+] /Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/ext/sunec.jar
  [+] /Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/ext/sunjce_provider.jar
  [+] /Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/ext/sunpkcs11.jar
  [+] /Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/ext/zipfs.jar
  [+] /Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/jce.jar
  [+] /Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/jfr.jar
  [+] /Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/jsse.jar
  [+] /Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/resources.jar
  [+] /Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/rt.jar
  [+] /System/Library/Java/Extensions/AppleScriptEngine.jar
  [+] /System/Library/Java/Extensions/MRJToolkit.jar
  [+] /System/Library/Java/Extensions/dns_sd.jar
  [+] /System/Library/Java/Extensions/j3daudio.jar
  [+] /System/Library/Java/Extensions/j3dcore.jar
  [+] /System/Library/Java/Extensions/j3dutils.jar
  [+] /System/Library/Java/Extensions/jai_codec.jar
  [+] /System/Library/Java/Extensions/jai_core.jar
  [+] /System/Library/Java/Extensions/mlibwrapper_jai.jar
  [+] /System/Library/Java/Extensions/vecmath.jar

!STACK 0
org.eclipse.recommenders.utils.Logs$LogTraceException
	at org.eclipse.recommenders.utils.Logs$LogTraceException.newTrace(Logs.java:381)
	at org.eclipse.recommenders.utils.Logs.log(Logs.java:134)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.needsRebuild(ProjectTypesIndex.java:170)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.startUp(ProjectTypesIndex.java:126)
	at com.google.common.util.concurrent.AbstractIdleService$2$1.run(AbstractIdleService.java:54)
	at com.google.common.util.concurrent.Callables$3.run(Callables.java:93)
	at java.lang.Thread.run(Thread.java:745)

!ENTRY org.eclipse.recommenders.rcp 2 15 2016-01-27 12:40:23.177
!MESSAGE Failed to parse news feed
!STACK 0
java.net.UnknownHostException: www.codetrails.com: nodename nor servname provided, or not known
	at java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)
	at java.net.InetAddress$1.lookupAllHostAddr(InetAddress.java:901)
	at java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1295)
	at java.net.InetAddress.getAllByName0(InetAddress.java:1248)
	at java.net.InetAddress.getAllByName(InetAddress.java:1164)
	at java.net.InetAddress.getAllByName(InetAddress.java:1098)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:44)
	at org.apache.http.impl.conn.HttpClientConnectionOperator.connect(HttpClientConnectionOperator.java:102)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:319)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:363)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:219)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:195)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:86)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:108)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:184)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:82)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:57)
	at org.apache.http.client.fluent.Executor.execute(Executor.java:206)
	at org.eclipse.recommenders.internal.rcp.news.CheckForProjectNewsJob.getRSSFeed(CheckForProjectNewsJob.java:138)
	at org.eclipse.recommenders.internal.rcp.news.CheckForProjectNewsJob.doRun(CheckForProjectNewsJob.java:89)
	at org.eclipse.recommenders.internal.rcp.news.CheckForProjectNewsJob.run(CheckForProjectNewsJob.java:62)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
!SESSION 2016-02-03 11:34:00.761 -----------------------------------------------
eclipse.buildId=4.5.1.M20150904-0015
java.version=1.7.0_79
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/admin/.eclipse_keyring -showlocation
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/admin/.eclipse_keyring -showlocation

!ENTRY org.eclipse.core.net 1 0 2016-02-03 11:34:02.236
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences

!ENTRY org.eclipse.core.resources 4 567 2016-02-03 11:34:29.928
!MESSAGE Workspace restored, but some problems occurred.
!SUBENTRY 1 org.eclipse.core.resources 4 567 2016-02-03 11:34:29.928
!MESSAGE Could not read metadata for 'CityConnect'.
!STACK 1
org.eclipse.core.internal.resources.ResourceException: The project description file (.project) for 'CityConnect' is missing.  This file contains important information about the project.  The project will not function properly until this file is restored.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:888)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:902)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:882)
	at org.eclipse.core.internal.resources.SaveManager.restore(SaveManager.java:733)
	at org.eclipse.core.internal.resources.SaveManager.startup(SaveManager.java:1588)
	at org.eclipse.core.internal.resources.Workspace.startup(Workspace.java:2386)
	at org.eclipse.core.internal.resources.Workspace.open(Workspace.java:2157)
	at org.eclipse.core.resources.ResourcesPlugin.start(ResourcesPlugin.java:463)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$3.run(BundleContextImpl.java:771)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$3.run(BundleContextImpl.java:1)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:764)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:721)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:941)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:318)
	at org.eclipse.osgi.container.Module.doStart(Module.java:571)
	at org.eclipse.osgi.container.Module.start(Module.java:439)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:454)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:107)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:531)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:324)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:327)
	at org.eclipse.osgi.internal.loader.sources.SingleSourcePackage.loadClass(SingleSourcePackage.java:36)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:398)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:352)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:344)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:160)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:140)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:380)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:235)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:669)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:608)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1515)
!SUBENTRY 2 org.eclipse.core.resources 4 567 2016-02-03 11:34:29.930
!MESSAGE The project description file (.project) for 'CityConnect' is missing.  This file contains important information about the project.  The project will not function properly until this file is restored.
!SUBENTRY 1 org.eclipse.core.resources 4 567 2016-02-03 11:34:29.930
!MESSAGE Could not read metadata for 'TextBuddy'.
!STACK 1
org.eclipse.core.internal.resources.ResourceException: The project description file (.project) for 'TextBuddy' is missing.  This file contains important information about the project.  The project will not function properly until this file is restored.
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:888)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:902)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:882)
	at org.eclipse.core.internal.resources.SaveManager.restore(SaveManager.java:733)
	at org.eclipse.core.internal.resources.SaveManager.startup(SaveManager.java:1588)
	at org.eclipse.core.internal.resources.Workspace.startup(Workspace.java:2386)
	at org.eclipse.core.internal.resources.Workspace.open(Workspace.java:2157)
	at org.eclipse.core.resources.ResourcesPlugin.start(ResourcesPlugin.java:463)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$3.run(BundleContextImpl.java:771)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$3.run(BundleContextImpl.java:1)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:764)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:721)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:941)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:318)
	at org.eclipse.osgi.container.Module.doStart(Module.java:571)
	at org.eclipse.osgi.container.Module.start(Module.java:439)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:454)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:107)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:531)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:324)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:327)
	at org.eclipse.osgi.internal.loader.sources.SingleSourcePackage.loadClass(SingleSourcePackage.java:36)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:398)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:352)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:344)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:160)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:140)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:380)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:235)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:669)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:608)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1515)
!SUBENTRY 2 org.eclipse.core.resources 4 567 2016-02-03 11:34:29.930
!MESSAGE The project description file (.project) for 'TextBuddy' is missing.  This file contains important information about the project.  The project will not function properly until this file is restored.

!ENTRY org.eclipse.e4.ui.workbench 4 0 2016-02-03 11:35:27.832
!MESSAGE Error setting focus to : org.eclipse.e4.ui.model.application.ui.basic.impl.PartImpl CityConnect.java
!STACK 0
org.eclipse.swt.SWTException: Widget is disposed
	at org.eclipse.swt.SWT.error(SWT.java:4491)
	at org.eclipse.swt.SWT.error(SWT.java:4406)
	at org.eclipse.swt.SWT.error(SWT.java:4377)
	at org.eclipse.swt.widgets.Widget.error(Widget.java:799)
	at org.eclipse.swt.widgets.Widget.checkWidget(Widget.java:588)
	at org.eclipse.swt.widgets.Control.setFocus(Control.java:3761)
	at org.eclipse.swt.widgets.Composite.setFocus(Composite.java:1037)
	at org.eclipse.swt.widgets.Composite.setFocus(Composite.java:1037)
	at org.eclipse.ui.texteditor.StatusTextEditor.setFocus(StatusTextEditor.java:120)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.setFocus(JavaEditor.java:2395)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.delegateSetFocus(CompatibilityPart.java:204)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:56)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:252)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:258)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:229)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:107)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.focusGui(PartRenderingEngine.java:775)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributedPartRenderer$2.setFocus(ContributedPartRenderer.java:102)
	at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer$10.mouseUp(StackRenderer.java:1133)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:220)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1491)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1514)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1499)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1299)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4072)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3698)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:1127)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1018)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:156)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:654)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:598)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:139)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:380)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:235)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:669)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:608)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1515)

!ENTRY org.eclipse.recommenders.types.rcp 1 3 2016-02-03 12:02:07.462
!MESSAGE Full project indexing required:
  [+] /Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/charsets.jar
  [+] /Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/ext/dnsns.jar
  [+] /Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/ext/localedata.jar
  [+] /Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/ext/sunec.jar
  [+] /Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/ext/sunjce_provider.jar
  [+] /Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/ext/sunpkcs11.jar
  [+] /Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/ext/zipfs.jar
  [+] /Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/jce.jar
  [+] /Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/jfr.jar
  [+] /Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/jsse.jar
  [+] /Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/resources.jar
  [+] /Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/rt.jar
  [+] /System/Library/Java/Extensions/AppleScriptEngine.jar
  [+] /System/Library/Java/Extensions/MRJToolkit.jar
  [+] /System/Library/Java/Extensions/dns_sd.jar
  [+] /System/Library/Java/Extensions/j3daudio.jar
  [+] /System/Library/Java/Extensions/j3dcore.jar
  [+] /System/Library/Java/Extensions/j3dutils.jar
  [+] /System/Library/Java/Extensions/jai_codec.jar
  [+] /System/Library/Java/Extensions/jai_core.jar
  [+] /System/Library/Java/Extensions/mlibwrapper_jai.jar
  [+] /System/Library/Java/Extensions/vecmath.jar
  [+] /Users/admin/Desktop/CS2103/TaskScheduler/lib/joda-time-2.9.2-javadoc.jar
  [+] /Users/admin/Desktop/CS2103/TaskScheduler/lib/joda-time-2.9.2-no-tzdb.jar
  [+] /Users/admin/Desktop/CS2103/TaskScheduler/lib/joda-time-2.9.2-sources.jar
  [+] /Users/admin/Desktop/CS2103/TaskScheduler/lib/joda-time-2.9.2.jar

!STACK 0
org.eclipse.recommenders.utils.Logs$LogTraceException
	at org.eclipse.recommenders.utils.Logs$LogTraceException.newTrace(Logs.java:381)
	at org.eclipse.recommenders.utils.Logs.log(Logs.java:134)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.needsRebuild(ProjectTypesIndex.java:170)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.startUp(ProjectTypesIndex.java:126)
	at com.google.common.util.concurrent.AbstractIdleService$2$1.run(AbstractIdleService.java:54)
	at com.google.common.util.concurrent.Callables$3.run(Callables.java:93)
	at java.lang.Thread.run(Thread.java:745)
!SESSION 2016-02-06 14:28:37.063 -----------------------------------------------
eclipse.buildId=4.5.1.M20150904-0015
java.version=1.7.0_79
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/admin/.eclipse_keyring -showlocation
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/admin/.eclipse_keyring -showlocation

!ENTRY org.eclipse.core.net 1 0 2016-02-06 14:28:43.243
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences
!SESSION 2016-02-09 11:24:36.583 -----------------------------------------------
eclipse.buildId=4.5.1.M20150904-0015
java.version=1.7.0_79
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/admin/.eclipse_keyring -showlocation
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/admin/.eclipse_keyring -showlocation

!ENTRY org.eclipse.core.net 1 0 2016-02-09 11:24:38.016
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences

!ENTRY org.eclipse.recommenders.rcp 2 15 2016-02-09 13:26:33.203
!MESSAGE Failed to parse news feed
!STACK 0
java.net.UnknownHostException: www.codetrails.com: nodename nor servname provided, or not known
	at java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)
	at java.net.InetAddress$1.lookupAllHostAddr(InetAddress.java:901)
	at java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1295)
	at java.net.InetAddress.getAllByName0(InetAddress.java:1248)
	at java.net.InetAddress.getAllByName(InetAddress.java:1164)
	at java.net.InetAddress.getAllByName(InetAddress.java:1098)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:44)
	at org.apache.http.impl.conn.HttpClientConnectionOperator.connect(HttpClientConnectionOperator.java:102)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:319)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:363)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:219)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:195)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:86)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:108)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:184)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:82)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:57)
	at org.apache.http.client.fluent.Executor.execute(Executor.java:206)
	at org.eclipse.recommenders.internal.rcp.news.CheckForProjectNewsJob.getRSSFeed(CheckForProjectNewsJob.java:138)
	at org.eclipse.recommenders.internal.rcp.news.CheckForProjectNewsJob.doRun(CheckForProjectNewsJob.java:89)
	at org.eclipse.recommenders.internal.rcp.news.CheckForProjectNewsJob.run(CheckForProjectNewsJob.java:62)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
!SESSION 2016-02-10 10:03:07.977 -----------------------------------------------
eclipse.buildId=4.5.1.M20150904-0015
java.version=1.7.0_79
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/admin/.eclipse_keyring -showlocation
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/admin/.eclipse_keyring -showlocation

!ENTRY org.eclipse.core.net 1 0 2016-02-10 10:03:09.410
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences
!SESSION 2016-02-10 14:54:24.028 -----------------------------------------------
eclipse.buildId=4.5.1.M20150904-0015
java.version=1.7.0_79
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/admin/.eclipse_keyring -showlocation
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/admin/.eclipse_keyring -showlocation

!ENTRY org.eclipse.core.net 1 0 2016-02-10 14:54:25.343
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences

!ENTRY org.eclipse.recommenders.rcp 2 15 2016-02-11 16:32:53.214
!MESSAGE Failed to parse news feed
!STACK 0
java.net.UnknownHostException: www.codetrails.com: nodename nor servname provided, or not known
	at java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)
	at java.net.InetAddress$1.lookupAllHostAddr(InetAddress.java:901)
	at java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1295)
	at java.net.InetAddress.getAllByName0(InetAddress.java:1248)
	at java.net.InetAddress.getAllByName(InetAddress.java:1164)
	at java.net.InetAddress.getAllByName(InetAddress.java:1098)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:44)
	at org.apache.http.impl.conn.HttpClientConnectionOperator.connect(HttpClientConnectionOperator.java:102)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:319)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:363)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:219)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:195)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:86)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:108)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:184)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:82)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:57)
	at org.apache.http.client.fluent.Executor.execute(Executor.java:206)
	at org.eclipse.recommenders.internal.rcp.news.CheckForProjectNewsJob.getRSSFeed(CheckForProjectNewsJob.java:138)
	at org.eclipse.recommenders.internal.rcp.news.CheckForProjectNewsJob.doRun(CheckForProjectNewsJob.java:89)
	at org.eclipse.recommenders.internal.rcp.news.CheckForProjectNewsJob.run(CheckForProjectNewsJob.java:62)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
!SESSION 2016-02-17 09:38:50.993 -----------------------------------------------
eclipse.buildId=4.5.1.M20150904-0015
java.version=1.7.0_79
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/admin/.eclipse_keyring -showlocation
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/admin/.eclipse_keyring -showlocation

!ENTRY org.eclipse.core.net 1 0 2016-02-17 09:38:57.423
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences

!ENTRY org.eclipse.core.resources 4 567 2016-02-17 09:40:34.395
!MESSAGE The project description file (.project) for 'TextBuddy' is missing.  This file contains important information about the project.  The project will not function properly until this file is restored.

!ENTRY org.eclipse.recommenders.types.rcp 1 3 2016-02-17 09:44:19.895
!MESSAGE Full project indexing required:
  [+] /Applications/Eclipse.app/Contents/Eclipse/plugins/org.hamcrest.core_1.3.0.v201303031735.jar
  [+] /Applications/Eclipse.app/Contents/Eclipse/plugins/org.junit_4.12.0.v201504281640/junit.jar
  [+] /Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/charsets.jar
  [+] /Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/ext/dnsns.jar
  [+] /Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/ext/localedata.jar
  [+] /Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/ext/sunec.jar
  [+] /Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/ext/sunjce_provider.jar
  [+] /Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/ext/sunpkcs11.jar
  [+] /Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/ext/zipfs.jar
  [+] /Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/jce.jar
  [+] /Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/jfr.jar
  [+] /Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/jsse.jar
  [+] /Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/resources.jar
  [+] /Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/rt.jar
  [+] /System/Library/Java/Extensions/AppleScriptEngine.jar
  [+] /System/Library/Java/Extensions/MRJToolkit.jar
  [+] /System/Library/Java/Extensions/dns_sd.jar
  [+] /System/Library/Java/Extensions/j3daudio.jar
  [+] /System/Library/Java/Extensions/j3dcore.jar
  [+] /System/Library/Java/Extensions/j3dutils.jar
  [+] /System/Library/Java/Extensions/jai_codec.jar
  [+] /System/Library/Java/Extensions/jai_core.jar
  [+] /System/Library/Java/Extensions/mlibwrapper_jai.jar
  [+] /System/Library/Java/Extensions/vecmath.jar

!STACK 0
org.eclipse.recommenders.utils.Logs$LogTraceException
	at org.eclipse.recommenders.utils.Logs$LogTraceException.newTrace(Logs.java:381)
	at org.eclipse.recommenders.utils.Logs.log(Logs.java:134)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.needsRebuild(ProjectTypesIndex.java:170)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.startUp(ProjectTypesIndex.java:126)
	at com.google.common.util.concurrent.AbstractIdleService$2$1.run(AbstractIdleService.java:54)
	at com.google.common.util.concurrent.Callables$3.run(Callables.java:93)
	at java.lang.Thread.run(Thread.java:745)

!ENTRY org.eclipse.equinox.p2.transport.ecf 4 1002 2016-02-17 10:03:40.925
!MESSAGE HTTP Server 'Service Unavailable': http://download.eclipse.org/eclipse/updates/4.5/compositeContent.xml
!STACK 1
org.eclipse.ecf.filetransfer.BrowseFileTransferException: HttpComponents connection error response code 503.
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientFileSystemBrowser.runRequest(HttpClientFileSystemBrowser.java:289)
	at org.eclipse.ecf.provider.filetransfer.browse.AbstractFileSystemBrowser$DirectoryJob.run(AbstractFileSystemBrowser.java:69)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
!SUBENTRY 1 org.eclipse.ecf.identity 4 0 2016-02-17 10:03:40.926
!MESSAGE HttpComponents connection error response code 503.

!ENTRY org.eclipse.recommenders.types.rcp 1 3 2016-03-08 23:32:46.344
!MESSAGE Full project indexing required:
  [+] /Applications/Eclipse.app/Contents/Eclipse/plugins/org.hamcrest.core_1.3.0.v201303031735.jar
  [+] /Applications/Eclipse.app/Contents/Eclipse/plugins/org.junit_4.12.0.v201504281640/junit.jar

!STACK 0
org.eclipse.recommenders.utils.Logs$LogTraceException
	at org.eclipse.recommenders.utils.Logs$LogTraceException.newTrace(Logs.java:381)
	at org.eclipse.recommenders.utils.Logs.log(Logs.java:134)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.needsRebuild(ProjectTypesIndex.java:170)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.startUp(ProjectTypesIndex.java:126)
	at com.google.common.util.concurrent.AbstractIdleService$2$1.run(AbstractIdleService.java:54)
	at com.google.common.util.concurrent.Callables$3.run(Callables.java:93)
	at java.lang.Thread.run(Thread.java:745)

!ENTRY org.eclipse.jdt.junit 4 4 2016-03-09 00:07:02.445
!MESSAGE Error
!STACK 0
java.lang.reflect.InvocationTargetException
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:420)
	at org.eclipse.ui.internal.WorkbenchWindow$14.run(WorkbenchWindow.java:2156)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:2152)
	at org.eclipse.jdt.internal.junit.util.TestSearchEngine.findTests(TestSearchEngine.java:47)
	at org.eclipse.jdt.junit.launcher.JUnitLaunchShortcut.findTypesToLaunch(JUnitLaunchShortcut.java:218)
	at org.eclipse.jdt.junit.launcher.JUnitLaunchShortcut.findTypeToLaunch(JUnitLaunchShortcut.java:207)
	at org.eclipse.jdt.junit.launcher.JUnitLaunchShortcut.launch(JUnitLaunchShortcut.java:183)
	at org.eclipse.jdt.junit.launcher.JUnitLaunchShortcut.launch(JUnitLaunchShortcut.java:114)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchShortcutExtension.launch(LaunchShortcutExtension.java:420)
	at org.eclipse.debug.internal.ui.contextlaunching.ContextRunner.launchShortcut(ContextRunner.java:204)
	at org.eclipse.debug.internal.ui.contextlaunching.ContextRunner.selectAndLaunch(ContextRunner.java:137)
	at org.eclipse.debug.internal.ui.contextlaunching.ContextRunner.launch(ContextRunner.java:81)
	at org.eclipse.debug.ui.actions.AbstractLaunchToolbarAction.run(AbstractLaunchToolbarAction.java:82)
	at org.eclipse.debug.ui.actions.AbstractLaunchHistoryAction.runWithEvent(AbstractLaunchHistoryAction.java:420)
	at org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:237)
	at org.eclipse.ui.internal.WWinPluginAction.runWithEvent(WWinPluginAction.java:228)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:595)
	at org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:511)
	at org.eclipse.jface.action.ActionContributionItem$6.handleEvent(ActionContributionItem.java:462)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1491)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1514)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1499)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1299)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4072)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3698)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:1127)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1018)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:156)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:654)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:598)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:139)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:380)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:235)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:669)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:608)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1515)
Caused by: java.lang.OutOfMemoryError: Requested array size exceeds VM limit
	at org.eclipse.jdt.internal.compiler.util.HashtableOfObject.<init>(HashtableOfObject.java:38)
	at org.eclipse.jdt.internal.core.index.DiskIndex.readCategoryTable(DiskIndex.java:663)
	at org.eclipse.jdt.internal.core.index.DiskIndex.addQueryResults(DiskIndex.java:191)
	at org.eclipse.jdt.internal.core.index.Index.query(Index.java:140)
	at org.eclipse.jdt.core.search.SearchPattern.queryIn(SearchPattern.java:2598)
	at org.eclipse.jdt.internal.core.search.matching.IntersectingPattern.findIndexMatches(IntersectingPattern.java:39)
	at org.eclipse.jdt.internal.core.search.matching.OrPattern.findIndexMatches(OrPattern.java:61)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.findIndexMatches(MatchLocator.java:275)
	at org.eclipse.jdt.internal.core.search.PatternSearchJob.search(PatternSearchJob.java:109)
	at org.eclipse.jdt.internal.core.search.PatternSearchJob.execute(PatternSearchJob.java:65)
	at org.eclipse.jdt.internal.core.search.processing.JobManager.performConcurrentJob(JobManager.java:277)
	at org.eclipse.jdt.internal.core.search.BasicSearchEngine.findMatches(BasicSearchEngine.java:215)
	at org.eclipse.jdt.internal.core.search.BasicSearchEngine.search(BasicSearchEngine.java:516)
	at org.eclipse.jdt.core.search.SearchEngine.search(SearchEngine.java:584)
	at org.eclipse.jdt.internal.junit.launcher.JUnit4TestFinder.findTestsInContainer(JUnit4TestFinder.java:142)
	at org.eclipse.jdt.internal.junit.util.TestSearchEngine$1.run(TestSearchEngine.java:41)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:119)
Root exception:
java.lang.OutOfMemoryError: Requested array size exceeds VM limit
	at org.eclipse.jdt.internal.compiler.util.HashtableOfObject.<init>(HashtableOfObject.java:38)
	at org.eclipse.jdt.internal.core.index.DiskIndex.readCategoryTable(DiskIndex.java:663)
	at org.eclipse.jdt.internal.core.index.DiskIndex.addQueryResults(DiskIndex.java:191)
	at org.eclipse.jdt.internal.core.index.Index.query(Index.java:140)
	at org.eclipse.jdt.core.search.SearchPattern.queryIn(SearchPattern.java:2598)
	at org.eclipse.jdt.internal.core.search.matching.IntersectingPattern.findIndexMatches(IntersectingPattern.java:39)
	at org.eclipse.jdt.internal.core.search.matching.OrPattern.findIndexMatches(OrPattern.java:61)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.findIndexMatches(MatchLocator.java:275)
	at org.eclipse.jdt.internal.core.search.PatternSearchJob.search(PatternSearchJob.java:109)
	at org.eclipse.jdt.internal.core.search.PatternSearchJob.execute(PatternSearchJob.java:65)
	at org.eclipse.jdt.internal.core.search.processing.JobManager.performConcurrentJob(JobManager.java:277)
	at org.eclipse.jdt.internal.core.search.BasicSearchEngine.findMatches(BasicSearchEngine.java:215)
	at org.eclipse.jdt.internal.core.search.BasicSearchEngine.search(BasicSearchEngine.java:516)
	at org.eclipse.jdt.core.search.SearchEngine.search(SearchEngine.java:584)
	at org.eclipse.jdt.internal.junit.launcher.JUnit4TestFinder.findTestsInContainer(JUnit4TestFinder.java:142)
	at org.eclipse.jdt.internal.junit.util.TestSearchEngine$1.run(TestSearchEngine.java:41)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:119)

!ENTRY org.eclipse.jdt.junit 4 4 2016-03-12 13:49:21.220
!MESSAGE Error
!STACK 0
java.lang.reflect.InvocationTargetException
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:420)
	at org.eclipse.ui.internal.WorkbenchWindow$14.run(WorkbenchWindow.java:2156)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:2152)
	at org.eclipse.jdt.internal.junit.util.TestSearchEngine.findTests(TestSearchEngine.java:47)
	at org.eclipse.jdt.junit.launcher.JUnitLaunchShortcut.findTypesToLaunch(JUnitLaunchShortcut.java:218)
	at org.eclipse.jdt.junit.launcher.JUnitLaunchShortcut.findTypeToLaunch(JUnitLaunchShortcut.java:207)
	at org.eclipse.jdt.junit.launcher.JUnitLaunchShortcut.launch(JUnitLaunchShortcut.java:183)
	at org.eclipse.jdt.junit.launcher.JUnitLaunchShortcut.launch(JUnitLaunchShortcut.java:114)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchShortcutExtension.launch(LaunchShortcutExtension.java:420)
	at org.eclipse.debug.internal.ui.contextlaunching.ContextRunner.launchShortcut(ContextRunner.java:204)
	at org.eclipse.debug.internal.ui.contextlaunching.ContextRunner.selectAndLaunch(ContextRunner.java:137)
	at org.eclipse.debug.internal.ui.contextlaunching.ContextRunner.launch(ContextRunner.java:81)
	at org.eclipse.debug.ui.actions.AbstractLaunchToolbarAction.run(AbstractLaunchToolbarAction.java:82)
	at org.eclipse.debug.ui.actions.AbstractLaunchHistoryAction.runWithEvent(AbstractLaunchHistoryAction.java:420)
	at org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:237)
	at org.eclipse.ui.internal.WWinPluginAction.runWithEvent(WWinPluginAction.java:228)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:595)
	at org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:511)
	at org.eclipse.jface.action.ActionContributionItem$6.handleEvent(ActionContributionItem.java:462)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1491)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1514)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1499)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1299)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4072)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3698)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:1127)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1018)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:156)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:654)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:598)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:139)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:380)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:235)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:669)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:608)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1515)
Caused by: java.lang.IndexOutOfBoundsException
	at java.io.FileInputStream.readBytes(Native Method)
	at java.io.FileInputStream.read(FileInputStream.java:272)
	at org.eclipse.jdt.internal.core.index.DiskIndex.readStreamBuffer(DiskIndex.java:887)
	at org.eclipse.jdt.internal.core.index.DiskIndex.readStreamInt(DiskIndex.java:1012)
	at org.eclipse.jdt.internal.core.index.DiskIndex.readCategoryTable(DiskIndex.java:654)
	at org.eclipse.jdt.internal.core.index.DiskIndex.addQueryResults(DiskIndex.java:191)
	at org.eclipse.jdt.internal.core.index.Index.query(Index.java:140)
	at org.eclipse.jdt.core.search.SearchPattern.queryIn(SearchPattern.java:2598)
	at org.eclipse.jdt.internal.core.search.matching.IntersectingPattern.findIndexMatches(IntersectingPattern.java:39)
	at org.eclipse.jdt.internal.core.search.matching.OrPattern.findIndexMatches(OrPattern.java:61)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.findIndexMatches(MatchLocator.java:275)
	at org.eclipse.jdt.internal.core.search.PatternSearchJob.search(PatternSearchJob.java:109)
	at org.eclipse.jdt.internal.core.search.PatternSearchJob.execute(PatternSearchJob.java:65)
	at org.eclipse.jdt.internal.core.search.processing.JobManager.performConcurrentJob(JobManager.java:277)
	at org.eclipse.jdt.internal.core.search.BasicSearchEngine.findMatches(BasicSearchEngine.java:215)
	at org.eclipse.jdt.internal.core.search.BasicSearchEngine.search(BasicSearchEngine.java:516)
	at org.eclipse.jdt.core.search.SearchEngine.search(SearchEngine.java:584)
	at org.eclipse.jdt.internal.junit.launcher.JUnit4TestFinder.findTestsInContainer(JUnit4TestFinder.java:142)
	at org.eclipse.jdt.internal.junit.util.TestSearchEngine$1.run(TestSearchEngine.java:41)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:119)
Root exception:
java.lang.IndexOutOfBoundsException
	at java.io.FileInputStream.readBytes(Native Method)
	at java.io.FileInputStream.read(FileInputStream.java:272)
	at org.eclipse.jdt.internal.core.index.DiskIndex.readStreamBuffer(DiskIndex.java:887)
	at org.eclipse.jdt.internal.core.index.DiskIndex.readStreamInt(DiskIndex.java:1012)
	at org.eclipse.jdt.internal.core.index.DiskIndex.readCategoryTable(DiskIndex.java:654)
	at org.eclipse.jdt.internal.core.index.DiskIndex.addQueryResults(DiskIndex.java:191)
	at org.eclipse.jdt.internal.core.index.Index.query(Index.java:140)
	at org.eclipse.jdt.core.search.SearchPattern.queryIn(SearchPattern.java:2598)
	at org.eclipse.jdt.internal.core.search.matching.IntersectingPattern.findIndexMatches(IntersectingPattern.java:39)
	at org.eclipse.jdt.internal.core.search.matching.OrPattern.findIndexMatches(OrPattern.java:61)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.findIndexMatches(MatchLocator.java:275)
	at org.eclipse.jdt.internal.core.search.PatternSearchJob.search(PatternSearchJob.java:109)
	at org.eclipse.jdt.internal.core.search.PatternSearchJob.execute(PatternSearchJob.java:65)
	at org.eclipse.jdt.internal.core.search.processing.JobManager.performConcurrentJob(JobManager.java:277)
	at org.eclipse.jdt.internal.core.search.BasicSearchEngine.findMatches(BasicSearchEngine.java:215)
	at org.eclipse.jdt.internal.core.search.BasicSearchEngine.search(BasicSearchEngine.java:516)
	at org.eclipse.jdt.core.search.SearchEngine.search(SearchEngine.java:584)
	at org.eclipse.jdt.internal.junit.launcher.JUnit4TestFinder.findTestsInContainer(JUnit4TestFinder.java:142)
	at org.eclipse.jdt.internal.junit.util.TestSearchEngine$1.run(TestSearchEngine.java:41)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:119)
!SESSION 2016-03-16 10:08:33.198 -----------------------------------------------
eclipse.buildId=4.5.1.M20150904-0015
java.version=1.7.0_79
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/admin/.eclipse_keyring -showlocation
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/admin/.eclipse_keyring -showlocation

!ENTRY org.eclipse.core.net 1 0 2016-03-16 10:08:34.757
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences
!SESSION 2016-03-16 16:09:56.340 -----------------------------------------------
eclipse.buildId=4.5.1.M20150904-0015
java.version=1.7.0_79
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/admin/.eclipse_keyring -showlocation
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/admin/.eclipse_keyring -showlocation

!ENTRY org.eclipse.core.net 1 0 2016-03-16 16:09:57.679
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences
!SESSION 2016-03-23 09:20:59.507 -----------------------------------------------
eclipse.buildId=4.5.1.M20150904-0015
java.version=1.7.0_79
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/admin/.eclipse_keyring -showlocation
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/admin/.eclipse_keyring -showlocation

!ENTRY org.eclipse.core.net 1 0 2016-03-23 09:21:00.569
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences

!ENTRY org.eclipse.equinox.p2.transport.ecf 4 1002 2016-03-23 10:08:34.722
!MESSAGE HTTP Server 'Service Unavailable': http://download.eclipse.org/eclipse/updates/4.5/compositeContent.xml
!STACK 1
org.eclipse.ecf.filetransfer.BrowseFileTransferException: HttpComponents connection error response code 503.
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientFileSystemBrowser.runRequest(HttpClientFileSystemBrowser.java:289)
	at org.eclipse.ecf.provider.filetransfer.browse.AbstractFileSystemBrowser$DirectoryJob.run(AbstractFileSystemBrowser.java:69)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
!SUBENTRY 1 org.eclipse.ecf.identity 4 0 2016-03-23 10:08:34.723
!MESSAGE HttpComponents connection error response code 503.

!ENTRY org.eclipse.equinox.p2.core 4 0 2016-03-23 10:13:58.292
!MESSAGE Provisioning exception
!STACK 1
org.eclipse.equinox.p2.core.ProvisionException: No repository found at http://download.eclipse.org/releases/mars/201602261000.
	at org.eclipse.equinox.internal.p2.repository.helpers.AbstractRepositoryManager.fail(AbstractRepositoryManager.java:395)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.oomph.util.ReflectUtil.invokeMethod(ReflectUtil.java:116)
	at org.eclipse.oomph.p2.internal.core.CachingRepositoryManager.fail(CachingRepositoryManager.java:281)
	at org.eclipse.oomph.p2.internal.core.CachingRepositoryManager.loadRepository(CachingRepositoryManager.java:184)
	at org.eclipse.oomph.p2.internal.core.CachingRepositoryManager$Metadata.loadRepository(CachingRepositoryManager.java:387)
	at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.loadRepository(MetadataRepositoryManager.java:96)
	at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.loadRepository(MetadataRepositoryManager.java:92)
	at org.eclipse.equinox.internal.p2.metadata.repository.CompositeMetadataRepository.addChild(CompositeMetadataRepository.java:166)
	at org.eclipse.equinox.internal.p2.metadata.repository.CompositeMetadataRepository.<init>(CompositeMetadataRepository.java:106)
	at org.eclipse.equinox.internal.p2.metadata.repository.CompositeMetadataRepositoryFactory.load(CompositeMetadataRepositoryFactory.java:122)
	at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.factoryLoad(MetadataRepositoryManager.java:57)
	at org.eclipse.equinox.internal.p2.repository.helpers.AbstractRepositoryManager.loadRepository(AbstractRepositoryManager.java:768)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.oomph.util.ReflectUtil.invokeMethod(ReflectUtil.java:116)
	at org.eclipse.oomph.p2.internal.core.CachingRepositoryManager.loadRepository(CachingRepositoryManager.java:337)
	at org.eclipse.oomph.p2.internal.core.CachingRepositoryManager.loadRepository(CachingRepositoryManager.java:144)
	at org.eclipse.oomph.p2.internal.core.CachingRepositoryManager$Metadata.loadRepository(CachingRepositoryManager.java:387)
	at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.loadRepository(MetadataRepositoryManager.java:96)
	at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.loadRepository(MetadataRepositoryManager.java:92)
	at org.eclipse.equinox.internal.p2.updatechecker.UpdateChecker.getAvailableRepositories(UpdateChecker.java:151)
	at org.eclipse.equinox.internal.p2.updatechecker.UpdateChecker.checkForUpdates(UpdateChecker.java:129)
	at org.eclipse.equinox.internal.p2.updatechecker.UpdateChecker$UpdateCheckThread.run(UpdateChecker.java:73)
!SUBENTRY 1 org.eclipse.equinox.p2.metadata.repository 4 1000 2016-03-23 10:13:58.292
!MESSAGE No repository found at http://download.eclipse.org/releases/mars/201602261000.

!ENTRY org.eclipse.equinox.p2.metadata.repository 4 1002 2016-03-23 10:13:58.292
!MESSAGE Unable to read repository at http://download.eclipse.org/releases/mars.
!STACK 1
org.eclipse.equinox.p2.core.ProvisionException: No repository found at http://download.eclipse.org/releases/mars/201602261000.
	at org.eclipse.equinox.internal.p2.repository.helpers.AbstractRepositoryManager.fail(AbstractRepositoryManager.java:395)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.oomph.util.ReflectUtil.invokeMethod(ReflectUtil.java:116)
	at org.eclipse.oomph.p2.internal.core.CachingRepositoryManager.fail(CachingRepositoryManager.java:281)
	at org.eclipse.oomph.p2.internal.core.CachingRepositoryManager.loadRepository(CachingRepositoryManager.java:184)
	at org.eclipse.oomph.p2.internal.core.CachingRepositoryManager$Metadata.loadRepository(CachingRepositoryManager.java:387)
	at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.loadRepository(MetadataRepositoryManager.java:96)
	at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.loadRepository(MetadataRepositoryManager.java:92)
	at org.eclipse.equinox.internal.p2.metadata.repository.CompositeMetadataRepository.addChild(CompositeMetadataRepository.java:166)
	at org.eclipse.equinox.internal.p2.metadata.repository.CompositeMetadataRepository.<init>(CompositeMetadataRepository.java:106)
	at org.eclipse.equinox.internal.p2.metadata.repository.CompositeMetadataRepositoryFactory.load(CompositeMetadataRepositoryFactory.java:122)
	at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.factoryLoad(MetadataRepositoryManager.java:57)
	at org.eclipse.equinox.internal.p2.repository.helpers.AbstractRepositoryManager.loadRepository(AbstractRepositoryManager.java:768)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.oomph.util.ReflectUtil.invokeMethod(ReflectUtil.java:116)
	at org.eclipse.oomph.p2.internal.core.CachingRepositoryManager.loadRepository(CachingRepositoryManager.java:337)
	at org.eclipse.oomph.p2.internal.core.CachingRepositoryManager.loadRepository(CachingRepositoryManager.java:144)
	at org.eclipse.oomph.p2.internal.core.CachingRepositoryManager$Metadata.loadRepository(CachingRepositoryManager.java:387)
	at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.loadRepository(MetadataRepositoryManager.java:96)
	at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.loadRepository(MetadataRepositoryManager.java:92)
	at org.eclipse.equinox.internal.p2.updatechecker.UpdateChecker.getAvailableRepositories(UpdateChecker.java:151)
	at org.eclipse.equinox.internal.p2.updatechecker.UpdateChecker.checkForUpdates(UpdateChecker.java:129)
	at org.eclipse.equinox.internal.p2.updatechecker.UpdateChecker$UpdateCheckThread.run(UpdateChecker.java:73)
!SUBENTRY 1 org.eclipse.equinox.p2.metadata.repository 4 1000 2016-03-23 10:13:58.292
!MESSAGE No repository found at http://download.eclipse.org/releases/mars/201602261000.

!ENTRY org.eclipse.ui.workbench 4 2 2016-03-23 11:25:18.051
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.ui.workbench".
!STACK 0
java.lang.IllegalStateException: Expected the service to be TERMINATED, but the service has FAILED
	at com.google.common.util.concurrent.AbstractService.checkCurrentState(AbstractService.java:334)
	at com.google.common.util.concurrent.AbstractService.awaitTerminated(AbstractService.java:303)
	at com.google.common.util.concurrent.AbstractIdleService.awaitTerminated(AbstractIdleService.java:191)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.close(ProjectTypesIndex.java:221)
	at org.eclipse.recommenders.internal.types.rcp.IndexProvider.close(IndexProvider.java:59)
	at org.eclipse.recommenders.internal.types.rcp.TypesIndexService$ShutdownListener.postShutdown(TypesIndexService.java:142)
	at org.eclipse.ui.internal.Workbench$8.run(Workbench.java:971)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:50)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:173)
	at org.eclipse.ui.internal.Workbench.firePostShutdown(Workbench.java:968)
	at org.eclipse.ui.internal.Workbench.shutdown(Workbench.java:3152)
	at org.eclipse.ui.internal.Workbench.busyClose(Workbench.java:1161)
	at org.eclipse.ui.internal.Workbench.access$21(Workbench.java:1073)
	at org.eclipse.ui.internal.Workbench$19.run(Workbench.java:1414)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.ui.internal.Workbench.close(Workbench.java:1411)
	at org.eclipse.ui.internal.Workbench.close(Workbench.java:1384)
	at org.eclipse.ui.internal.Workbench$58.handleEvent(Workbench.java:2906)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4219)
	at org.eclipse.swt.widgets.Display.applicationProc(Display.java:5349)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Display.applicationNextEventMatchingMask(Display.java:5051)
	at org.eclipse.swt.widgets.Display.applicationProc(Display.java:5432)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSApplication.nextEventMatchingMask(NSApplication.java:94)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3692)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:1127)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1018)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:156)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:654)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:598)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:139)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:380)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:235)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:669)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:608)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1515)
Caused by: java.io.FileNotFoundException: /Users/admin/Desktop/main/.metadata/.plugins/org.eclipse.recommenders.types.rcp/indexes/TaskScheduler/_2h.fnm (No such file or directory)
	at java.io.RandomAccessFile.open(Native Method)
	at java.io.RandomAccessFile.<init>(RandomAccessFile.java:241)
	at org.apache.lucene.store.SimpleFSDirectory$SimpleFSIndexInput$Descriptor.<init>(SimpleFSDirectory.java:70)
	at org.apache.lucene.store.SimpleFSDirectory$SimpleFSIndexInput.<init>(SimpleFSDirectory.java:97)
	at org.apache.lucene.store.NIOFSDirectory$NIOFSIndexInput.<init>(NIOFSDirectory.java:92)
	at org.apache.lucene.store.NIOFSDirectory.openInput(NIOFSDirectory.java:79)
	at org.apache.lucene.store.FSDirectory.openInput(FSDirectory.java:345)
	at org.apache.lucene.index.FieldInfos.<init>(FieldInfos.java:74)
	at org.apache.lucene.index.IndexWriter.getFieldInfos(IndexWriter.java:1222)
	at org.apache.lucene.index.IndexWriter.getCurrentFieldInfos(IndexWriter.java:1238)
	at org.apache.lucene.index.IndexWriter.<init>(IndexWriter.java:1171)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.initialize(ProjectTypesIndex.java:138)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.startUp(ProjectTypesIndex.java:125)
	at com.google.common.util.concurrent.AbstractIdleService$2$1.run(AbstractIdleService.java:54)
	at com.google.common.util.concurrent.Callables$3.run(Callables.java:93)
	at java.lang.Thread.run(Thread.java:745)
!SESSION 2016-03-30 08:05:37.705 -----------------------------------------------
eclipse.buildId=4.5.1.M20150904-0015
java.version=1.7.0_79
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/admin/.eclipse_keyring -showlocation
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/admin/.eclipse_keyring -showlocation

!ENTRY org.eclipse.m2e.logback.appender 4 0 2016-03-30 08:09:04.826
!MESSAGE Cannot download published Gradle versions.
!STACK 0
java.net.UnknownHostException: services.gradle.org
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:178)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:625)
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:160)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:275)
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:371)
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:933)
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1301)
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:254)
	at com.gradleware.tooling.toolingutils.distribution.PublishedGradleVersions.downloadVersionInformation(PublishedGradleVersions.java:167)
	at com.gradleware.tooling.toolingutils.distribution.PublishedGradleVersions.create(PublishedGradleVersions.java:134)
	at org.eclipse.buildship.core.util.gradle.PublishedGradleVersionsWrapper.create(PublishedGradleVersionsWrapper.java:40)
	at org.eclipse.buildship.core.util.gradle.PublishedGradleVersionsWrapper.<init>(PublishedGradleVersionsWrapper.java:35)
	at org.eclipse.buildship.core.CorePlugin.createPublishedGradleVersions(CorePlugin.java:166)
	at org.eclipse.buildship.core.CorePlugin.registerServices(CorePlugin.java:139)
	at org.eclipse.buildship.core.CorePlugin.start(CorePlugin.java:102)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$3.run(BundleContextImpl.java:771)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$3.run(BundleContextImpl.java:1)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:764)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:721)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:941)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:318)
	at org.eclipse.osgi.container.Module.doStart(Module.java:571)
	at org.eclipse.osgi.container.Module.start(Module.java:439)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:454)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:107)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:531)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:324)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:327)
	at org.eclipse.osgi.internal.loader.sources.SingleSourcePackage.loadClass(SingleSourcePackage.java:36)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:398)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:352)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:344)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:160)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.lang.Class.privateGetDeclaredConstructors(Class.java:2585)
	at java.lang.Class.getConstructor0(Class.java:2885)
	at java.lang.Class.newInstance(Class.java:350)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.loadBundleActivator(BundleContextImpl.java:755)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:706)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:941)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:318)
	at org.eclipse.osgi.container.Module.doStart(Module.java:571)
	at org.eclipse.osgi.container.Module.start(Module.java:439)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:454)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:107)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:531)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:324)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:327)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:402)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:352)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:344)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:160)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.loadClass(EquinoxBundle.java:573)
	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:174)
	at org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension(ExtensionRegistry.java:905)
	at org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:243)
	at org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(ConfigurationElementHandle.java:55)
	at org.eclipse.ui.internal.console.ConsolePageParticipantExtension.createDelegate(ConsolePageParticipantExtension.java:72)
	at org.eclipse.ui.internal.console.ConsoleManager.getPageParticipants(ConsoleManager.java:455)
	at org.eclipse.ui.internal.console.ConsoleView.doCreatePage(ConsoleView.java:317)
	at org.eclipse.ui.part.PageBookView.createPage(PageBookView.java:422)
	at org.eclipse.ui.part.PageBookView.partActivated(PageBookView.java:768)
	at org.eclipse.ui.internal.console.ConsoleView$4.run(ConsoleView.java:398)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:135)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4024)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3700)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:1127)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1018)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:156)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:654)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:598)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:139)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:380)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:235)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:669)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:608)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1515)

!ENTRY org.eclipse.jdt.ui 4 10001 2016-03-30 08:21:21.314
!MESSAGE Internal Error
!STACK 1
Java Model Exception: Java Model Status [executeCommand(String) [in TaskManager [in [Working copy] TaskManager.java [in <default> [in src [in TaskScheduler]]]]] does not exist]
	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException(JavaElement.java:556)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:590)
	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:316)
	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:302)
	at org.eclipse.jdt.internal.core.SourceRefElement.getSourceRange(SourceRefElement.java:218)
	at org.eclipse.jdt.internal.core.Member.getJavadocRange(Member.java:291)
	at org.eclipse.jdt.internal.ui.text.javadoc.JavadocContentAccess2.getHTMLContentFromSource(JavadocContentAccess2.java:653)
	at org.eclipse.jdt.internal.ui.text.javadoc.JavadocContentAccess2.getHTMLContent(JavadocContentAccess2.java:529)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:721)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:639)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:631)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:129)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:85)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)
!SUBENTRY 1 org.eclipse.jdt.core 4 969 2016-03-30 08:21:21.315
!MESSAGE executeCommand(String) [in TaskManager [in [Working copy] TaskManager.java [in <default> [in src [in TaskScheduler]]]]] does not exist
!SESSION 2016-04-05 09:14:35.839 -----------------------------------------------
eclipse.buildId=4.5.1.M20150904-0015
java.version=1.7.0_79
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/admin/.eclipse_keyring -showlocation
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/admin/.eclipse_keyring -showlocation

!ENTRY org.eclipse.core.net 1 0 2016-04-05 09:14:37.199
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences

!ENTRY org.eclipse.core.resources 2 10035 2016-04-05 09:14:39.500
!MESSAGE The workspace exited with unsaved changes in the previous session; refreshing workspace to recover changes.

!ENTRY org.eclipse.wb.core 4 4 2016-04-05 10:36:21.250
!MESSAGE Designer [1.8.0.r45x201506110820.201604051036]: Execution flow problem. {
  EventQueue.invokeLater(new Runnable(){
    public void run(){
      try {
        ApplicationWindow window=new ApplicationWindow();
        window.frame.setVisible(true);
      }
 catch (      Exception e) {
        e.printStackTrace();
      }
    }
  }
);
}
 expected, but EventQueue.invokeLater(new Runnable(){
  public void run(){
    try {
      ApplicationWindow window=new ApplicationWindow();
      window.frame.setVisible(true);
    }
 catch (    Exception e) {
      e.printStackTrace();
    }
  }
}
);
 found.
!STACK 0
org.eclipse.wb.internal.core.utils.check.AssertionFailedException: Execution flow problem. {
  EventQueue.invokeLater(new Runnable(){
    public void run(){
      try {
        ApplicationWindow window=new ApplicationWindow();
        window.frame.setVisible(true);
      }
 catch (      Exception e) {
        e.printStackTrace();
      }
    }
  }
);
}
 expected, but EventQueue.invokeLater(new Runnable(){
  public void run(){
    try {
      ApplicationWindow window=new ApplicationWindow();
      window.frame.setVisible(true);
    }
 catch (    Exception e) {
      e.printStackTrace();
    }
  }
}
);
 found.
	at org.eclipse.wb.internal.core.utils.check.Assert.fail(Assert.java:225)
	at org.eclipse.wb.internal.core.utils.check.Assert.isTrue(Assert.java:291)
	at org.eclipse.wb.core.eval.ExecutionFlowDescription.leaveStatement(ExecutionFlowDescription.java:152)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:317)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils2.trackValues(ExecutionFlowUtils2.java:172)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils2.ensureValues(ExecutionFlowUtils2.java:166)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils2.getValue(ExecutionFlowUtils2.java:140)
	at org.eclipse.wb.internal.core.parser.JavaInfoResolver.getJavaInfo0(JavaInfoResolver.java:179)
	at org.eclipse.wb.internal.core.parser.JavaInfoResolver.getJavaInfo(JavaInfoResolver.java:140)
	at org.eclipse.wb.core.model.JavaInfo.getChildRepresentedBy(JavaInfo.java:1085)
	at org.eclipse.wb.core.model.JavaInfo.isRepresentedBy(JavaInfo.java:1076)
	at org.eclipse.wb.core.model.JavaInfo.getMethodInvocations(JavaInfo.java:893)
	at org.eclipse.wb.core.model.JavaInfo.getMethodInvocation(JavaInfo.java:906)
	at org.eclipse.wb.internal.core.model.property.accessor.SetterAccessor.getMethodInvocation(SetterAccessor.java:210)
	at org.eclipse.wb.internal.core.model.property.accessor.SetterAccessor.getExpression(SetterAccessor.java:118)
	at org.eclipse.wb.internal.core.model.property.GenericPropertyImpl.getExpressionInfo(GenericPropertyImpl.java:419)
	at org.eclipse.wb.internal.core.model.property.GenericPropertyImpl.isModified(GenericPropertyImpl.java:110)
	at org.eclipse.wb.internal.core.model.property.table.PropertyTable.rawProperties_shouldShow(PropertyTable.java:823)
	at org.eclipse.wb.internal.core.model.property.table.PropertyTable.setInput0(PropertyTable.java:772)
	at org.eclipse.wb.internal.core.model.property.table.PropertyTable.setInput(PropertyTable.java:746)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage.showProperties(ComponentsPropertiesPage.java:571)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage.access$21(ComponentsPropertiesPage.java:564)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage$12.run(ComponentsPropertiesPage.java:535)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runLog(ExecutionUtils.java:106)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage.refreshProperties(ComponentsPropertiesPage.java:530)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage.setSelection(ComponentsPropertiesPage.java:321)
	at org.eclipse.wb.internal.core.editor.structure.DesignComponentsComposite$1.selectionChanged(DesignComponentsComposite.java:72)
	at org.eclipse.wb.internal.core.utils.gef.EditPartsSelectionProvider.fireSelectionChanged(EditPartsSelectionProvider.java:111)
	at org.eclipse.wb.internal.core.utils.gef.EditPartsSelectionProvider.access$0(EditPartsSelectionProvider.java:102)
	at org.eclipse.wb.internal.core.utils.gef.EditPartsSelectionProvider$1.selectionChanged(EditPartsSelectionProvider.java:40)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.fireSelectionChanged(AbstractEditPartViewer.java:202)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.setSelection(AbstractEditPartViewer.java:262)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.setSelection(AbstractEditPartViewer.java:193)
	at org.eclipse.wb.internal.gef.tree.TreeViewer$1.widgetSelected(TreeViewer.java:180)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:248)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1491)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1514)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1499)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1299)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4072)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3698)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.waitEventLoop(ExecutionUtils.java:71)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:168)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runLaterAndWait(SwingUtils.java:73)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.execRefreshOperation(ComponentInfo.java:119)
	at org.eclipse.wb.core.model.ObjectInfo.refresh(ObjectInfo.java:482)
	at org.eclipse.wb.core.model.ObjectInfo.endEdit(ObjectInfo.java:446)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:325)
	at org.eclipse.wb.core.gef.command.EditCommand.execute(EditCommand.java:50)
	at org.eclipse.wb.internal.gef.core.EditDomain.executeCommand(EditDomain.java:59)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.executeCommand(TreeDropListener.java:265)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.drop(TreeDropListener.java:103)
	at org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:91)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1491)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1514)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1499)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1299)
	at org.eclipse.swt.dnd.DropTarget.drop(DropTarget.java:728)
	at org.eclipse.swt.dnd.DropTarget.outlineView_acceptDrop_item_childIndex(DropTarget.java:746)
	at org.eclipse.swt.dnd.DropTarget.dropTargetProc(DropTarget.java:471)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.dnd.DropTarget.dndCallSuper(DropTarget.java:210)
	at org.eclipse.swt.dnd.DropTarget.performDragOperation(DropTarget.java:739)
	at org.eclipse.swt.dnd.DropTarget.dropTargetProc(DropTarget.java:456)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:227)
	at org.eclipse.swt.widgets.Widget.mouseDownSuper(Widget.java:1121)
	at org.eclipse.swt.widgets.Tree.mouseDownSuper(Tree.java:2047)
	at org.eclipse.swt.widgets.Widget.mouseDown(Widget.java:1113)
	at org.eclipse.swt.widgets.Control.mouseDown(Control.java:2569)
	at org.eclipse.swt.widgets.Tree.mouseDown(Tree.java:2015)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5692)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:227)
	at org.eclipse.swt.widgets.Widget.windowSendEvent(Widget.java:2130)
	at org.eclipse.swt.widgets.Shell.windowSendEvent(Shell.java:2337)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5756)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Display.applicationSendEvent(Display.java:5193)
	at org.eclipse.swt.widgets.Display.applicationProc(Display.java:5342)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSApplication.sendEvent(NSApplication.java:128)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3695)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:1127)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1018)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:156)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:654)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:598)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:139)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:380)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:235)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:669)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:608)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1515)

!ENTRY org.eclipse.wb.core 4 4 2016-04-05 10:36:22.171
!MESSAGE Designer [1.8.0.r45x201506110820.201604051036]: Execution flow problem. frame=new JFrame();
 expected, but panel_1.add(lblSnaptask);
 found.
!STACK 0
org.eclipse.wb.internal.core.utils.check.AssertionFailedException: Execution flow problem. frame=new JFrame();
 expected, but panel_1.add(lblSnaptask);
 found.
	at org.eclipse.wb.internal.core.utils.check.Assert.fail(Assert.java:225)
	at org.eclipse.wb.internal.core.utils.check.Assert.isTrue(Assert.java:291)
	at org.eclipse.wb.core.eval.ExecutionFlowDescription.leaveStatement(ExecutionFlowDescription.java:152)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:317)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.access$1(ExecutionFlowUtils.java:235)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:442)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:391)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$f9355dd3.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:241)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2759)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:145)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:421)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:389)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$f9355dd3.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:316)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2759)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:263)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2782)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:267)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2782)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:137)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2759)
	at org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:250)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2782)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:137)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2759)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:635)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2782)
	at org.eclipse.jdt.core.dom.AnonymousClassDeclaration.accept0(AnonymousClassDeclaration.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2759)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:314)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2782)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:239)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2759)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:145)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.core.model.JavaInfo.refresh_create(JavaInfo.java:1199)
	at org.eclipse.wb.core.model.ObjectInfo.refreshCreate0(ObjectInfo.java:550)
	at org.eclipse.wb.core.model.ObjectInfo.access$0(ObjectInfo.java:546)
	at org.eclipse.wb.core.model.ObjectInfo$5$1.run(ObjectInfo.java:486)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:145)
	at org.eclipse.wb.core.model.ObjectInfo$5.run(ObjectInfo.java:484)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$2.run(SwingUtils.java:76)
	at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:312)
	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:745)
	at java.awt.EventQueue.access$300(EventQueue.java:103)
	at java.awt.EventQueue$3.run(EventQueue.java:706)
	at java.awt.EventQueue$3.run(EventQueue.java:704)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.awt.EventQueue.dispatchEvent(EventQueue.java:715)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:242)
	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:161)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:150)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:146)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:138)
	at java.awt.EventDispatchThread.run(EventDispatchThread.java:91)

!ENTRY org.eclipse.ui 4 0 2016-04-05 10:36:22.274
!MESSAGE Unhandled event loop exception
!STACK 0
org.eclipse.core.runtime.AssertionFailedException: null argument:
	at org.eclipse.core.runtime.Assert.isNotNull(Assert.java:85)
	at org.eclipse.core.runtime.Assert.isNotNull(Assert.java:73)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.setSelection(AbstractEditPartViewer.java:249)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.resetSelectionFromModels(TreeDropListener.java:141)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.drop(TreeDropListener.java:107)
	at org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:91)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1491)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1514)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1499)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1299)
	at org.eclipse.swt.dnd.DropTarget.drop(DropTarget.java:728)
	at org.eclipse.swt.dnd.DropTarget.outlineView_acceptDrop_item_childIndex(DropTarget.java:746)
	at org.eclipse.swt.dnd.DropTarget.dropTargetProc(DropTarget.java:471)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.dnd.DropTarget.dndCallSuper(DropTarget.java:210)
	at org.eclipse.swt.dnd.DropTarget.performDragOperation(DropTarget.java:739)
	at org.eclipse.swt.dnd.DropTarget.dropTargetProc(DropTarget.java:456)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:227)
	at org.eclipse.swt.widgets.Widget.mouseDownSuper(Widget.java:1121)
	at org.eclipse.swt.widgets.Tree.mouseDownSuper(Tree.java:2047)
	at org.eclipse.swt.widgets.Widget.mouseDown(Widget.java:1113)
	at org.eclipse.swt.widgets.Control.mouseDown(Control.java:2569)
	at org.eclipse.swt.widgets.Tree.mouseDown(Tree.java:2015)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5692)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:227)
	at org.eclipse.swt.widgets.Widget.windowSendEvent(Widget.java:2130)
	at org.eclipse.swt.widgets.Shell.windowSendEvent(Shell.java:2337)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5756)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Display.applicationSendEvent(Display.java:5193)
	at org.eclipse.swt.widgets.Display.applicationProc(Display.java:5342)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSApplication.sendEvent(NSApplication.java:128)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3695)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:1127)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1018)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:156)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:654)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:598)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:139)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:380)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:235)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:669)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:608)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1515)

!ENTRY org.eclipse.wb.core 4 4 2016-04-05 10:55:26.537
!MESSAGE Designer [1.8.0.r45x201506110820.201604051036]: Execution flow problem. EventQueue.invokeLater(new Runnable(){
  public void run(){
    try {
      ApplicationWindow window=new ApplicationWindow();
      window.frame.setVisible(true);
    }
 catch (    Exception e) {
      e.printStackTrace();
    }
  }
}
);
 expected, but initialize();
 found.
!STACK 0
org.eclipse.wb.internal.core.utils.check.AssertionFailedException: Execution flow problem. EventQueue.invokeLater(new Runnable(){
  public void run(){
    try {
      ApplicationWindow window=new ApplicationWindow();
      window.frame.setVisible(true);
    }
 catch (    Exception e) {
      e.printStackTrace();
    }
  }
}
);
 expected, but initialize();
 found.
	at org.eclipse.wb.internal.core.utils.check.Assert.fail(Assert.java:225)
	at org.eclipse.wb.internal.core.utils.check.Assert.isTrue(Assert.java:291)
	at org.eclipse.wb.core.eval.ExecutionFlowDescription.leaveStatement(ExecutionFlowDescription.java:152)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:317)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils2.trackValues(ExecutionFlowUtils2.java:172)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils2.ensureValues(ExecutionFlowUtils2.java:166)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils2.getValue(ExecutionFlowUtils2.java:140)
	at org.eclipse.wb.internal.core.parser.JavaInfoResolver.getJavaInfo0(JavaInfoResolver.java:179)
	at org.eclipse.wb.internal.core.parser.JavaInfoResolver.getJavaInfo(JavaInfoResolver.java:140)
	at org.eclipse.wb.core.model.JavaInfo.getChildRepresentedBy(JavaInfo.java:1085)
	at org.eclipse.wb.core.model.JavaInfo.isRepresentedBy(JavaInfo.java:1076)
	at org.eclipse.wb.core.model.JavaInfo.getMethodInvocations(JavaInfo.java:893)
	at org.eclipse.wb.core.model.JavaInfo.getMethodInvocation(JavaInfo.java:906)
	at org.eclipse.wb.internal.core.model.property.accessor.SetterAccessor.getMethodInvocation(SetterAccessor.java:210)
	at org.eclipse.wb.internal.core.model.property.accessor.SetterAccessor.getExpression(SetterAccessor.java:118)
	at org.eclipse.wb.internal.core.model.property.GenericPropertyImpl.getExpressionInfo(GenericPropertyImpl.java:419)
	at org.eclipse.wb.internal.core.model.property.GenericPropertyImpl.isModified(GenericPropertyImpl.java:110)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage.update_defaultValueAction(ComponentsPropertiesPage.java:476)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage.access$5(ComponentsPropertiesPage.java:474)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage$4$1.run(ComponentsPropertiesPage.java:256)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runLog(ExecutionUtils.java:106)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage$4.selectionChanged(ComponentsPropertiesPage.java:254)
	at org.eclipse.wb.internal.core.model.property.table.PropertyTable.setActivePropertyInfo(PropertyTable.java:986)
	at org.eclipse.wb.internal.core.model.property.table.PropertyTable.setInput0(PropertyTable.java:806)
	at org.eclipse.wb.internal.core.model.property.table.PropertyTable.setInput(PropertyTable.java:746)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage.showProperties(ComponentsPropertiesPage.java:571)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage.access$21(ComponentsPropertiesPage.java:564)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage$12.run(ComponentsPropertiesPage.java:535)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runLog(ExecutionUtils.java:106)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage.refreshProperties(ComponentsPropertiesPage.java:530)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage.setSelection(ComponentsPropertiesPage.java:321)
	at org.eclipse.wb.internal.core.editor.structure.DesignComponentsComposite$1.selectionChanged(DesignComponentsComposite.java:72)
	at org.eclipse.wb.internal.core.utils.gef.EditPartsSelectionProvider.fireSelectionChanged(EditPartsSelectionProvider.java:111)
	at org.eclipse.wb.internal.core.utils.gef.EditPartsSelectionProvider.access$0(EditPartsSelectionProvider.java:102)
	at org.eclipse.wb.internal.core.utils.gef.EditPartsSelectionProvider$1.selectionChanged(EditPartsSelectionProvider.java:40)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.fireSelectionChanged(AbstractEditPartViewer.java:202)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.setSelection(AbstractEditPartViewer.java:262)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.setSelection(AbstractEditPartViewer.java:193)
	at org.eclipse.wb.internal.gef.tree.TreeViewer$1.widgetSelected(TreeViewer.java:180)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:248)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1491)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1514)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1499)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1299)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4072)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3698)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.waitEventLoop(ExecutionUtils.java:71)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:168)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runLaterAndWait(SwingUtils.java:73)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.execRefreshOperation(ComponentInfo.java:119)
	at org.eclipse.wb.core.model.ObjectInfo.refresh(ObjectInfo.java:482)
	at org.eclipse.wb.core.model.ObjectInfo.endEdit(ObjectInfo.java:446)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:325)
	at org.eclipse.wb.core.gef.command.EditCommand.execute(EditCommand.java:50)
	at org.eclipse.wb.internal.gef.core.EditDomain.executeCommand(EditDomain.java:59)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.executeCommand(TreeDropListener.java:265)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.drop(TreeDropListener.java:103)
	at org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:91)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1491)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1514)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1499)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1299)
	at org.eclipse.swt.dnd.DropTarget.drop(DropTarget.java:728)
	at org.eclipse.swt.dnd.DropTarget.outlineView_acceptDrop_item_childIndex(DropTarget.java:746)
	at org.eclipse.swt.dnd.DropTarget.dropTargetProc(DropTarget.java:471)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.dnd.DropTarget.dndCallSuper(DropTarget.java:210)
	at org.eclipse.swt.dnd.DropTarget.performDragOperation(DropTarget.java:739)
	at org.eclipse.swt.dnd.DropTarget.dropTargetProc(DropTarget.java:456)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:227)
	at org.eclipse.swt.widgets.Widget.mouseDownSuper(Widget.java:1121)
	at org.eclipse.swt.widgets.Tree.mouseDownSuper(Tree.java:2047)
	at org.eclipse.swt.widgets.Widget.mouseDown(Widget.java:1113)
	at org.eclipse.swt.widgets.Control.mouseDown(Control.java:2569)
	at org.eclipse.swt.widgets.Tree.mouseDown(Tree.java:2015)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5692)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:227)
	at org.eclipse.swt.widgets.Widget.windowSendEvent(Widget.java:2130)
	at org.eclipse.swt.widgets.Shell.windowSendEvent(Shell.java:2337)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5756)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Display.applicationSendEvent(Display.java:5193)
	at org.eclipse.swt.widgets.Display.applicationProc(Display.java:5342)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSApplication.sendEvent(NSApplication.java:128)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3695)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:1127)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1018)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:156)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:654)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:598)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:139)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:380)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:235)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:669)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:608)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1515)

!ENTRY org.eclipse.wb.core 4 4 2016-04-05 10:55:27.141
!MESSAGE Designer [1.8.0.r45x201506110820.201604051036]: Index: 0, Size: 0
!STACK 0
java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.ArrayList.rangeCheck(ArrayList.java:635)
	at java.util.ArrayList.get(ArrayList.java:411)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.updateTargetRequestAfter(TreeDropListener.java:176)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.dragOperationChanged(TreeDropListener.java:76)
	at org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:111)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1491)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1514)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1499)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1299)
	at org.eclipse.swt.dnd.DropTarget.draggingUpdated(DropTarget.java:319)
	at org.eclipse.swt.dnd.DropTarget.dropTargetProc(DropTarget.java:452)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Display.applicationNextEventMatchingMask(Display.java:5051)
	at org.eclipse.swt.widgets.Display.applicationProc(Display.java:5432)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSApplication.nextEventMatchingMask(NSApplication.java:94)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3692)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.waitEventLoop(ExecutionUtils.java:71)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:168)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runLaterAndWait(SwingUtils.java:73)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils.disposeWindow(SwingImageUtils.java:313)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_dispose(ComponentInfo.java:125)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.refresh_dispose(ContainerInfo.java:237)
	at org.eclipse.wb.internal.core.editor.DesignPage$5.run(DesignPage.java:348)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runLog(ExecutionUtils.java:106)
	at org.eclipse.wb.internal.core.editor.DesignPage.disposeAll(DesignPage.java:346)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleDesignException(DesignPage.java:641)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$8(DesignPage.java:632)
	at org.eclipse.wb.internal.core.editor.DesignPage$9.handleException(DesignPage.java:564)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:330)
	at org.eclipse.wb.core.gef.command.EditCommand.execute(EditCommand.java:50)
	at org.eclipse.wb.internal.gef.core.EditDomain.executeCommand(EditDomain.java:59)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.executeCommand(TreeDropListener.java:265)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.drop(TreeDropListener.java:103)
	at org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:91)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1491)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1514)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1499)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1299)
	at org.eclipse.swt.dnd.DropTarget.drop(DropTarget.java:728)
	at org.eclipse.swt.dnd.DropTarget.outlineView_acceptDrop_item_childIndex(DropTarget.java:746)
	at org.eclipse.swt.dnd.DropTarget.dropTargetProc(DropTarget.java:471)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.dnd.DropTarget.dndCallSuper(DropTarget.java:210)
	at org.eclipse.swt.dnd.DropTarget.performDragOperation(DropTarget.java:739)
	at org.eclipse.swt.dnd.DropTarget.dropTargetProc(DropTarget.java:456)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:227)
	at org.eclipse.swt.widgets.Widget.mouseDownSuper(Widget.java:1121)
	at org.eclipse.swt.widgets.Tree.mouseDownSuper(Tree.java:2047)
	at org.eclipse.swt.widgets.Widget.mouseDown(Widget.java:1113)
	at org.eclipse.swt.widgets.Control.mouseDown(Control.java:2569)
	at org.eclipse.swt.widgets.Tree.mouseDown(Tree.java:2015)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5692)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:227)
	at org.eclipse.swt.widgets.Widget.windowSendEvent(Widget.java:2130)
	at org.eclipse.swt.widgets.Shell.windowSendEvent(Shell.java:2337)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5756)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Display.applicationSendEvent(Display.java:5193)
	at org.eclipse.swt.widgets.Display.applicationProc(Display.java:5342)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSApplication.sendEvent(NSApplication.java:128)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3695)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:1127)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1018)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:156)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:654)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:598)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:139)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:380)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:235)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:669)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:608)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1515)

!ENTRY org.eclipse.wb.core 4 4 2016-04-05 10:55:27.154
!MESSAGE Designer [1.8.0.r45x201506110820.201604051036]: Execution flow problem. frame=new JFrame();
 expected, but txtpnIncomplete.setBackground(new Color(255,165,0));
 found.
!STACK 0
org.eclipse.wb.internal.core.utils.check.AssertionFailedException: Execution flow problem. frame=new JFrame();
 expected, but txtpnIncomplete.setBackground(new Color(255,165,0));
 found.
	at org.eclipse.wb.internal.core.utils.check.Assert.fail(Assert.java:225)
	at org.eclipse.wb.internal.core.utils.check.Assert.isTrue(Assert.java:291)
	at org.eclipse.wb.core.eval.ExecutionFlowDescription.leaveStatement(ExecutionFlowDescription.java:152)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:317)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.access$1(ExecutionFlowUtils.java:235)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:442)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:391)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$f9355dd3.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:241)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2759)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:145)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:421)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:389)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$f9355dd3.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:316)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2759)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:263)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2782)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:267)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2782)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:137)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2759)
	at org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:250)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2782)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:137)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2759)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:635)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2782)
	at org.eclipse.jdt.core.dom.AnonymousClassDeclaration.accept0(AnonymousClassDeclaration.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2759)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:314)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2782)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:239)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2759)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:145)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.core.model.JavaInfo.refresh_create(JavaInfo.java:1199)
	at org.eclipse.wb.core.model.ObjectInfo.refreshCreate0(ObjectInfo.java:550)
	at org.eclipse.wb.core.model.ObjectInfo.access$0(ObjectInfo.java:546)
	at org.eclipse.wb.core.model.ObjectInfo$5$1.run(ObjectInfo.java:486)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:145)
	at org.eclipse.wb.core.model.ObjectInfo$5.run(ObjectInfo.java:484)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$2.run(SwingUtils.java:76)
	at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:312)
	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:745)
	at java.awt.EventQueue.access$300(EventQueue.java:103)
	at java.awt.EventQueue$3.run(EventQueue.java:706)
	at java.awt.EventQueue$3.run(EventQueue.java:704)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.awt.EventQueue.dispatchEvent(EventQueue.java:715)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:242)
	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:161)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:150)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:146)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:138)
	at java.awt.EventDispatchThread.run(EventDispatchThread.java:91)

!ENTRY org.eclipse.ui 4 0 2016-04-05 10:55:27.749
!MESSAGE Unhandled event loop exception
!STACK 0
org.eclipse.core.runtime.AssertionFailedException: null argument:
	at org.eclipse.core.runtime.Assert.isNotNull(Assert.java:85)
	at org.eclipse.core.runtime.Assert.isNotNull(Assert.java:73)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.setSelection(AbstractEditPartViewer.java:249)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.resetSelectionFromModels(TreeDropListener.java:141)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.drop(TreeDropListener.java:107)
	at org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:91)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1491)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1514)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1499)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1299)
	at org.eclipse.swt.dnd.DropTarget.drop(DropTarget.java:728)
	at org.eclipse.swt.dnd.DropTarget.outlineView_acceptDrop_item_childIndex(DropTarget.java:746)
	at org.eclipse.swt.dnd.DropTarget.dropTargetProc(DropTarget.java:471)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.dnd.DropTarget.dndCallSuper(DropTarget.java:210)
	at org.eclipse.swt.dnd.DropTarget.performDragOperation(DropTarget.java:739)
	at org.eclipse.swt.dnd.DropTarget.dropTargetProc(DropTarget.java:456)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:227)
	at org.eclipse.swt.widgets.Widget.mouseDownSuper(Widget.java:1121)
	at org.eclipse.swt.widgets.Tree.mouseDownSuper(Tree.java:2047)
	at org.eclipse.swt.widgets.Widget.mouseDown(Widget.java:1113)
	at org.eclipse.swt.widgets.Control.mouseDown(Control.java:2569)
	at org.eclipse.swt.widgets.Tree.mouseDown(Tree.java:2015)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5692)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:227)
	at org.eclipse.swt.widgets.Widget.windowSendEvent(Widget.java:2130)
	at org.eclipse.swt.widgets.Shell.windowSendEvent(Shell.java:2337)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5756)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Display.applicationSendEvent(Display.java:5193)
	at org.eclipse.swt.widgets.Display.applicationProc(Display.java:5342)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSApplication.sendEvent(NSApplication.java:128)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3695)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:1127)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1018)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:156)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:654)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:598)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:139)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:380)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:235)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:669)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:608)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1515)

!ENTRY org.eclipse.recommenders.rcp 2 15 2016-04-05 11:22:04.082
!MESSAGE Failed to parse news feed
!STACK 0
java.net.UnknownHostException: www.codetrails.com: nodename nor servname provided, or not known
	at java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)
	at java.net.InetAddress$1.lookupAllHostAddr(InetAddress.java:901)
	at java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1295)
	at java.net.InetAddress.getAllByName0(InetAddress.java:1248)
	at java.net.InetAddress.getAllByName(InetAddress.java:1164)
	at java.net.InetAddress.getAllByName(InetAddress.java:1098)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:44)
	at org.apache.http.impl.conn.HttpClientConnectionOperator.connect(HttpClientConnectionOperator.java:102)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:319)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:363)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:219)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:195)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:86)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:108)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:184)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:82)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:57)
	at org.apache.http.client.fluent.Executor.execute(Executor.java:206)
	at org.eclipse.recommenders.internal.rcp.news.CheckForProjectNewsJob.getRSSFeed(CheckForProjectNewsJob.java:138)
	at org.eclipse.recommenders.internal.rcp.news.CheckForProjectNewsJob.doRun(CheckForProjectNewsJob.java:89)
	at org.eclipse.recommenders.internal.rcp.news.CheckForProjectNewsJob.run(CheckForProjectNewsJob.java:62)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
!SESSION 2016-04-05 13:16:35.116 -----------------------------------------------
eclipse.buildId=4.5.1.M20150904-0015
java.version=1.7.0_79
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/admin/.eclipse_keyring -showlocation
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/admin/.eclipse_keyring -showlocation

!ENTRY org.eclipse.core.net 1 0 2016-04-05 13:16:36.449
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences

!ENTRY org.eclipse.core.resources 2 10035 2016-04-05 13:16:38.875
!MESSAGE The workspace exited with unsaved changes in the previous session; refreshing workspace to recover changes.
!SESSION 2016-04-05 13:17:23.460 -----------------------------------------------
eclipse.buildId=4.5.1.M20150904-0015
java.version=1.7.0_79
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/admin/.eclipse_keyring -showlocation
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/admin/.eclipse_keyring -showlocation

!ENTRY org.eclipse.core.net 1 0 2016-04-05 13:17:24.502
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences

!ENTRY org.eclipse.core.resources 2 10035 2016-04-05 13:17:26.996
!MESSAGE The workspace exited with unsaved changes in the previous session; refreshing workspace to recover changes.

!ENTRY org.eclipse.recommenders.rcp 2 15 2016-04-05 15:33:18.118
!MESSAGE Failed to parse news feed
!STACK 0
java.net.UnknownHostException: www.codetrails.com: nodename nor servname provided, or not known
	at java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)
	at java.net.InetAddress$1.lookupAllHostAddr(InetAddress.java:901)
	at java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1295)
	at java.net.InetAddress.getAllByName0(InetAddress.java:1248)
	at java.net.InetAddress.getAllByName(InetAddress.java:1164)
	at java.net.InetAddress.getAllByName(InetAddress.java:1098)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:44)
	at org.apache.http.impl.conn.HttpClientConnectionOperator.connect(HttpClientConnectionOperator.java:102)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:319)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:363)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:219)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:195)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:86)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:108)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:184)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:82)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:57)
	at org.apache.http.client.fluent.Executor.execute(Executor.java:206)
	at org.eclipse.recommenders.internal.rcp.news.CheckForProjectNewsJob.getRSSFeed(CheckForProjectNewsJob.java:138)
	at org.eclipse.recommenders.internal.rcp.news.CheckForProjectNewsJob.doRun(CheckForProjectNewsJob.java:89)
	at org.eclipse.recommenders.internal.rcp.news.CheckForProjectNewsJob.run(CheckForProjectNewsJob.java:62)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)

!ENTRY org.eclipse.ui 4 0 2016-04-06 06:29:15.483
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.ArrayList.rangeCheck(ArrayList.java:635)
	at java.util.ArrayList.get(ArrayList.java:411)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.updateTargetRequestAfter(TreeDropListener.java:176)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.dragOver(TreeDropListener.java:86)
	at org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:81)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1491)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1514)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1499)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1299)
	at org.eclipse.swt.dnd.DropTarget.draggingUpdated(DropTarget.java:319)
	at org.eclipse.swt.dnd.DropTarget.dropTargetProc(DropTarget.java:452)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:227)
	at org.eclipse.swt.widgets.Widget.mouseDownSuper(Widget.java:1121)
	at org.eclipse.swt.widgets.Tree.mouseDownSuper(Tree.java:2047)
	at org.eclipse.swt.widgets.Widget.mouseDown(Widget.java:1113)
	at org.eclipse.swt.widgets.Control.mouseDown(Control.java:2569)
	at org.eclipse.swt.widgets.Tree.mouseDown(Tree.java:2015)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5692)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:227)
	at org.eclipse.swt.widgets.Widget.windowSendEvent(Widget.java:2130)
	at org.eclipse.swt.widgets.Shell.windowSendEvent(Shell.java:2337)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5756)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Display.applicationSendEvent(Display.java:5193)
	at org.eclipse.swt.widgets.Display.applicationProc(Display.java:5342)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSApplication.sendEvent(NSApplication.java:128)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3695)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:1127)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1018)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:156)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:654)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:598)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:139)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:380)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:235)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:669)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:608)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1515)
!SESSION 2016-04-06 07:30:30.434 -----------------------------------------------
eclipse.buildId=4.5.1.M20150904-0015
java.version=1.7.0_79
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/admin/.eclipse_keyring -showlocation
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/admin/.eclipse_keyring -showlocation

!ENTRY org.eclipse.core.net 1 0 2016-04-06 07:30:31.767
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences

!ENTRY org.eclipse.core.resources 2 10035 2016-04-06 07:30:37.905
!MESSAGE The workspace exited with unsaved changes in the previous session; refreshing workspace to recover changes.

!ENTRY org.eclipse.ui.workbench 4 2 2016-04-06 08:35:12.768
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.ui.workbench".
!STACK 0
java.lang.IllegalStateException: Expected the service to be TERMINATED, but the service has FAILED
	at com.google.common.util.concurrent.AbstractService.checkCurrentState(AbstractService.java:334)
	at com.google.common.util.concurrent.AbstractService.awaitTerminated(AbstractService.java:303)
	at com.google.common.util.concurrent.AbstractIdleService.awaitTerminated(AbstractIdleService.java:191)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.close(ProjectTypesIndex.java:221)
	at org.eclipse.recommenders.internal.types.rcp.IndexProvider.close(IndexProvider.java:59)
	at org.eclipse.recommenders.internal.types.rcp.TypesIndexService$ShutdownListener.postShutdown(TypesIndexService.java:142)
	at org.eclipse.ui.internal.Workbench$8.run(Workbench.java:971)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:50)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:173)
	at org.eclipse.ui.internal.Workbench.firePostShutdown(Workbench.java:968)
	at org.eclipse.ui.internal.Workbench.shutdown(Workbench.java:3152)
	at org.eclipse.ui.internal.Workbench.busyClose(Workbench.java:1161)
	at org.eclipse.ui.internal.Workbench.access$21(Workbench.java:1073)
	at org.eclipse.ui.internal.Workbench$19.run(Workbench.java:1414)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.ui.internal.Workbench.close(Workbench.java:1411)
	at org.eclipse.ui.internal.Workbench.close(Workbench.java:1384)
	at org.eclipse.ui.internal.WorkbenchWindow.busyClose(WorkbenchWindow.java:1571)
	at org.eclipse.ui.internal.WorkbenchWindow.access$16(WorkbenchWindow.java:1542)
	at org.eclipse.ui.internal.WorkbenchWindow$11.run(WorkbenchWindow.java:1603)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.ui.internal.WorkbenchWindow.close(WorkbenchWindow.java:1600)
	at org.eclipse.ui.internal.WorkbenchWindow.close(WorkbenchWindow.java:1614)
	at org.eclipse.ui.internal.WorkbenchWindow$6.close(WorkbenchWindow.java:523)
	at org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer$7.shellClosed(WBWRenderer.java:518)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:98)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1491)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1514)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1499)
	at org.eclipse.swt.widgets.Shell.closeWidget(Shell.java:612)
	at org.eclipse.swt.widgets.Shell.windowShouldClose(Shell.java:2367)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5690)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:227)
	at org.eclipse.swt.widgets.Widget.windowSendEvent(Widget.java:2130)
	at org.eclipse.swt.widgets.Shell.windowSendEvent(Shell.java:2337)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5756)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Display.applicationSendEvent(Display.java:5193)
	at org.eclipse.swt.widgets.Display.applicationProc(Display.java:5342)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSApplication.sendEvent(NSApplication.java:128)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3695)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:1127)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1018)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:156)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:654)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:598)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:139)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:380)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:235)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:669)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:608)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1515)
Caused by: java.io.FileNotFoundException: /Users/admin/Desktop/main/.metadata/.plugins/org.eclipse.recommenders.types.rcp/indexes/TaskScheduler/_2h.fnm (No such file or directory)
	at java.io.RandomAccessFile.open(Native Method)
	at java.io.RandomAccessFile.<init>(RandomAccessFile.java:241)
	at org.apache.lucene.store.SimpleFSDirectory$SimpleFSIndexInput$Descriptor.<init>(SimpleFSDirectory.java:70)
	at org.apache.lucene.store.SimpleFSDirectory$SimpleFSIndexInput.<init>(SimpleFSDirectory.java:97)
	at org.apache.lucene.store.NIOFSDirectory$NIOFSIndexInput.<init>(NIOFSDirectory.java:92)
	at org.apache.lucene.store.NIOFSDirectory.openInput(NIOFSDirectory.java:79)
	at org.apache.lucene.store.FSDirectory.openInput(FSDirectory.java:345)
	at org.apache.lucene.index.FieldInfos.<init>(FieldInfos.java:74)
	at org.apache.lucene.index.IndexWriter.getFieldInfos(IndexWriter.java:1222)
	at org.apache.lucene.index.IndexWriter.getCurrentFieldInfos(IndexWriter.java:1238)
	at org.apache.lucene.index.IndexWriter.<init>(IndexWriter.java:1171)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.initialize(ProjectTypesIndex.java:138)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.startUp(ProjectTypesIndex.java:125)
	at com.google.common.util.concurrent.AbstractIdleService$2$1.run(AbstractIdleService.java:54)
	at com.google.common.util.concurrent.Callables$3.run(Callables.java:93)
	at java.lang.Thread.run(Thread.java:745)
!SESSION 2016-04-06 09:53:22.104 -----------------------------------------------
eclipse.buildId=4.5.1.M20150904-0015
java.version=1.7.0_79
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/admin/.eclipse_keyring -showlocation
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/admin/.eclipse_keyring -showlocation

!ENTRY org.eclipse.core.net 1 0 2016-04-06 09:53:23.165
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences

!ENTRY org.eclipse.equinox.p2.transport.ecf 4 1002 2016-04-06 10:03:53.591
!MESSAGE Unable to read repository at http://download.eclipse.org/windowbuilder/WB/release/R201506241200-1/4.5/content.xml.
!STACK 0
org.apache.http.NoHttpResponseException: download.eclipse.org failed to respond
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:143)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:57)
	at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:260)
	at org.apache.http.impl.AbstractHttpClientConnection.receiveResponseHeader(AbstractHttpClientConnection.java:283)
	at org.apache.http.impl.conn.DefaultClientConnection.receiveResponseHeader(DefaultClientConnection.java:251)
	at org.apache.http.impl.conn.ManagedClientConnectionImpl.receiveResponseHeader(ManagedClientConnectionImpl.java:197)
	at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:271)
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:123)
	at org.apache.http.impl.client.DefaultRequestDirector.tryExecute(DefaultRequestDirector.java:685)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:487)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:863)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:82)
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientFileSystemBrowser.runRequest(HttpClientFileSystemBrowser.java:259)
	at org.eclipse.ecf.provider.filetransfer.browse.AbstractFileSystemBrowser$DirectoryJob.run(AbstractFileSystemBrowser.java:69)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)

!ENTRY org.eclipse.equinox.p2.transport.ecf 4 1002 2016-04-06 10:07:57.499
!MESSAGE HTTP Server 'Service Unavailable': http://download.eclipse.org/eclipse/updates/4.5/content.xml
!STACK 1
org.eclipse.ecf.filetransfer.BrowseFileTransferException: HttpComponents connection error response code 503.
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientFileSystemBrowser.runRequest(HttpClientFileSystemBrowser.java:289)
	at org.eclipse.ecf.provider.filetransfer.browse.AbstractFileSystemBrowser$DirectoryJob.run(AbstractFileSystemBrowser.java:69)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
!SUBENTRY 1 org.eclipse.ecf.identity 4 0 2016-04-06 10:07:57.500
!MESSAGE HttpComponents connection error response code 503.

!ENTRY org.eclipse.equinox.p2.transport.ecf 4 1002 2016-04-06 10:11:01.176
!MESSAGE HTTP Server 'Service Unavailable': http://download.eclipse.org/mylyn/releases/mars/compositeContent.xml
!STACK 1
org.eclipse.ecf.filetransfer.BrowseFileTransferException: HttpComponents connection error response code 503.
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientFileSystemBrowser.runRequest(HttpClientFileSystemBrowser.java:289)
	at org.eclipse.ecf.provider.filetransfer.browse.AbstractFileSystemBrowser$DirectoryJob.run(AbstractFileSystemBrowser.java:69)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
!SUBENTRY 1 org.eclipse.ecf.identity 4 0 2016-04-06 10:11:01.177
!MESSAGE HttpComponents connection error response code 503.

!ENTRY org.eclipse.equinox.p2.core 4 0 2016-04-06 10:16:31.914
!MESSAGE Provisioning exception
!STACK 1
org.eclipse.equinox.p2.core.ProvisionException: HTTP Server 'Service Unavailable': http://download.eclipse.org/windowbuilder/WB/release/R201506241200-1/4.5/features/org.eclipse.wb.swing.doc.user.feature_1.8.0.r45x201506110839.jar
	at org.eclipse.equinox.internal.p2.updatesite.UpdateSite.parseFeature(UpdateSite.java:282)
	at org.eclipse.equinox.internal.p2.updatesite.UpdateSite.loadFeaturesFromSite(UpdateSite.java:578)
	at org.eclipse.equinox.internal.p2.updatesite.UpdateSite.loadFeatures(UpdateSite.java:474)
	at org.eclipse.equinox.internal.p2.updatesite.RemoteFeaturesAction.perform(RemoteFeaturesAction.java:39)
	at org.eclipse.equinox.internal.p2.updatesite.RemoteUpdateSiteAction.perform(RemoteUpdateSiteAction.java:50)
	at org.eclipse.equinox.p2.publisher.Publisher$ArtifactProcess.run(Publisher.java:207)
	at org.eclipse.equinox.p2.publisher.Publisher.publish(Publisher.java:237)
	at org.eclipse.equinox.internal.p2.updatesite.metadata.UpdateSiteMetadataRepositoryFactory.generateMetadata(UpdateSiteMetadataRepositoryFactory.java:120)
	at org.eclipse.equinox.internal.p2.updatesite.metadata.UpdateSiteMetadataRepositoryFactory.initializeRepository(UpdateSiteMetadataRepositoryFactory.java:105)
	at org.eclipse.equinox.internal.p2.updatesite.metadata.UpdateSiteMetadataRepositoryFactory.load(UpdateSiteMetadataRepositoryFactory.java:59)
	at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.factoryLoad(MetadataRepositoryManager.java:57)
	at org.eclipse.equinox.internal.p2.repository.helpers.AbstractRepositoryManager.loadRepository(AbstractRepositoryManager.java:768)
	at sun.reflect.GeneratedMethodAccessor61.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.oomph.util.ReflectUtil.invokeMethod(ReflectUtil.java:116)
	at org.eclipse.oomph.p2.internal.core.CachingRepositoryManager.loadRepository(CachingRepositoryManager.java:337)
	at org.eclipse.oomph.p2.internal.core.CachingRepositoryManager.loadRepository(CachingRepositoryManager.java:144)
	at org.eclipse.oomph.p2.internal.core.CachingRepositoryManager$Metadata.loadRepository(CachingRepositoryManager.java:387)
	at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.loadRepository(MetadataRepositoryManager.java:96)
	at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.loadRepository(MetadataRepositoryManager.java:92)
	at org.eclipse.equinox.p2.engine.ProvisioningContext.loadMetadataRepository(ProvisioningContext.java:211)
	at org.eclipse.equinox.p2.engine.ProvisioningContext.getLoadedMetadataRepositories(ProvisioningContext.java:194)
	at org.eclipse.equinox.p2.engine.ProvisioningContext.getMetadata(ProvisioningContext.java:275)
	at org.eclipse.equinox.internal.p2.director.SimplePlanner.updatesFor(SimplePlanner.java:784)
	at org.eclipse.equinox.p2.operations.UpdateOperation.updatesFor(UpdateOperation.java:142)
	at org.eclipse.equinox.p2.operations.UpdateOperation.computeProfileChangeRequest(UpdateOperation.java:179)
	at org.eclipse.equinox.p2.operations.UpdateOperation$1.run(UpdateOperation.java:323)
	at org.eclipse.equinox.internal.p2.operations.SearchForUpdatesResolutionJob.runModal(SearchForUpdatesResolutionJob.java:37)
	at org.eclipse.equinox.p2.operations.ProfileChangeOperation.resolveModal(ProfileChangeOperation.java:115)
	at org.eclipse.equinox.internal.p2.ui.sdk.scheduler.AutomaticUpdater.updatesAvailable(AutomaticUpdater.java:106)
	at org.eclipse.equinox.internal.p2.ui.sdk.scheduler.AutomaticUpdater.updatesAvailable(AutomaticUpdater.java:91)
	at org.eclipse.equinox.internal.p2.ui.sdk.scheduler.AutomaticUpdateScheduler$1.updatesAvailable(AutomaticUpdateScheduler.java:160)
	at org.eclipse.equinox.internal.p2.updatechecker.UpdateChecker$UpdateCheckThread.run(UpdateChecker.java:78)
Caused by: org.eclipse.ecf.filetransfer.IncomingFileTransferException: HttpComponents connection error response code 503.
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.openStreams(HttpClientRetrieveFileTransfer.java:662)
	at org.eclipse.ecf.provider.filetransfer.retrieve.AbstractRetrieveFileTransfer.sendRetrieveRequest(AbstractRetrieveFileTransfer.java:885)
	at org.eclipse.ecf.provider.filetransfer.retrieve.MultiProtocolRetrieveAdapter.sendRetrieveRequest(MultiProtocolRetrieveAdapter.java:146)
	at org.eclipse.equinox.internal.p2.transport.ecf.FileReader.sendRetrieveRequest(FileReader.java:424)
	at org.eclipse.equinox.internal.p2.transport.ecf.FileReader.readInto(FileReader.java:358)
	at org.eclipse.equinox.internal.p2.transport.ecf.RepositoryTransport.download(RepositoryTransport.java:101)
	at org.eclipse.oomph.p2.internal.core.CachingTransport.download(CachingTransport.java:113)
	at org.eclipse.oomph.p2.internal.core.CachingTransport.download(CachingTransport.java:204)
	at org.eclipse.equinox.internal.p2.updatesite.UpdateSite.parseFeature(UpdateSite.java:267)
	... 33 more
!SUBENTRY 1 org.eclipse.equinox.p2.transport.ecf 4 1002 2016-04-06 10:16:31.915
!MESSAGE HTTP Server 'Service Unavailable': http://download.eclipse.org/windowbuilder/WB/release/R201506241200-1/4.5/features/org.eclipse.wb.swing.doc.user.feature_1.8.0.r45x201506110839.jar
!STACK 1
org.eclipse.ecf.filetransfer.IncomingFileTransferException: HttpComponents connection error response code 503.
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.openStreams(HttpClientRetrieveFileTransfer.java:662)
	at org.eclipse.ecf.provider.filetransfer.retrieve.AbstractRetrieveFileTransfer.sendRetrieveRequest(AbstractRetrieveFileTransfer.java:885)
	at org.eclipse.ecf.provider.filetransfer.retrieve.MultiProtocolRetrieveAdapter.sendRetrieveRequest(MultiProtocolRetrieveAdapter.java:146)
	at org.eclipse.equinox.internal.p2.transport.ecf.FileReader.sendRetrieveRequest(FileReader.java:424)
	at org.eclipse.equinox.internal.p2.transport.ecf.FileReader.readInto(FileReader.java:358)
	at org.eclipse.equinox.internal.p2.transport.ecf.RepositoryTransport.download(RepositoryTransport.java:101)
	at org.eclipse.oomph.p2.internal.core.CachingTransport.download(CachingTransport.java:113)
	at org.eclipse.oomph.p2.internal.core.CachingTransport.download(CachingTransport.java:204)
	at org.eclipse.equinox.internal.p2.updatesite.UpdateSite.parseFeature(UpdateSite.java:267)
	at org.eclipse.equinox.internal.p2.updatesite.UpdateSite.loadFeaturesFromSite(UpdateSite.java:578)
	at org.eclipse.equinox.internal.p2.updatesite.UpdateSite.loadFeatures(UpdateSite.java:474)
	at org.eclipse.equinox.internal.p2.updatesite.RemoteFeaturesAction.perform(RemoteFeaturesAction.java:39)
	at org.eclipse.equinox.internal.p2.updatesite.RemoteUpdateSiteAction.perform(RemoteUpdateSiteAction.java:50)
	at org.eclipse.equinox.p2.publisher.Publisher$ArtifactProcess.run(Publisher.java:207)
	at org.eclipse.equinox.p2.publisher.Publisher.publish(Publisher.java:237)
	at org.eclipse.equinox.internal.p2.updatesite.metadata.UpdateSiteMetadataRepositoryFactory.generateMetadata(UpdateSiteMetadataRepositoryFactory.java:120)
	at org.eclipse.equinox.internal.p2.updatesite.metadata.UpdateSiteMetadataRepositoryFactory.initializeRepository(UpdateSiteMetadataRepositoryFactory.java:105)
	at org.eclipse.equinox.internal.p2.updatesite.metadata.UpdateSiteMetadataRepositoryFactory.load(UpdateSiteMetadataRepositoryFactory.java:59)
	at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.factoryLoad(MetadataRepositoryManager.java:57)
	at org.eclipse.equinox.internal.p2.repository.helpers.AbstractRepositoryManager.loadRepository(AbstractRepositoryManager.java:768)
	at sun.reflect.GeneratedMethodAccessor61.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.oomph.util.ReflectUtil.invokeMethod(ReflectUtil.java:116)
	at org.eclipse.oomph.p2.internal.core.CachingRepositoryManager.loadRepository(CachingRepositoryManager.java:337)
	at org.eclipse.oomph.p2.internal.core.CachingRepositoryManager.loadRepository(CachingRepositoryManager.java:144)
	at org.eclipse.oomph.p2.internal.core.CachingRepositoryManager$Metadata.loadRepository(CachingRepositoryManager.java:387)
	at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.loadRepository(MetadataRepositoryManager.java:96)
	at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.loadRepository(MetadataRepositoryManager.java:92)
	at org.eclipse.equinox.p2.engine.ProvisioningContext.loadMetadataRepository(ProvisioningContext.java:211)
	at org.eclipse.equinox.p2.engine.ProvisioningContext.getLoadedMetadataRepositories(ProvisioningContext.java:194)
	at org.eclipse.equinox.p2.engine.ProvisioningContext.getMetadata(ProvisioningContext.java:275)
	at org.eclipse.equinox.internal.p2.director.SimplePlanner.updatesFor(SimplePlanner.java:784)
	at org.eclipse.equinox.p2.operations.UpdateOperation.updatesFor(UpdateOperation.java:142)
	at org.eclipse.equinox.p2.operations.UpdateOperation.computeProfileChangeRequest(UpdateOperation.java:179)
	at org.eclipse.equinox.p2.operations.UpdateOperation$1.run(UpdateOperation.java:323)
	at org.eclipse.equinox.internal.p2.operations.SearchForUpdatesResolutionJob.runModal(SearchForUpdatesResolutionJob.java:37)
	at org.eclipse.equinox.p2.operations.ProfileChangeOperation.resolveModal(ProfileChangeOperation.java:115)
	at org.eclipse.equinox.internal.p2.ui.sdk.scheduler.AutomaticUpdater.updatesAvailable(AutomaticUpdater.java:106)
	at org.eclipse.equinox.internal.p2.ui.sdk.scheduler.AutomaticUpdater.updatesAvailable(AutomaticUpdater.java:91)
	at org.eclipse.equinox.internal.p2.ui.sdk.scheduler.AutomaticUpdateScheduler$1.updatesAvailable(AutomaticUpdateScheduler.java:160)
	at org.eclipse.equinox.internal.p2.updatechecker.UpdateChecker$UpdateCheckThread.run(UpdateChecker.java:78)
!SUBENTRY 2 org.eclipse.ecf.identity 4 0 2016-04-06 10:16:31.915
!MESSAGE HttpComponents connection error response code 503.

!ENTRY org.eclipse.equinox.p2.updatesite 4 0 2016-04-06 10:16:31.916
!MESSAGE Error reading feature http://download.eclipse.org/windowbuilder/WB/release/R201506241200-1/4.5/features/org.eclipse.wb.swing.doc.user.feature_1.8.0.r45x201506110839.jar.

!ENTRY org.eclipse.equinox.p2.core 4 0 2016-04-06 10:23:28.619
!MESSAGE Provisioning exception
!STACK 1
org.eclipse.equinox.p2.core.ProvisionException: HTTP Server 'Service Unavailable': http://download.eclipse.org/mylyn/drops/3.17.0/v20150909-1855/site.xml
	at org.eclipse.equinox.internal.p2.updatesite.UpdateSite.loadActualSiteFile(UpdateSite.java:236)
	at org.eclipse.equinox.internal.p2.updatesite.UpdateSite.load(UpdateSite.java:147)
	at org.eclipse.equinox.internal.p2.updatesite.metadata.UpdateSiteMetadataRepositoryFactory.initializeRepository(UpdateSiteMetadataRepositoryFactory.java:99)
	at org.eclipse.equinox.internal.p2.updatesite.metadata.UpdateSiteMetadataRepositoryFactory.load(UpdateSiteMetadataRepositoryFactory.java:59)
	at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.factoryLoad(MetadataRepositoryManager.java:57)
	at org.eclipse.equinox.internal.p2.repository.helpers.AbstractRepositoryManager.loadRepository(AbstractRepositoryManager.java:768)
	at sun.reflect.GeneratedMethodAccessor61.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.oomph.util.ReflectUtil.invokeMethod(ReflectUtil.java:116)
	at org.eclipse.oomph.p2.internal.core.CachingRepositoryManager.loadRepository(CachingRepositoryManager.java:337)
	at org.eclipse.oomph.p2.internal.core.CachingRepositoryManager.loadRepository(CachingRepositoryManager.java:144)
	at org.eclipse.oomph.p2.internal.core.CachingRepositoryManager$Metadata.loadRepository(CachingRepositoryManager.java:387)
	at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.loadRepository(MetadataRepositoryManager.java:96)
	at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.loadRepository(MetadataRepositoryManager.java:92)
	at org.eclipse.equinox.internal.p2.metadata.repository.CompositeMetadataRepository.addChild(CompositeMetadataRepository.java:166)
	at org.eclipse.equinox.internal.p2.metadata.repository.CompositeMetadataRepository.<init>(CompositeMetadataRepository.java:106)
	at org.eclipse.equinox.internal.p2.metadata.repository.CompositeMetadataRepositoryFactory.load(CompositeMetadataRepositoryFactory.java:122)
	at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.factoryLoad(MetadataRepositoryManager.java:57)
	at org.eclipse.equinox.internal.p2.repository.helpers.AbstractRepositoryManager.loadRepository(AbstractRepositoryManager.java:768)
	at sun.reflect.GeneratedMethodAccessor61.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.oomph.util.ReflectUtil.invokeMethod(ReflectUtil.java:116)
	at org.eclipse.oomph.p2.internal.core.CachingRepositoryManager.loadRepository(CachingRepositoryManager.java:337)
	at org.eclipse.oomph.p2.internal.core.CachingRepositoryManager.loadRepository(CachingRepositoryManager.java:144)
	at org.eclipse.oomph.p2.internal.core.CachingRepositoryManager$Metadata.loadRepository(CachingRepositoryManager.java:387)
	at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.loadRepository(MetadataRepositoryManager.java:96)
	at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.loadRepository(MetadataRepositoryManager.java:92)
	at org.eclipse.equinox.p2.engine.ProvisioningContext.loadMetadataRepository(ProvisioningContext.java:211)
	at org.eclipse.equinox.p2.engine.ProvisioningContext.getLoadedMetadataRepositories(ProvisioningContext.java:194)
	at org.eclipse.equinox.p2.engine.ProvisioningContext.getMetadata(ProvisioningContext.java:275)
	at org.eclipse.equinox.internal.p2.director.SimplePlanner.updatesFor(SimplePlanner.java:784)
	at org.eclipse.equinox.p2.operations.UpdateOperation.updatesFor(UpdateOperation.java:142)
	at org.eclipse.equinox.p2.operations.UpdateOperation.computeProfileChangeRequest(UpdateOperation.java:179)
	at org.eclipse.equinox.p2.operations.UpdateOperation$1.run(UpdateOperation.java:323)
	at org.eclipse.equinox.internal.p2.operations.SearchForUpdatesResolutionJob.runModal(SearchForUpdatesResolutionJob.java:37)
	at org.eclipse.equinox.p2.operations.ProfileChangeOperation.resolveModal(ProfileChangeOperation.java:115)
	at org.eclipse.equinox.internal.p2.ui.sdk.scheduler.AutomaticUpdater.updatesAvailable(AutomaticUpdater.java:106)
	at org.eclipse.equinox.internal.p2.ui.sdk.scheduler.AutomaticUpdater.updatesAvailable(AutomaticUpdater.java:91)
	at org.eclipse.equinox.internal.p2.ui.sdk.scheduler.AutomaticUpdateScheduler$1.updatesAvailable(AutomaticUpdateScheduler.java:160)
	at org.eclipse.equinox.internal.p2.updatechecker.UpdateChecker$UpdateCheckThread.run(UpdateChecker.java:78)
Caused by: org.eclipse.ecf.filetransfer.IncomingFileTransferException: HttpComponents connection error response code 503.
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.openStreams(HttpClientRetrieveFileTransfer.java:662)
	at org.eclipse.ecf.provider.filetransfer.retrieve.AbstractRetrieveFileTransfer.sendRetrieveRequest(AbstractRetrieveFileTransfer.java:885)
	at org.eclipse.ecf.provider.filetransfer.retrieve.MultiProtocolRetrieveAdapter.sendRetrieveRequest(MultiProtocolRetrieveAdapter.java:146)
	at org.eclipse.equinox.internal.p2.transport.ecf.FileReader.sendRetrieveRequest(FileReader.java:424)
	at org.eclipse.equinox.internal.p2.transport.ecf.FileReader.readInto(FileReader.java:358)
	at org.eclipse.equinox.internal.p2.transport.ecf.RepositoryTransport.download(RepositoryTransport.java:101)
	at org.eclipse.oomph.p2.internal.core.CachingTransport.download(CachingTransport.java:149)
	at org.eclipse.oomph.p2.internal.core.CachingTransport.download(CachingTransport.java:204)
	at org.eclipse.equinox.internal.p2.updatesite.UpdateSite.loadActualSiteFile(UpdateSite.java:205)
	... 41 more
!SUBENTRY 1 org.eclipse.equinox.p2.transport.ecf 4 1002 2016-04-06 10:23:28.620
!MESSAGE HTTP Server 'Service Unavailable': http://download.eclipse.org/mylyn/drops/3.17.0/v20150909-1855/site.xml
!STACK 1
org.eclipse.ecf.filetransfer.IncomingFileTransferException: HttpComponents connection error response code 503.
	at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientRetrieveFileTransfer.openStreams(HttpClientRetrieveFileTransfer.java:662)
	at org.eclipse.ecf.provider.filetransfer.retrieve.AbstractRetrieveFileTransfer.sendRetrieveRequest(AbstractRetrieveFileTransfer.java:885)
	at org.eclipse.ecf.provider.filetransfer.retrieve.MultiProtocolRetrieveAdapter.sendRetrieveRequest(MultiProtocolRetrieveAdapter.java:146)
	at org.eclipse.equinox.internal.p2.transport.ecf.FileReader.sendRetrieveRequest(FileReader.java:424)
	at org.eclipse.equinox.internal.p2.transport.ecf.FileReader.readInto(FileReader.java:358)
	at org.eclipse.equinox.internal.p2.transport.ecf.RepositoryTransport.download(RepositoryTransport.java:101)
	at org.eclipse.oomph.p2.internal.core.CachingTransport.download(CachingTransport.java:149)
	at org.eclipse.oomph.p2.internal.core.CachingTransport.download(CachingTransport.java:204)
	at org.eclipse.equinox.internal.p2.updatesite.UpdateSite.loadActualSiteFile(UpdateSite.java:205)
	at org.eclipse.equinox.internal.p2.updatesite.UpdateSite.load(UpdateSite.java:147)
	at org.eclipse.equinox.internal.p2.updatesite.metadata.UpdateSiteMetadataRepositoryFactory.initializeRepository(UpdateSiteMetadataRepositoryFactory.java:99)
	at org.eclipse.equinox.internal.p2.updatesite.metadata.UpdateSiteMetadataRepositoryFactory.load(UpdateSiteMetadataRepositoryFactory.java:59)
	at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.factoryLoad(MetadataRepositoryManager.java:57)
	at org.eclipse.equinox.internal.p2.repository.helpers.AbstractRepositoryManager.loadRepository(AbstractRepositoryManager.java:768)
	at sun.reflect.GeneratedMethodAccessor61.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.oomph.util.ReflectUtil.invokeMethod(ReflectUtil.java:116)
	at org.eclipse.oomph.p2.internal.core.CachingRepositoryManager.loadRepository(CachingRepositoryManager.java:337)
	at org.eclipse.oomph.p2.internal.core.CachingRepositoryManager.loadRepository(CachingRepositoryManager.java:144)
	at org.eclipse.oomph.p2.internal.core.CachingRepositoryManager$Metadata.loadRepository(CachingRepositoryManager.java:387)
	at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.loadRepository(MetadataRepositoryManager.java:96)
	at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.loadRepository(MetadataRepositoryManager.java:92)
	at org.eclipse.equinox.internal.p2.metadata.repository.CompositeMetadataRepository.addChild(CompositeMetadataRepository.java:166)
	at org.eclipse.equinox.internal.p2.metadata.repository.CompositeMetadataRepository.<init>(CompositeMetadataRepository.java:106)
	at org.eclipse.equinox.internal.p2.metadata.repository.CompositeMetadataRepositoryFactory.load(CompositeMetadataRepositoryFactory.java:122)
	at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.factoryLoad(MetadataRepositoryManager.java:57)
	at org.eclipse.equinox.internal.p2.repository.helpers.AbstractRepositoryManager.loadRepository(AbstractRepositoryManager.java:768)
	at sun.reflect.GeneratedMethodAccessor61.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.oomph.util.ReflectUtil.invokeMethod(ReflectUtil.java:116)
	at org.eclipse.oomph.p2.internal.core.CachingRepositoryManager.loadRepository(CachingRepositoryManager.java:337)
	at org.eclipse.oomph.p2.internal.core.CachingRepositoryManager.loadRepository(CachingRepositoryManager.java:144)
	at org.eclipse.oomph.p2.internal.core.CachingRepositoryManager$Metadata.loadRepository(CachingRepositoryManager.java:387)
	at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.loadRepository(MetadataRepositoryManager.java:96)
	at org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager.loadRepository(MetadataRepositoryManager.java:92)
	at org.eclipse.equinox.p2.engine.ProvisioningContext.loadMetadataRepository(ProvisioningContext.java:211)
	at org.eclipse.equinox.p2.engine.ProvisioningContext.getLoadedMetadataRepositories(ProvisioningContext.java:194)
	at org.eclipse.equinox.p2.engine.ProvisioningContext.getMetadata(ProvisioningContext.java:275)
	at org.eclipse.equinox.internal.p2.director.SimplePlanner.updatesFor(SimplePlanner.java:784)
	at org.eclipse.equinox.p2.operations.UpdateOperation.updatesFor(UpdateOperation.java:142)
	at org.eclipse.equinox.p2.operations.UpdateOperation.computeProfileChangeRequest(UpdateOperation.java:179)
	at org.eclipse.equinox.p2.operations.UpdateOperation$1.run(UpdateOperation.java:323)
	at org.eclipse.equinox.internal.p2.operations.SearchForUpdatesResolutionJob.runModal(SearchForUpdatesResolutionJob.java:37)
	at org.eclipse.equinox.p2.operations.ProfileChangeOperation.resolveModal(ProfileChangeOperation.java:115)
	at org.eclipse.equinox.internal.p2.ui.sdk.scheduler.AutomaticUpdater.updatesAvailable(AutomaticUpdater.java:106)
	at org.eclipse.equinox.internal.p2.ui.sdk.scheduler.AutomaticUpdater.updatesAvailable(AutomaticUpdater.java:91)
	at org.eclipse.equinox.internal.p2.ui.sdk.scheduler.AutomaticUpdateScheduler$1.updatesAvailable(AutomaticUpdateScheduler.java:160)
	at org.eclipse.equinox.internal.p2.updatechecker.UpdateChecker$UpdateCheckThread.run(UpdateChecker.java:78)
!SUBENTRY 2 org.eclipse.ecf.identity 4 0 2016-04-06 10:23:28.620
!MESSAGE HttpComponents connection error response code 503.
!SESSION 2016-04-07 15:16:53.659 -----------------------------------------------
eclipse.buildId=4.5.1.M20150904-0015
java.version=1.7.0_79
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/admin/.eclipse_keyring -showlocation
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/admin/.eclipse_keyring -showlocation

!ENTRY org.eclipse.core.net 1 0 2016-04-07 15:16:54.835
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences
!SESSION 2016-04-08 19:49:19.051 -----------------------------------------------
eclipse.buildId=4.5.1.M20150904-0015
java.version=1.7.0_79
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product -product org.eclipse.epp.package.java.product -keyring /Users/admin/.eclipse_keyring -showlocation
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -data /Users/admin/Desktop/main -product org.eclipse.epp.package.java.product -keyring /Users/admin/.eclipse_keyring -showlocation

!ENTRY org.eclipse.core.net 1 0 2016-04-08 19:49:20.128
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences

!ENTRY org.eclipse.wb.core 4 4 2016-04-08 20:01:37.059
!MESSAGE Designer [1.8.0.r45x201506110820.201604082001]: Execution flow problem. EventQueue.invokeLater(new Runnable(){
  public void run(){
    try {
      taskManager=TaskManager.getInstance();
      ApplicationWindow window=new ApplicationWindow();
      window.frame.setVisible(true);
      window.frame.setResizable(false);
    }
 catch (    Exception e) {
      e.printStackTrace();
    }
  }
}
);
 expected, but {
  initialize();
}
 found.
!STACK 0
org.eclipse.wb.internal.core.utils.check.AssertionFailedException: Execution flow problem. EventQueue.invokeLater(new Runnable(){
  public void run(){
    try {
      taskManager=TaskManager.getInstance();
      ApplicationWindow window=new ApplicationWindow();
      window.frame.setVisible(true);
      window.frame.setResizable(false);
    }
 catch (    Exception e) {
      e.printStackTrace();
    }
  }
}
);
 expected, but {
  initialize();
}
 found.
	at org.eclipse.wb.internal.core.utils.check.Assert.fail(Assert.java:225)
	at org.eclipse.wb.internal.core.utils.check.Assert.isTrue(Assert.java:291)
	at org.eclipse.wb.core.eval.ExecutionFlowDescription.leaveStatement(ExecutionFlowDescription.java:152)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:317)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.prepareAssignmentInformation(ExecutionFlowUtils.java:784)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.getVariableCachedValue(ExecutionFlowUtils.java:753)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.getVariableCachedList_notNull(ExecutionFlowUtils.java:707)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.getReferences(ExecutionFlowUtils.java:669)
	at org.eclipse.wb.internal.core.model.variable.AbstractNamedVariableSupport.getReferences(AbstractNamedVariableSupport.java:184)
	at org.eclipse.wb.internal.core.model.variable.FieldUniqueVariableSupport.canConvertFieldToLocal(FieldUniqueVariableSupport.java:97)
	at org.eclipse.wb.internal.core.editor.structure.property.JavaPropertiesToolBarContributor.addVariableConvertAction(JavaPropertiesToolBarContributor.java:101)
	at org.eclipse.wb.internal.core.editor.structure.property.JavaPropertiesToolBarContributor.contributeToolBar(JavaPropertiesToolBarContributor.java:54)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage$2$1.run(ComponentsPropertiesPage.java:186)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runLog(ExecutionUtils.java:106)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage$2.run(ComponentsPropertiesPage.java:184)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runLog(ExecutionUtils.java:106)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage.updateActions(ComponentsPropertiesPage.java:160)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage.access$22(ComponentsPropertiesPage.java:159)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage$12.run(ComponentsPropertiesPage.java:538)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runLog(ExecutionUtils.java:106)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage.refreshProperties(ComponentsPropertiesPage.java:530)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage.setSelection(ComponentsPropertiesPage.java:321)
	at org.eclipse.wb.internal.core.editor.structure.DesignComponentsComposite$1.selectionChanged(DesignComponentsComposite.java:72)
	at org.eclipse.wb.internal.core.utils.gef.EditPartsSelectionProvider.fireSelectionChanged(EditPartsSelectionProvider.java:111)
	at org.eclipse.wb.internal.core.utils.gef.EditPartsSelectionProvider.access$0(EditPartsSelectionProvider.java:102)
	at org.eclipse.wb.internal.core.utils.gef.EditPartsSelectionProvider$1.selectionChanged(EditPartsSelectionProvider.java:40)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.fireSelectionChanged(AbstractEditPartViewer.java:202)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.setSelection(AbstractEditPartViewer.java:262)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.setSelection(AbstractEditPartViewer.java:193)
	at org.eclipse.wb.internal.gef.tree.TreeViewer$1.widgetSelected(TreeViewer.java:180)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:248)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1491)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1514)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1499)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1299)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4072)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3698)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.waitEventLoop(ExecutionUtils.java:71)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:168)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runLaterAndWait(SwingUtils.java:73)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.execRefreshOperation(ComponentInfo.java:119)
	at org.eclipse.wb.core.model.ObjectInfo.refresh(ObjectInfo.java:482)
	at org.eclipse.wb.core.model.ObjectInfo.endEdit(ObjectInfo.java:446)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:325)
	at org.eclipse.wb.core.gef.command.EditCommand.execute(EditCommand.java:50)
	at org.eclipse.wb.internal.gef.core.EditDomain.executeCommand(EditDomain.java:59)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.executeCommand(TreeDropListener.java:265)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.drop(TreeDropListener.java:103)
	at org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:91)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1491)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1514)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1499)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1299)
	at org.eclipse.swt.dnd.DropTarget.drop(DropTarget.java:728)
	at org.eclipse.swt.dnd.DropTarget.outlineView_acceptDrop_item_childIndex(DropTarget.java:746)
	at org.eclipse.swt.dnd.DropTarget.dropTargetProc(DropTarget.java:471)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.dnd.DropTarget.dndCallSuper(DropTarget.java:210)
	at org.eclipse.swt.dnd.DropTarget.performDragOperation(DropTarget.java:739)
	at org.eclipse.swt.dnd.DropTarget.dropTargetProc(DropTarget.java:456)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:227)
	at org.eclipse.swt.widgets.Widget.mouseDownSuper(Widget.java:1121)
	at org.eclipse.swt.widgets.Tree.mouseDownSuper(Tree.java:2047)
	at org.eclipse.swt.widgets.Widget.mouseDown(Widget.java:1113)
	at org.eclipse.swt.widgets.Control.mouseDown(Control.java:2569)
	at org.eclipse.swt.widgets.Tree.mouseDown(Tree.java:2015)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5692)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:227)
	at org.eclipse.swt.widgets.Widget.windowSendEvent(Widget.java:2130)
	at org.eclipse.swt.widgets.Shell.windowSendEvent(Shell.java:2337)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5756)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Display.applicationSendEvent(Display.java:5193)
	at org.eclipse.swt.widgets.Display.applicationProc(Display.java:5342)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSApplication.sendEvent(NSApplication.java:128)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3695)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:1127)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1018)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:156)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:654)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:598)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:139)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:380)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:235)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:669)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:608)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1515)
!SESSION 2016-04-08 20:02:39.888 -----------------------------------------------
eclipse.buildId=4.5.1.M20150904-0015
java.version=1.7.0_79
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/admin/.eclipse_keyring -showlocation
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/admin/.eclipse_keyring -showlocation

!ENTRY org.eclipse.core.net 1 0 2016-04-08 20:02:40.981
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences

!ENTRY org.eclipse.core.resources 2 10035 2016-04-08 20:02:43.452
!MESSAGE The workspace exited with unsaved changes in the previous session; refreshing workspace to recover changes.

!ENTRY org.eclipse.wb.core 4 4 2016-04-08 20:03:42.394
!MESSAGE Designer [1.8.0.r45x201506110820.201604082003]: Execution flow problem. {
  EventQueue.invokeLater(new Runnable(){
    public void run(){
      try {
        taskManager=TaskManager.getInstance();
        ApplicationWindow window=new ApplicationWindow();
        window.frame.setVisible(true);
        window.frame.setResizable(false);
      }
 catch (      Exception e) {
        e.printStackTrace();
      }
    }
  }
);
}
 expected, but {
  frame=new JFrame();
  frame.setBounds(100,100,828,580);
  frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
  frame.getContentPane().setLayout(null);
  JPanel panel_3=new JPanel();
  panel_3.setBorder(new LineBorder(SystemColor.textHighlight));
  panel_3.setBackground(new Color(255,255,255));
  panel_3.setBounds(20,80,516,422);
  frame.getContentPane().add(panel_3);
  panel_3.setLayout(null);
  taskList=new JList<String>();
  taskList.addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      selectedListIndex=taskList.getSelectedIndex();
      setTaskDetailView();
    }
  }
);
  taskList.setBackground(UIManager.getColor("TabbedPane.selectedTabTitlePressedColor"));
  taskList.setBorder(new EtchedBorder(EtchedBorder.LOWERED,null,null));
  taskList.setToolTipText("");
  taskList.setSelectionForeground(new Color(255,255,255));
  taskList.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
  taskList.setSelectionBackground(new Color(255,165,0));
  taskList.setForeground(new Color(255,165,0));
  taskList.setFont(new Font("Open Sans",Font.PLAIN,17));
  taskList.setModel(new AbstractListModel<String>(){
    private static final long serialVersionUID=1L;
    String[] values=taskManager.getTaskNames();
    public int getSize(){
      return values.length;
    }
    public String getElementAt(    int index){
      return values[index];
    }
  }
);
  taskList.setFixedCellHeight(25);
  taskList.setBounds(11,44,496,368);
  scrollPane=new JScrollPane();
  scrollPane.setBounds(11,44,496,368);
  scrollPane.setViewportView(taskList);
  panel_3.add(scrollPane);
  filterDropdown=new JComboBox();
  filterDropdown.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      String filterString;
switch (filterDropdown.getSelectedIndex()) {
case 0:
        filterString="filter all";
      break;
case 1:
    filterString="filter incomplete";
  break;
case 2:
filterString="filter complete";
break;
case 3:
filterString="filter short";
break;
case 4:
filterString="filter medium";
break;
case 5:
filterString="filter long";
break;
case 6:
filterString="filter soon";
break;
default :
filterString="";
break;
}
try {
taskManager.executeCommand(filterString,window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
refreshWindow();
}
}
);
filterDropdown.setBackground(new Color(255,255,255));
filterDropdown.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
filterDropdown.setForeground(new Color(60,179,113));
filterDropdown.setModel(new DefaultComboBoxModel(new String[]{"Filter by...","Incomplete Tasks","Complete Tasks","Short Tasks (<1 hour)","Medium Tasks (1 - 3 hours)","Long Tasks (3+ hours)","Tasks Ending Soon"}));
filterDropdown.setFont(new Font("Open Sans",Font.PLAIN,15));
filterDropdown.setBounds(6,6,258,36);
panel_3.add(filterDropdown);
sortDropdown=new JComboBox();
sortDropdown.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
String sortString;
switch (sortDropdown.getSelectedIndex()) {
case 0:
sortString="sort default";
break;
case 1:
sortString="sort name";
break;
case 2:
sortString="sort date";
break;
case 3:
sortString="sort start";
break;
case 4:
sortString="sort end";
break;
case 5:
sortString="sort duration";
break;
default :
sortString="";
break;
}
try {
taskManager.executeCommand(sortString,window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
}
}
);
sortDropdown.setOpaque(true);
sortDropdown.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
sortDropdown.setModel(new DefaultComboBoxModel(new String[]{"Sort By...","Name","Date","Starting Time","Ending Time","Duration"}));
sortDropdown.setForeground(new Color(60,179,113));
sortDropdown.setFont(new Font("Open Sans",Font.PLAIN,15));
sortDropdown.setBackground(Color.WHITE);
sortDropdown.setBounds(261,6,249,36);
panel_3.add(sortDropdown);
historyList=new JList();
historyList.setEnabled(false);
historyList.setForeground(new Color(60,179,113));
historyList.setFont(new Font("Open Sans",Font.PLAIN,13));
historyList.setBounds(6,6,501,406);
historyList.setModel(new AbstractListModel(){
List<String> history=taskManager.getHistoryList();
public int getSize(){
return history.size();
}
public Object getElementAt(int index){
return history.get(index);
}
}
);
panel_3.add(historyList);
table=new JTable();
table.setBounds(0,0,499,372);
frame.getContentPane().add(table);
JPanel panel_1=new JPanel();
panel_1.setBackground(new Color(51,204,153));
panel_1.setBounds(0,0,828,64);
frame.getContentPane().add(panel_1);
panel_1.setLayout(null);
JLabel lblSnaptask=new JLabel("snaptask");
lblSnaptask.setFont(new Font("Open Sans",Font.PLAIN,48));
lblSnaptask.setForeground(new Color(255,255,255));
lblSnaptask.setBounds(16,0,216,58);
panel_1.add(lblSnaptask);
JPanel searchLine=new JPanel();
searchLine.setBackground(new Color(255,165,0));
searchLine.setBorder(null);
searchLine.setBounds(556,44,251,6);
searchLine.setEnabled(false);
panel_1.add(searchLine);
searchField=new JTextField();
searchField.addFocusListener(new FocusAdapter(){
@Override public void focusGained(FocusEvent e){
if (firstFocusSearchText) {
searchField.setText("");
firstFocusSearchText=false;
}
}
}
);
searchField.setFont(new Font("Open Sans",Font.PLAIN,15));
searchField.setForeground(new Color(169,169,169));
searchField.setToolTipText("Search for tasks!");
searchField.setText("Search for tasks!");
searchField.setBounds(552,15,258,36);
panel_1.add(searchField);
searchField.setColumns(10);
homeButton=new JButton("\n");
homeButton.setOpaque(true);
homeButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=0;
refreshButtons();
}
}
);
homeButton.setIcon(new ImageIcon("/Users/admin/Desktop/ListIcon.png"));
homeButton.setBorder(new EmptyBorder(0,0,0,0));
homeButton.setBackground(new Color(0,204,153));
homeButton.setBounds(237,0,66,64);
panel_1.add(homeButton);
historyButton=new JButton("\n");
historyButton.setOpaque(true);
historyButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=1;
refreshButtons();
}
}
);
historyButton.setIcon(new ImageIcon("/Users/admin/Desktop/HistoryIcon.png"));
historyButton.setBorder(new EmptyBorder(0,0,0,0));
historyButton.setBackground(new Color(0,204,153));
historyButton.setBounds(312,0,66,64);
panel_1.add(historyButton);
helpButton=new JButton("\n");
helpButton.setOpaque(true);
helpButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=2;
refreshButtons();
}
}
);
helpButton.setIcon(new ImageIcon("/Users/admin/Desktop/InfoImage.png"));
helpButton.setBorder(new EmptyBorder(0,0,0,0));
helpButton.setBackground(new Color(0,204,153));
helpButton.setBounds(391,0,66,64);
panel_1.add(helpButton);
JPanel panel=new JPanel();
panel.setBorder(new LineBorder(SystemColor.textHighlight));
panel.setBackground(new Color(255,255,255));
panel.setBounds(557,80,251,422);
frame.getContentPane().add(panel);
panel.setLayout(null);
warningBackground=new JPanel();
warningBackground.setEnabled(false);
warningBackground.setBorder(null);
warningBackground.setBackground(new Color(255,165,0));
warningBackground.setBounds(0,20,252,29);
panel.add(warningBackground);
warningBackground.setLayout(null);
txtLabelStatus=new JTextPane();
txtLabelStatus.setDisabledTextColor(SystemColor.text);
txtLabelStatus.setSelectionColor(SystemColor.activeCaption);
txtLabelStatus.setEnabled(false);
txtLabelStatus.setBounds(72,0,105,28);
txtLabelStatus.setFont(new Font("Open Sans",Font.PLAIN,20));
txtLabelStatus.setForeground(new Color(255,255,255));
txtLabelStatus.setBackground(new Color(255,165,0));
warningBackground.add(txtLabelStatus);
txtAreaDescription=new JTextPane();
txtAreaDescription.setFont(new Font("Open Sans",Font.PLAIN,14));
txtAreaDescription.setForeground(new Color(60,179,113));
txtAreaDescription.setBounds(10,232,208,159);
txtAreaDescription.setEnabled(false);
panel.add(txtAreaDescription);
txtAreaTaskDetails=new JTextArea();
txtAreaTaskDetails.setFont(new Font("Open Sans",Font.PLAIN,17));
txtAreaTaskDetails.setForeground(SystemColor.scrollbar);
txtAreaTaskDetails.setBounds(10,61,233,231);
txtAreaTaskDetails.setEnabled(false);
panel.add(txtAreaTaskDetails);
txtAreaHelp=new JTextPane();
txtAreaHelp.setForeground(new Color(102,205,170));
txtAreaHelp.setFont(new Font("Open Sans",Font.PLAIN,13));
txtAreaHelp.setBounds(30,100,499,372);
frame.getContentPane().add(txtAreaHelp);
txtAreaHelp.setText("add [NAME] || [DD/MM/YYYY] [HH:MM] [H:M]\nadd [NAME] || [DD/MM/YYYY] [HH:MM]\nadd [NAME] || [DD/MM/YYYY]\nadd [NAME]\ndelete [INDEX]\ndone [INDEX]\nedit [INDEX] name [STRING]\nedit [INDEX] duration [STRING]\nedit [INDEX] datetime [STRING]\nedit [INDEX] all [NAME] [DATE] [TIME] [DURATION]\nclear\ndisplay [INDEX]\nsearch name [STRING]\nsearch date [DD/MM/YYYY]\nundo\nhome\nhistory\nhelp\nsort [NAME/DATE/START/END/DURATION/DEFAULT]\nfilter [INCOMPLETE/COMPLETE/SHORT/MEDIUM/LONG/SOON/ALL]\n");
JPanel taskManageLine=new JPanel();
taskManageLine.setEnabled(false);
taskManageLine.setBorder(null);
taskManageLine.setBackground(new Color(255,165,0));
taskManageLine.setBounds(21,540,786,6);
taskManageLine.setEnabled(false);
frame.getContentPane().add(taskManageLine);
textFieldTaskManage=new JTextField();
textFieldTaskManage.addFocusListener(new FocusAdapter(){
@Override public void focusGained(FocusEvent e){
if (firstFocusManageText) {
textFieldTaskManage.setText("");
firstFocusManageText=false;
}
}
}
);
textFieldTaskManage.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
try {
taskManager.executeCommand(textFieldTaskManage.getText(),window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
refreshWindow();
textFieldTaskManage.setText("");
}
}
);
textFieldTaskManage.setDisabledTextColor(new Color(128,128,128));
textFieldTaskManage.setForeground(new Color(169,169,169));
textFieldTaskManage.setFont(new Font("Open Sans",Font.PLAIN,15));
textFieldTaskManage.setToolTipText("Manage your tasks here!");
textFieldTaskManage.setColumns(10);
textFieldTaskManage.setBounds(18,510,792,36);
textFieldTaskManage.setText("Manage your tasks here!");
frame.getContentPane().add(textFieldTaskManage);
refreshButtons();
}
 found.
!STACK 0
org.eclipse.wb.internal.core.utils.check.AssertionFailedException: Execution flow problem. {
  EventQueue.invokeLater(new Runnable(){
    public void run(){
      try {
        taskManager=TaskManager.getInstance();
        ApplicationWindow window=new ApplicationWindow();
        window.frame.setVisible(true);
        window.frame.setResizable(false);
      }
 catch (      Exception e) {
        e.printStackTrace();
      }
    }
  }
);
}
 expected, but {
  frame=new JFrame();
  frame.setBounds(100,100,828,580);
  frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
  frame.getContentPane().setLayout(null);
  JPanel panel_3=new JPanel();
  panel_3.setBorder(new LineBorder(SystemColor.textHighlight));
  panel_3.setBackground(new Color(255,255,255));
  panel_3.setBounds(20,80,516,422);
  frame.getContentPane().add(panel_3);
  panel_3.setLayout(null);
  taskList=new JList<String>();
  taskList.addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      selectedListIndex=taskList.getSelectedIndex();
      setTaskDetailView();
    }
  }
);
  taskList.setBackground(UIManager.getColor("TabbedPane.selectedTabTitlePressedColor"));
  taskList.setBorder(new EtchedBorder(EtchedBorder.LOWERED,null,null));
  taskList.setToolTipText("");
  taskList.setSelectionForeground(new Color(255,255,255));
  taskList.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
  taskList.setSelectionBackground(new Color(255,165,0));
  taskList.setForeground(new Color(255,165,0));
  taskList.setFont(new Font("Open Sans",Font.PLAIN,17));
  taskList.setModel(new AbstractListModel<String>(){
    private static final long serialVersionUID=1L;
    String[] values=taskManager.getTaskNames();
    public int getSize(){
      return values.length;
    }
    public String getElementAt(    int index){
      return values[index];
    }
  }
);
  taskList.setFixedCellHeight(25);
  taskList.setBounds(11,44,496,368);
  scrollPane=new JScrollPane();
  scrollPane.setBounds(11,44,496,368);
  scrollPane.setViewportView(taskList);
  panel_3.add(scrollPane);
  filterDropdown=new JComboBox();
  filterDropdown.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      String filterString;
switch (filterDropdown.getSelectedIndex()) {
case 0:
        filterString="filter all";
      break;
case 1:
    filterString="filter incomplete";
  break;
case 2:
filterString="filter complete";
break;
case 3:
filterString="filter short";
break;
case 4:
filterString="filter medium";
break;
case 5:
filterString="filter long";
break;
case 6:
filterString="filter soon";
break;
default :
filterString="";
break;
}
try {
taskManager.executeCommand(filterString,window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
refreshWindow();
}
}
);
filterDropdown.setBackground(new Color(255,255,255));
filterDropdown.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
filterDropdown.setForeground(new Color(60,179,113));
filterDropdown.setModel(new DefaultComboBoxModel(new String[]{"Filter by...","Incomplete Tasks","Complete Tasks","Short Tasks (<1 hour)","Medium Tasks (1 - 3 hours)","Long Tasks (3+ hours)","Tasks Ending Soon"}));
filterDropdown.setFont(new Font("Open Sans",Font.PLAIN,15));
filterDropdown.setBounds(6,6,258,36);
panel_3.add(filterDropdown);
sortDropdown=new JComboBox();
sortDropdown.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
String sortString;
switch (sortDropdown.getSelectedIndex()) {
case 0:
sortString="sort default";
break;
case 1:
sortString="sort name";
break;
case 2:
sortString="sort date";
break;
case 3:
sortString="sort start";
break;
case 4:
sortString="sort end";
break;
case 5:
sortString="sort duration";
break;
default :
sortString="";
break;
}
try {
taskManager.executeCommand(sortString,window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
}
}
);
sortDropdown.setOpaque(true);
sortDropdown.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
sortDropdown.setModel(new DefaultComboBoxModel(new String[]{"Sort By...","Name","Date","Starting Time","Ending Time","Duration"}));
sortDropdown.setForeground(new Color(60,179,113));
sortDropdown.setFont(new Font("Open Sans",Font.PLAIN,15));
sortDropdown.setBackground(Color.WHITE);
sortDropdown.setBounds(261,6,249,36);
panel_3.add(sortDropdown);
historyList=new JList();
historyList.setEnabled(false);
historyList.setForeground(new Color(60,179,113));
historyList.setFont(new Font("Open Sans",Font.PLAIN,13));
historyList.setBounds(6,6,501,406);
historyList.setModel(new AbstractListModel(){
List<String> history=taskManager.getHistoryList();
public int getSize(){
return history.size();
}
public Object getElementAt(int index){
return history.get(index);
}
}
);
panel_3.add(historyList);
table=new JTable();
table.setBounds(0,0,499,372);
frame.getContentPane().add(table);
JPanel panel_1=new JPanel();
panel_1.setBackground(new Color(51,204,153));
panel_1.setBounds(0,0,828,64);
frame.getContentPane().add(panel_1);
panel_1.setLayout(null);
JLabel lblSnaptask=new JLabel("snaptask");
lblSnaptask.setFont(new Font("Open Sans",Font.PLAIN,48));
lblSnaptask.setForeground(new Color(255,255,255));
lblSnaptask.setBounds(16,0,216,58);
panel_1.add(lblSnaptask);
JPanel searchLine=new JPanel();
searchLine.setBackground(new Color(255,165,0));
searchLine.setBorder(null);
searchLine.setBounds(556,44,251,6);
searchLine.setEnabled(false);
panel_1.add(searchLine);
searchField=new JTextField();
searchField.addFocusListener(new FocusAdapter(){
@Override public void focusGained(FocusEvent e){
if (firstFocusSearchText) {
searchField.setText("");
firstFocusSearchText=false;
}
}
}
);
searchField.setFont(new Font("Open Sans",Font.PLAIN,15));
searchField.setForeground(new Color(169,169,169));
searchField.setToolTipText("Search for tasks!");
searchField.setText("Search for tasks!");
searchField.setBounds(552,15,258,36);
panel_1.add(searchField);
searchField.setColumns(10);
homeButton=new JButton("\n");
homeButton.setOpaque(true);
homeButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=0;
refreshButtons();
}
}
);
homeButton.setIcon(new ImageIcon("/Users/admin/Desktop/ListIcon.png"));
homeButton.setBorder(new EmptyBorder(0,0,0,0));
homeButton.setBackground(new Color(0,204,153));
homeButton.setBounds(237,0,66,64);
panel_1.add(homeButton);
historyButton=new JButton("\n");
historyButton.setOpaque(true);
historyButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=1;
refreshButtons();
}
}
);
historyButton.setIcon(new ImageIcon("/Users/admin/Desktop/HistoryIcon.png"));
historyButton.setBorder(new EmptyBorder(0,0,0,0));
historyButton.setBackground(new Color(0,204,153));
historyButton.setBounds(312,0,66,64);
panel_1.add(historyButton);
helpButton=new JButton("\n");
helpButton.setOpaque(true);
helpButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=2;
refreshButtons();
}
}
);
helpButton.setIcon(new ImageIcon("/Users/admin/Desktop/InfoImage.png"));
helpButton.setBorder(new EmptyBorder(0,0,0,0));
helpButton.setBackground(new Color(0,204,153));
helpButton.setBounds(391,0,66,64);
panel_1.add(helpButton);
JPanel panel=new JPanel();
panel.setBorder(new LineBorder(SystemColor.textHighlight));
panel.setBackground(new Color(255,255,255));
panel.setBounds(557,80,251,422);
frame.getContentPane().add(panel);
panel.setLayout(null);
warningBackground=new JPanel();
warningBackground.setEnabled(false);
warningBackground.setBorder(null);
warningBackground.setBackground(new Color(255,165,0));
warningBackground.setBounds(0,20,252,29);
panel.add(warningBackground);
warningBackground.setLayout(null);
txtLabelStatus=new JTextPane();
txtLabelStatus.setDisabledTextColor(SystemColor.text);
txtLabelStatus.setSelectionColor(SystemColor.activeCaption);
txtLabelStatus.setEnabled(false);
txtLabelStatus.setBounds(72,0,105,28);
txtLabelStatus.setFont(new Font("Open Sans",Font.PLAIN,20));
txtLabelStatus.setForeground(new Color(255,255,255));
txtLabelStatus.setBackground(new Color(255,165,0));
warningBackground.add(txtLabelStatus);
txtAreaDescription=new JTextPane();
txtAreaDescription.setFont(new Font("Open Sans",Font.PLAIN,14));
txtAreaDescription.setForeground(new Color(60,179,113));
txtAreaDescription.setBounds(10,232,208,159);
txtAreaDescription.setEnabled(false);
panel.add(txtAreaDescription);
txtAreaTaskDetails=new JTextArea();
txtAreaTaskDetails.setFont(new Font("Open Sans",Font.PLAIN,17));
txtAreaTaskDetails.setForeground(SystemColor.scrollbar);
txtAreaTaskDetails.setBounds(10,61,233,231);
txtAreaTaskDetails.setEnabled(false);
panel.add(txtAreaTaskDetails);
txtAreaHelp=new JTextPane();
txtAreaHelp.setForeground(new Color(102,205,170));
txtAreaHelp.setFont(new Font("Open Sans",Font.PLAIN,13));
txtAreaHelp.setBounds(30,100,499,372);
frame.getContentPane().add(txtAreaHelp);
txtAreaHelp.setText("add [NAME] || [DD/MM/YYYY] [HH:MM] [H:M]\nadd [NAME] || [DD/MM/YYYY] [HH:MM]\nadd [NAME] || [DD/MM/YYYY]\nadd [NAME]\ndelete [INDEX]\ndone [INDEX]\nedit [INDEX] name [STRING]\nedit [INDEX] duration [STRING]\nedit [INDEX] datetime [STRING]\nedit [INDEX] all [NAME] [DATE] [TIME] [DURATION]\nclear\ndisplay [INDEX]\nsearch name [STRING]\nsearch date [DD/MM/YYYY]\nundo\nhome\nhistory\nhelp\nsort [NAME/DATE/START/END/DURATION/DEFAULT]\nfilter [INCOMPLETE/COMPLETE/SHORT/MEDIUM/LONG/SOON/ALL]\n");
JPanel taskManageLine=new JPanel();
taskManageLine.setEnabled(false);
taskManageLine.setBorder(null);
taskManageLine.setBackground(new Color(255,165,0));
taskManageLine.setBounds(21,540,786,6);
taskManageLine.setEnabled(false);
frame.getContentPane().add(taskManageLine);
textFieldTaskManage=new JTextField();
textFieldTaskManage.addFocusListener(new FocusAdapter(){
@Override public void focusGained(FocusEvent e){
if (firstFocusManageText) {
textFieldTaskManage.setText("");
firstFocusManageText=false;
}
}
}
);
textFieldTaskManage.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
try {
taskManager.executeCommand(textFieldTaskManage.getText(),window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
refreshWindow();
textFieldTaskManage.setText("");
}
}
);
textFieldTaskManage.setDisabledTextColor(new Color(128,128,128));
textFieldTaskManage.setForeground(new Color(169,169,169));
textFieldTaskManage.setFont(new Font("Open Sans",Font.PLAIN,15));
textFieldTaskManage.setToolTipText("Manage your tasks here!");
textFieldTaskManage.setColumns(10);
textFieldTaskManage.setBounds(18,510,792,36);
textFieldTaskManage.setText("Manage your tasks here!");
frame.getContentPane().add(textFieldTaskManage);
refreshButtons();
}
 found.
	at org.eclipse.wb.internal.core.utils.check.Assert.fail(Assert.java:225)
	at org.eclipse.wb.internal.core.utils.check.Assert.isTrue(Assert.java:291)
	at org.eclipse.wb.core.eval.ExecutionFlowDescription.leaveStatement(ExecutionFlowDescription.java:152)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:317)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.prepareAssignmentInformation(ExecutionFlowUtils.java:784)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.getVariableCachedValue(ExecutionFlowUtils.java:753)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.getVariableCachedList_notNull(ExecutionFlowUtils.java:707)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.getReferences(ExecutionFlowUtils.java:669)
	at org.eclipse.wb.internal.core.model.variable.AbstractNamedVariableSupport.getReferences(AbstractNamedVariableSupport.java:184)
	at org.eclipse.wb.internal.core.model.variable.FieldUniqueVariableSupport.canConvertFieldToLocal(FieldUniqueVariableSupport.java:97)
	at org.eclipse.wb.internal.core.editor.structure.property.JavaPropertiesToolBarContributor.addVariableConvertAction(JavaPropertiesToolBarContributor.java:101)
	at org.eclipse.wb.internal.core.editor.structure.property.JavaPropertiesToolBarContributor.contributeToolBar(JavaPropertiesToolBarContributor.java:54)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage$2$1.run(ComponentsPropertiesPage.java:186)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runLog(ExecutionUtils.java:106)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage$2.run(ComponentsPropertiesPage.java:184)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runLog(ExecutionUtils.java:106)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage.updateActions(ComponentsPropertiesPage.java:160)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage.access$22(ComponentsPropertiesPage.java:159)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage$12.run(ComponentsPropertiesPage.java:538)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runLog(ExecutionUtils.java:106)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage.refreshProperties(ComponentsPropertiesPage.java:530)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage.setSelection(ComponentsPropertiesPage.java:321)
	at org.eclipse.wb.internal.core.editor.structure.DesignComponentsComposite$1.selectionChanged(DesignComponentsComposite.java:72)
	at org.eclipse.wb.internal.core.utils.gef.EditPartsSelectionProvider.fireSelectionChanged(EditPartsSelectionProvider.java:111)
	at org.eclipse.wb.internal.core.utils.gef.EditPartsSelectionProvider.access$0(EditPartsSelectionProvider.java:102)
	at org.eclipse.wb.internal.core.utils.gef.EditPartsSelectionProvider$1.selectionChanged(EditPartsSelectionProvider.java:40)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.fireSelectionChanged(AbstractEditPartViewer.java:202)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.setSelection(AbstractEditPartViewer.java:262)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.setSelection(AbstractEditPartViewer.java:193)
	at org.eclipse.wb.internal.gef.tree.TreeViewer$1.widgetSelected(TreeViewer.java:180)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:248)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1491)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1514)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1499)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1299)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4072)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3698)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.waitEventLoop(ExecutionUtils.java:71)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:168)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runLaterAndWait(SwingUtils.java:73)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.execRefreshOperation(ComponentInfo.java:119)
	at org.eclipse.wb.core.model.ObjectInfo.refresh(ObjectInfo.java:482)
	at org.eclipse.wb.core.model.ObjectInfo.endEdit(ObjectInfo.java:446)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:325)
	at org.eclipse.wb.core.gef.command.EditCommand.execute(EditCommand.java:50)
	at org.eclipse.wb.internal.gef.core.EditDomain.executeCommand(EditDomain.java:59)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.executeCommand(TreeDropListener.java:265)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.drop(TreeDropListener.java:103)
	at org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:91)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1491)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1514)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1499)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1299)
	at org.eclipse.swt.dnd.DropTarget.drop(DropTarget.java:728)
	at org.eclipse.swt.dnd.DropTarget.outlineView_acceptDrop_item_childIndex(DropTarget.java:746)
	at org.eclipse.swt.dnd.DropTarget.dropTargetProc(DropTarget.java:471)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.dnd.DropTarget.dndCallSuper(DropTarget.java:210)
	at org.eclipse.swt.dnd.DropTarget.performDragOperation(DropTarget.java:739)
	at org.eclipse.swt.dnd.DropTarget.dropTargetProc(DropTarget.java:456)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:227)
	at org.eclipse.swt.widgets.Widget.mouseDownSuper(Widget.java:1121)
	at org.eclipse.swt.widgets.Tree.mouseDownSuper(Tree.java:2047)
	at org.eclipse.swt.widgets.Widget.mouseDown(Widget.java:1113)
	at org.eclipse.swt.widgets.Control.mouseDown(Control.java:2569)
	at org.eclipse.swt.widgets.Tree.mouseDown(Tree.java:2015)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5692)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:227)
	at org.eclipse.swt.widgets.Widget.windowSendEvent(Widget.java:2130)
	at org.eclipse.swt.widgets.Shell.windowSendEvent(Shell.java:2337)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5756)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Display.applicationSendEvent(Display.java:5193)
	at org.eclipse.swt.widgets.Display.applicationProc(Display.java:5342)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSApplication.sendEvent(NSApplication.java:128)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3695)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:1127)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1018)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:156)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:654)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:598)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:139)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:380)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:235)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:669)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:608)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1515)

!ENTRY org.eclipse.wb.core 4 4 2016-04-08 20:03:43.249
!MESSAGE Designer [1.8.0.r45x201506110820.201604082003]: Execution flow problem. {
  frame=new JFrame();
  frame.setBounds(100,100,828,580);
  frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
  frame.getContentPane().setLayout(null);
  JPanel panel_3=new JPanel();
  panel_3.setBorder(new LineBorder(SystemColor.textHighlight));
  panel_3.setBackground(new Color(255,255,255));
  panel_3.setBounds(20,80,516,422);
  frame.getContentPane().add(panel_3);
  panel_3.setLayout(null);
  taskList=new JList<String>();
  taskList.addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      selectedListIndex=taskList.getSelectedIndex();
      setTaskDetailView();
    }
  }
);
  taskList.setBackground(UIManager.getColor("TabbedPane.selectedTabTitlePressedColor"));
  taskList.setBorder(new EtchedBorder(EtchedBorder.LOWERED,null,null));
  taskList.setToolTipText("");
  taskList.setSelectionForeground(new Color(255,255,255));
  taskList.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
  taskList.setSelectionBackground(new Color(255,165,0));
  taskList.setForeground(new Color(255,165,0));
  taskList.setFont(new Font("Open Sans",Font.PLAIN,17));
  taskList.setModel(new AbstractListModel<String>(){
    private static final long serialVersionUID=1L;
    String[] values=taskManager.getTaskNames();
    public int getSize(){
      return values.length;
    }
    public String getElementAt(    int index){
      return values[index];
    }
  }
);
  taskList.setFixedCellHeight(25);
  taskList.setBounds(11,44,496,368);
  scrollPane=new JScrollPane();
  scrollPane.setBounds(11,44,496,368);
  scrollPane.setViewportView(taskList);
  panel_3.add(scrollPane);
  filterDropdown=new JComboBox();
  filterDropdown.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      String filterString;
switch (filterDropdown.getSelectedIndex()) {
case 0:
        filterString="filter all";
      break;
case 1:
    filterString="filter incomplete";
  break;
case 2:
filterString="filter complete";
break;
case 3:
filterString="filter short";
break;
case 4:
filterString="filter medium";
break;
case 5:
filterString="filter long";
break;
case 6:
filterString="filter soon";
break;
default :
filterString="";
break;
}
try {
taskManager.executeCommand(filterString,window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
refreshWindow();
}
}
);
filterDropdown.setBackground(new Color(255,255,255));
filterDropdown.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
filterDropdown.setForeground(new Color(60,179,113));
filterDropdown.setModel(new DefaultComboBoxModel(new String[]{"Filter by...","Incomplete Tasks","Complete Tasks","Short Tasks (<1 hour)","Medium Tasks (1 - 3 hours)","Long Tasks (3+ hours)","Tasks Ending Soon"}));
filterDropdown.setFont(new Font("Open Sans",Font.PLAIN,15));
filterDropdown.setBounds(6,6,258,36);
panel_3.add(filterDropdown);
sortDropdown=new JComboBox();
sortDropdown.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
String sortString;
switch (sortDropdown.getSelectedIndex()) {
case 0:
sortString="sort default";
break;
case 1:
sortString="sort name";
break;
case 2:
sortString="sort date";
break;
case 3:
sortString="sort start";
break;
case 4:
sortString="sort end";
break;
case 5:
sortString="sort duration";
break;
default :
sortString="";
break;
}
try {
taskManager.executeCommand(sortString,window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
}
}
);
sortDropdown.setOpaque(true);
sortDropdown.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
sortDropdown.setModel(new DefaultComboBoxModel(new String[]{"Sort By...","Name","Date","Starting Time","Ending Time","Duration"}));
sortDropdown.setForeground(new Color(60,179,113));
sortDropdown.setFont(new Font("Open Sans",Font.PLAIN,15));
sortDropdown.setBackground(Color.WHITE);
sortDropdown.setBounds(261,6,249,36);
panel_3.add(sortDropdown);
historyList=new JList();
historyList.setEnabled(false);
historyList.setForeground(new Color(60,179,113));
historyList.setFont(new Font("Open Sans",Font.PLAIN,13));
historyList.setBounds(6,6,501,406);
historyList.setModel(new AbstractListModel(){
List<String> history=taskManager.getHistoryList();
public int getSize(){
return history.size();
}
public Object getElementAt(int index){
return history.get(index);
}
}
);
panel_3.add(historyList);
table=new JTable();
table.setBounds(0,0,499,372);
frame.getContentPane().add(table);
JPanel panel_1=new JPanel();
panel_1.setBackground(new Color(51,204,153));
panel_1.setBounds(0,0,828,64);
frame.getContentPane().add(panel_1);
panel_1.setLayout(null);
JLabel lblSnaptask=new JLabel("snaptask");
lblSnaptask.setFont(new Font("Open Sans",Font.PLAIN,48));
lblSnaptask.setForeground(new Color(255,255,255));
lblSnaptask.setBounds(16,0,216,58);
panel_1.add(lblSnaptask);
JPanel searchLine=new JPanel();
searchLine.setBackground(new Color(255,165,0));
searchLine.setBorder(null);
searchLine.setBounds(556,44,251,6);
searchLine.setEnabled(false);
panel_1.add(searchLine);
searchField=new JTextField();
searchField.addFocusListener(new FocusAdapter(){
@Override public void focusGained(FocusEvent e){
if (firstFocusSearchText) {
searchField.setText("");
firstFocusSearchText=false;
}
}
}
);
searchField.setFont(new Font("Open Sans",Font.PLAIN,15));
searchField.setForeground(new Color(169,169,169));
searchField.setToolTipText("Search for tasks!");
searchField.setText("Search for tasks!");
searchField.setBounds(552,15,258,36);
panel_1.add(searchField);
searchField.setColumns(10);
homeButton=new JButton("\n");
homeButton.setOpaque(true);
homeButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=0;
refreshButtons();
}
}
);
homeButton.setIcon(new ImageIcon("/Users/admin/Desktop/ListIcon.png"));
homeButton.setBorder(new EmptyBorder(0,0,0,0));
homeButton.setBackground(new Color(0,204,153));
homeButton.setBounds(237,0,66,64);
panel_1.add(homeButton);
historyButton=new JButton("\n");
historyButton.setOpaque(true);
historyButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=1;
refreshButtons();
}
}
);
historyButton.setIcon(new ImageIcon("/Users/admin/Desktop/HistoryIcon.png"));
historyButton.setBorder(new EmptyBorder(0,0,0,0));
historyButton.setBackground(new Color(0,204,153));
historyButton.setBounds(312,0,66,64);
panel_1.add(historyButton);
helpButton=new JButton("\n");
helpButton.setOpaque(true);
helpButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=2;
refreshButtons();
}
}
);
helpButton.setIcon(new ImageIcon("/Users/admin/Desktop/InfoImage.png"));
helpButton.setBorder(new EmptyBorder(0,0,0,0));
helpButton.setBackground(new Color(0,204,153));
helpButton.setBounds(391,0,66,64);
panel_1.add(helpButton);
JPanel panel=new JPanel();
panel.setBorder(new LineBorder(SystemColor.textHighlight));
panel.setBackground(new Color(255,255,255));
panel.setBounds(557,80,251,422);
frame.getContentPane().add(panel);
panel.setLayout(null);
warningBackground=new JPanel();
warningBackground.setEnabled(false);
warningBackground.setBorder(null);
warningBackground.setBackground(new Color(255,165,0));
warningBackground.setBounds(0,20,252,29);
panel.add(warningBackground);
warningBackground.setLayout(null);
txtLabelStatus=new JTextPane();
txtLabelStatus.setDisabledTextColor(SystemColor.text);
txtLabelStatus.setSelectionColor(SystemColor.activeCaption);
txtLabelStatus.setEnabled(false);
txtLabelStatus.setBounds(72,0,105,28);
txtLabelStatus.setFont(new Font("Open Sans",Font.PLAIN,20));
txtLabelStatus.setForeground(new Color(255,255,255));
txtLabelStatus.setBackground(new Color(255,165,0));
warningBackground.add(txtLabelStatus);
txtAreaDescription=new JTextPane();
txtAreaDescription.setFont(new Font("Open Sans",Font.PLAIN,14));
txtAreaDescription.setForeground(new Color(60,179,113));
txtAreaDescription.setBounds(10,232,208,159);
txtAreaDescription.setEnabled(false);
panel.add(txtAreaDescription);
txtAreaTaskDetails=new JTextArea();
txtAreaTaskDetails.setFont(new Font("Open Sans",Font.PLAIN,17));
txtAreaTaskDetails.setForeground(SystemColor.scrollbar);
txtAreaTaskDetails.setBounds(10,61,233,231);
txtAreaTaskDetails.setEnabled(false);
panel.add(txtAreaTaskDetails);
txtAreaHelp=new JTextPane();
txtAreaHelp.setForeground(new Color(102,205,170));
txtAreaHelp.setFont(new Font("Open Sans",Font.PLAIN,13));
txtAreaHelp.setBounds(30,100,499,372);
frame.getContentPane().add(txtAreaHelp);
txtAreaHelp.setText("add [NAME] || [DD/MM/YYYY] [HH:MM] [H:M]\nadd [NAME] || [DD/MM/YYYY] [HH:MM]\nadd [NAME] || [DD/MM/YYYY]\nadd [NAME]\ndelete [INDEX]\ndone [INDEX]\nedit [INDEX] name [STRING]\nedit [INDEX] duration [STRING]\nedit [INDEX] datetime [STRING]\nedit [INDEX] all [NAME] [DATE] [TIME] [DURATION]\nclear\ndisplay [INDEX]\nsearch name [STRING]\nsearch date [DD/MM/YYYY]\nundo\nhome\nhistory\nhelp\nsort [NAME/DATE/START/END/DURATION/DEFAULT]\nfilter [INCOMPLETE/COMPLETE/SHORT/MEDIUM/LONG/SOON/ALL]\n");
JPanel taskManageLine=new JPanel();
taskManageLine.setEnabled(false);
taskManageLine.setBorder(null);
taskManageLine.setBackground(new Color(255,165,0));
taskManageLine.setBounds(21,540,786,6);
taskManageLine.setEnabled(false);
frame.getContentPane().add(taskManageLine);
textFieldTaskManage=new JTextField();
textFieldTaskManage.addFocusListener(new FocusAdapter(){
@Override public void focusGained(FocusEvent e){
if (firstFocusManageText) {
textFieldTaskManage.setText("");
firstFocusManageText=false;
}
}
}
);
textFieldTaskManage.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
try {
taskManager.executeCommand(textFieldTaskManage.getText(),window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
refreshWindow();
textFieldTaskManage.setText("");
}
}
);
textFieldTaskManage.setDisabledTextColor(new Color(128,128,128));
textFieldTaskManage.setForeground(new Color(169,169,169));
textFieldTaskManage.setFont(new Font("Open Sans",Font.PLAIN,15));
textFieldTaskManage.setToolTipText("Manage your tasks here!");
textFieldTaskManage.setColumns(10);
textFieldTaskManage.setBounds(18,510,792,36);
textFieldTaskManage.setText("Manage your tasks here!");
frame.getContentPane().add(textFieldTaskManage);
refreshButtons();
}
 expected, but {
  initialize();
}
 found.
!STACK 0
org.eclipse.wb.internal.core.utils.check.AssertionFailedException: Execution flow problem. {
  frame=new JFrame();
  frame.setBounds(100,100,828,580);
  frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
  frame.getContentPane().setLayout(null);
  JPanel panel_3=new JPanel();
  panel_3.setBorder(new LineBorder(SystemColor.textHighlight));
  panel_3.setBackground(new Color(255,255,255));
  panel_3.setBounds(20,80,516,422);
  frame.getContentPane().add(panel_3);
  panel_3.setLayout(null);
  taskList=new JList<String>();
  taskList.addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      selectedListIndex=taskList.getSelectedIndex();
      setTaskDetailView();
    }
  }
);
  taskList.setBackground(UIManager.getColor("TabbedPane.selectedTabTitlePressedColor"));
  taskList.setBorder(new EtchedBorder(EtchedBorder.LOWERED,null,null));
  taskList.setToolTipText("");
  taskList.setSelectionForeground(new Color(255,255,255));
  taskList.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
  taskList.setSelectionBackground(new Color(255,165,0));
  taskList.setForeground(new Color(255,165,0));
  taskList.setFont(new Font("Open Sans",Font.PLAIN,17));
  taskList.setModel(new AbstractListModel<String>(){
    private static final long serialVersionUID=1L;
    String[] values=taskManager.getTaskNames();
    public int getSize(){
      return values.length;
    }
    public String getElementAt(    int index){
      return values[index];
    }
  }
);
  taskList.setFixedCellHeight(25);
  taskList.setBounds(11,44,496,368);
  scrollPane=new JScrollPane();
  scrollPane.setBounds(11,44,496,368);
  scrollPane.setViewportView(taskList);
  panel_3.add(scrollPane);
  filterDropdown=new JComboBox();
  filterDropdown.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      String filterString;
switch (filterDropdown.getSelectedIndex()) {
case 0:
        filterString="filter all";
      break;
case 1:
    filterString="filter incomplete";
  break;
case 2:
filterString="filter complete";
break;
case 3:
filterString="filter short";
break;
case 4:
filterString="filter medium";
break;
case 5:
filterString="filter long";
break;
case 6:
filterString="filter soon";
break;
default :
filterString="";
break;
}
try {
taskManager.executeCommand(filterString,window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
refreshWindow();
}
}
);
filterDropdown.setBackground(new Color(255,255,255));
filterDropdown.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
filterDropdown.setForeground(new Color(60,179,113));
filterDropdown.setModel(new DefaultComboBoxModel(new String[]{"Filter by...","Incomplete Tasks","Complete Tasks","Short Tasks (<1 hour)","Medium Tasks (1 - 3 hours)","Long Tasks (3+ hours)","Tasks Ending Soon"}));
filterDropdown.setFont(new Font("Open Sans",Font.PLAIN,15));
filterDropdown.setBounds(6,6,258,36);
panel_3.add(filterDropdown);
sortDropdown=new JComboBox();
sortDropdown.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
String sortString;
switch (sortDropdown.getSelectedIndex()) {
case 0:
sortString="sort default";
break;
case 1:
sortString="sort name";
break;
case 2:
sortString="sort date";
break;
case 3:
sortString="sort start";
break;
case 4:
sortString="sort end";
break;
case 5:
sortString="sort duration";
break;
default :
sortString="";
break;
}
try {
taskManager.executeCommand(sortString,window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
}
}
);
sortDropdown.setOpaque(true);
sortDropdown.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
sortDropdown.setModel(new DefaultComboBoxModel(new String[]{"Sort By...","Name","Date","Starting Time","Ending Time","Duration"}));
sortDropdown.setForeground(new Color(60,179,113));
sortDropdown.setFont(new Font("Open Sans",Font.PLAIN,15));
sortDropdown.setBackground(Color.WHITE);
sortDropdown.setBounds(261,6,249,36);
panel_3.add(sortDropdown);
historyList=new JList();
historyList.setEnabled(false);
historyList.setForeground(new Color(60,179,113));
historyList.setFont(new Font("Open Sans",Font.PLAIN,13));
historyList.setBounds(6,6,501,406);
historyList.setModel(new AbstractListModel(){
List<String> history=taskManager.getHistoryList();
public int getSize(){
return history.size();
}
public Object getElementAt(int index){
return history.get(index);
}
}
);
panel_3.add(historyList);
table=new JTable();
table.setBounds(0,0,499,372);
frame.getContentPane().add(table);
JPanel panel_1=new JPanel();
panel_1.setBackground(new Color(51,204,153));
panel_1.setBounds(0,0,828,64);
frame.getContentPane().add(panel_1);
panel_1.setLayout(null);
JLabel lblSnaptask=new JLabel("snaptask");
lblSnaptask.setFont(new Font("Open Sans",Font.PLAIN,48));
lblSnaptask.setForeground(new Color(255,255,255));
lblSnaptask.setBounds(16,0,216,58);
panel_1.add(lblSnaptask);
JPanel searchLine=new JPanel();
searchLine.setBackground(new Color(255,165,0));
searchLine.setBorder(null);
searchLine.setBounds(556,44,251,6);
searchLine.setEnabled(false);
panel_1.add(searchLine);
searchField=new JTextField();
searchField.addFocusListener(new FocusAdapter(){
@Override public void focusGained(FocusEvent e){
if (firstFocusSearchText) {
searchField.setText("");
firstFocusSearchText=false;
}
}
}
);
searchField.setFont(new Font("Open Sans",Font.PLAIN,15));
searchField.setForeground(new Color(169,169,169));
searchField.setToolTipText("Search for tasks!");
searchField.setText("Search for tasks!");
searchField.setBounds(552,15,258,36);
panel_1.add(searchField);
searchField.setColumns(10);
homeButton=new JButton("\n");
homeButton.setOpaque(true);
homeButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=0;
refreshButtons();
}
}
);
homeButton.setIcon(new ImageIcon("/Users/admin/Desktop/ListIcon.png"));
homeButton.setBorder(new EmptyBorder(0,0,0,0));
homeButton.setBackground(new Color(0,204,153));
homeButton.setBounds(237,0,66,64);
panel_1.add(homeButton);
historyButton=new JButton("\n");
historyButton.setOpaque(true);
historyButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=1;
refreshButtons();
}
}
);
historyButton.setIcon(new ImageIcon("/Users/admin/Desktop/HistoryIcon.png"));
historyButton.setBorder(new EmptyBorder(0,0,0,0));
historyButton.setBackground(new Color(0,204,153));
historyButton.setBounds(312,0,66,64);
panel_1.add(historyButton);
helpButton=new JButton("\n");
helpButton.setOpaque(true);
helpButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=2;
refreshButtons();
}
}
);
helpButton.setIcon(new ImageIcon("/Users/admin/Desktop/InfoImage.png"));
helpButton.setBorder(new EmptyBorder(0,0,0,0));
helpButton.setBackground(new Color(0,204,153));
helpButton.setBounds(391,0,66,64);
panel_1.add(helpButton);
JPanel panel=new JPanel();
panel.setBorder(new LineBorder(SystemColor.textHighlight));
panel.setBackground(new Color(255,255,255));
panel.setBounds(557,80,251,422);
frame.getContentPane().add(panel);
panel.setLayout(null);
warningBackground=new JPanel();
warningBackground.setEnabled(false);
warningBackground.setBorder(null);
warningBackground.setBackground(new Color(255,165,0));
warningBackground.setBounds(0,20,252,29);
panel.add(warningBackground);
warningBackground.setLayout(null);
txtLabelStatus=new JTextPane();
txtLabelStatus.setDisabledTextColor(SystemColor.text);
txtLabelStatus.setSelectionColor(SystemColor.activeCaption);
txtLabelStatus.setEnabled(false);
txtLabelStatus.setBounds(72,0,105,28);
txtLabelStatus.setFont(new Font("Open Sans",Font.PLAIN,20));
txtLabelStatus.setForeground(new Color(255,255,255));
txtLabelStatus.setBackground(new Color(255,165,0));
warningBackground.add(txtLabelStatus);
txtAreaDescription=new JTextPane();
txtAreaDescription.setFont(new Font("Open Sans",Font.PLAIN,14));
txtAreaDescription.setForeground(new Color(60,179,113));
txtAreaDescription.setBounds(10,232,208,159);
txtAreaDescription.setEnabled(false);
panel.add(txtAreaDescription);
txtAreaTaskDetails=new JTextArea();
txtAreaTaskDetails.setFont(new Font("Open Sans",Font.PLAIN,17));
txtAreaTaskDetails.setForeground(SystemColor.scrollbar);
txtAreaTaskDetails.setBounds(10,61,233,231);
txtAreaTaskDetails.setEnabled(false);
panel.add(txtAreaTaskDetails);
txtAreaHelp=new JTextPane();
txtAreaHelp.setForeground(new Color(102,205,170));
txtAreaHelp.setFont(new Font("Open Sans",Font.PLAIN,13));
txtAreaHelp.setBounds(30,100,499,372);
frame.getContentPane().add(txtAreaHelp);
txtAreaHelp.setText("add [NAME] || [DD/MM/YYYY] [HH:MM] [H:M]\nadd [NAME] || [DD/MM/YYYY] [HH:MM]\nadd [NAME] || [DD/MM/YYYY]\nadd [NAME]\ndelete [INDEX]\ndone [INDEX]\nedit [INDEX] name [STRING]\nedit [INDEX] duration [STRING]\nedit [INDEX] datetime [STRING]\nedit [INDEX] all [NAME] [DATE] [TIME] [DURATION]\nclear\ndisplay [INDEX]\nsearch name [STRING]\nsearch date [DD/MM/YYYY]\nundo\nhome\nhistory\nhelp\nsort [NAME/DATE/START/END/DURATION/DEFAULT]\nfilter [INCOMPLETE/COMPLETE/SHORT/MEDIUM/LONG/SOON/ALL]\n");
JPanel taskManageLine=new JPanel();
taskManageLine.setEnabled(false);
taskManageLine.setBorder(null);
taskManageLine.setBackground(new Color(255,165,0));
taskManageLine.setBounds(21,540,786,6);
taskManageLine.setEnabled(false);
frame.getContentPane().add(taskManageLine);
textFieldTaskManage=new JTextField();
textFieldTaskManage.addFocusListener(new FocusAdapter(){
@Override public void focusGained(FocusEvent e){
if (firstFocusManageText) {
textFieldTaskManage.setText("");
firstFocusManageText=false;
}
}
}
);
textFieldTaskManage.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
try {
taskManager.executeCommand(textFieldTaskManage.getText(),window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
refreshWindow();
textFieldTaskManage.setText("");
}
}
);
textFieldTaskManage.setDisabledTextColor(new Color(128,128,128));
textFieldTaskManage.setForeground(new Color(169,169,169));
textFieldTaskManage.setFont(new Font("Open Sans",Font.PLAIN,15));
textFieldTaskManage.setToolTipText("Manage your tasks here!");
textFieldTaskManage.setColumns(10);
textFieldTaskManage.setBounds(18,510,792,36);
textFieldTaskManage.setText("Manage your tasks here!");
frame.getContentPane().add(textFieldTaskManage);
refreshButtons();
}
 expected, but {
  initialize();
}
 found.
	at org.eclipse.wb.internal.core.utils.check.Assert.fail(Assert.java:225)
	at org.eclipse.wb.internal.core.utils.check.Assert.isTrue(Assert.java:291)
	at org.eclipse.wb.core.eval.ExecutionFlowDescription.leaveStatement(ExecutionFlowDescription.java:152)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:317)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.access$1(ExecutionFlowUtils.java:235)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:442)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:391)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$28c57345.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:241)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2759)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:145)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:421)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:389)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$28c57345.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:316)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2759)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:263)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2782)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:267)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2782)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:137)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2759)
	at org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:250)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2782)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:137)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2759)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:635)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2782)
	at org.eclipse.jdt.core.dom.AnonymousClassDeclaration.accept0(AnonymousClassDeclaration.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2759)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:314)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2782)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:239)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2759)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:145)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.core.model.JavaInfo.refresh_create(JavaInfo.java:1199)
	at org.eclipse.wb.core.model.ObjectInfo.refreshCreate0(ObjectInfo.java:550)
	at org.eclipse.wb.core.model.ObjectInfo.access$0(ObjectInfo.java:546)
	at org.eclipse.wb.core.model.ObjectInfo$5$1.run(ObjectInfo.java:486)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:145)
	at org.eclipse.wb.core.model.ObjectInfo$5.run(ObjectInfo.java:484)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$2.run(SwingUtils.java:76)
	at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:312)
	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:745)
	at java.awt.EventQueue.access$300(EventQueue.java:103)
	at java.awt.EventQueue$3.run(EventQueue.java:706)
	at java.awt.EventQueue$3.run(EventQueue.java:704)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.awt.EventQueue.dispatchEvent(EventQueue.java:715)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:242)
	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:161)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:150)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:146)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:138)
	at java.awt.EventDispatchThread.run(EventDispatchThread.java:91)

!ENTRY org.eclipse.ui 4 0 2016-04-08 20:03:43.686
!MESSAGE Unhandled event loop exception
!STACK 0
org.eclipse.core.runtime.AssertionFailedException: null argument:
	at org.eclipse.core.runtime.Assert.isNotNull(Assert.java:85)
	at org.eclipse.core.runtime.Assert.isNotNull(Assert.java:73)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.setSelection(AbstractEditPartViewer.java:249)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.resetSelectionFromModels(TreeDropListener.java:141)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.drop(TreeDropListener.java:107)
	at org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:91)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1491)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1514)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1499)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1299)
	at org.eclipse.swt.dnd.DropTarget.drop(DropTarget.java:728)
	at org.eclipse.swt.dnd.DropTarget.outlineView_acceptDrop_item_childIndex(DropTarget.java:746)
	at org.eclipse.swt.dnd.DropTarget.dropTargetProc(DropTarget.java:471)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.dnd.DropTarget.dndCallSuper(DropTarget.java:210)
	at org.eclipse.swt.dnd.DropTarget.performDragOperation(DropTarget.java:739)
	at org.eclipse.swt.dnd.DropTarget.dropTargetProc(DropTarget.java:456)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:227)
	at org.eclipse.swt.widgets.Widget.mouseDownSuper(Widget.java:1121)
	at org.eclipse.swt.widgets.Tree.mouseDownSuper(Tree.java:2047)
	at org.eclipse.swt.widgets.Widget.mouseDown(Widget.java:1113)
	at org.eclipse.swt.widgets.Control.mouseDown(Control.java:2569)
	at org.eclipse.swt.widgets.Tree.mouseDown(Tree.java:2015)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5692)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:227)
	at org.eclipse.swt.widgets.Widget.windowSendEvent(Widget.java:2130)
	at org.eclipse.swt.widgets.Shell.windowSendEvent(Shell.java:2337)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5756)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Display.applicationSendEvent(Display.java:5193)
	at org.eclipse.swt.widgets.Display.applicationProc(Display.java:5342)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSApplication.sendEvent(NSApplication.java:128)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3695)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:1127)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1018)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:156)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:654)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:598)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:139)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:380)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:235)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:669)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:608)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1515)

!ENTRY org.eclipse.wb.core 4 4 2016-04-08 20:14:09.427
!MESSAGE Designer [1.8.0.r45x201506110820.201604082003]: Execution flow problem. {
  EventQueue.invokeLater(new Runnable(){
    public void run(){
      try {
        taskManager=TaskManager.getInstance();
        ApplicationWindow window=new ApplicationWindow();
        window.frame.setVisible(true);
        window.frame.setResizable(false);
      }
 catch (      Exception e) {
        e.printStackTrace();
      }
    }
  }
);
}
 expected, but {
  frame=new JFrame();
  frame.setBounds(100,100,828,580);
  frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
  frame.getContentPane().setLayout(null);
  JPanel panel_3=new JPanel();
  panel_3.setBorder(new LineBorder(SystemColor.textHighlight));
  panel_3.setBackground(new Color(255,255,255));
  panel_3.setBounds(20,80,516,422);
  frame.getContentPane().add(panel_3);
  panel_3.setLayout(null);
  taskList=new JList<String>();
  taskList.addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      selectedListIndex=taskList.getSelectedIndex();
      setTaskDetailView();
    }
  }
);
  taskList.setBackground(UIManager.getColor("TabbedPane.selectedTabTitlePressedColor"));
  taskList.setBorder(new EtchedBorder(EtchedBorder.LOWERED,null,null));
  taskList.setToolTipText("");
  taskList.setSelectionForeground(new Color(255,255,255));
  taskList.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
  taskList.setSelectionBackground(new Color(255,165,0));
  taskList.setForeground(new Color(255,165,0));
  taskList.setFont(new Font("Open Sans",Font.PLAIN,17));
  taskList.setModel(new AbstractListModel<String>(){
    private static final long serialVersionUID=1L;
    String[] values=taskManager.getTaskNames();
    public int getSize(){
      return values.length;
    }
    public String getElementAt(    int index){
      return values[index];
    }
  }
);
  taskList.setFixedCellHeight(25);
  taskList.setBounds(11,44,496,368);
  scrollPane=new JScrollPane();
  scrollPane.setBounds(11,44,496,368);
  scrollPane.setViewportView(taskList);
  panel_3.add(scrollPane);
  filterDropdown=new JComboBox();
  filterDropdown.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      String filterString;
switch (filterDropdown.getSelectedIndex()) {
case 0:
        filterString="filter all";
      break;
case 1:
    filterString="filter incomplete";
  break;
case 2:
filterString="filter complete";
break;
case 3:
filterString="filter short";
break;
case 4:
filterString="filter medium";
break;
case 5:
filterString="filter long";
break;
case 6:
filterString="filter soon";
break;
default :
filterString="";
break;
}
try {
taskManager.executeCommand(filterString,window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
refreshWindow();
}
}
);
filterDropdown.setBackground(new Color(255,255,255));
filterDropdown.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
filterDropdown.setForeground(new Color(60,179,113));
filterDropdown.setModel(new DefaultComboBoxModel(new String[]{"Filter by...","Incomplete Tasks","Complete Tasks","Short Tasks (<1 hour)","Medium Tasks (1 - 3 hours)","Long Tasks (3+ hours)","Tasks Ending Soon"}));
filterDropdown.setFont(new Font("Open Sans",Font.PLAIN,15));
filterDropdown.setBounds(6,6,258,36);
panel_3.add(filterDropdown);
sortDropdown=new JComboBox();
sortDropdown.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
String sortString;
switch (sortDropdown.getSelectedIndex()) {
case 0:
sortString="sort default";
break;
case 1:
sortString="sort name";
break;
case 2:
sortString="sort date";
break;
case 3:
sortString="sort start";
break;
case 4:
sortString="sort end";
break;
case 5:
sortString="sort duration";
break;
default :
sortString="";
break;
}
try {
taskManager.executeCommand(sortString,window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
}
}
);
sortDropdown.setOpaque(true);
sortDropdown.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
sortDropdown.setModel(new DefaultComboBoxModel(new String[]{"Sort By...","Name","Date","Starting Time","Ending Time","Duration"}));
sortDropdown.setForeground(new Color(60,179,113));
sortDropdown.setFont(new Font("Open Sans",Font.PLAIN,15));
sortDropdown.setBackground(Color.WHITE);
sortDropdown.setBounds(261,6,249,36);
panel_3.add(sortDropdown);
historyList=new JList();
historyList.setEnabled(false);
historyList.setForeground(new Color(60,179,113));
historyList.setFont(new Font("Open Sans",Font.PLAIN,13));
historyList.setBounds(6,6,501,406);
historyList.setModel(new AbstractListModel(){
List<String> history=taskManager.getHistoryList();
public int getSize(){
return history.size();
}
public Object getElementAt(int index){
return history.get(index);
}
}
);
panel_3.add(historyList);
String[] columns=new String[]{"Task Name","Task Duration","Task Date and Time","Task Completion"};
List<Task> tasks=taskManager.getTasks();
Object[][] data=new Object[taskManager.getNumberOfTasks()][4];
for (int i=0; i < taskManager.getNumberOfTasks(); i++) {
for (int j=0; j < 4; j++) {
switch (j) {
case 0:
data[i][j]=tasks.get(i).getName();
break;
case 1:
if (tasks.get(i).getDuration() != 0) {
data[i][j]=tasks.get(i).getDuration();
}
 else {
data[i][j]="N/A";
}
break;
case 2:
if (tasks.get(i).getTimeStart() != null) {
data[i][j]=tasks.get(i).getTimeStart();
}
 else {
data[i][j]="N/A";
}
break;
default :
data[i][j]=tasks.get(i).getDoneStatus();
break;
}
}
}
table=new JTable(data,columns);
table.setBounds(0,0,492,0);
frame.getContentPane().add(table);
JPanel panel_1=new JPanel();
panel_1.setBackground(new Color(51,204,153));
panel_1.setBounds(0,0,828,64);
frame.getContentPane().add(panel_1);
panel_1.setLayout(null);
JLabel lblSnaptask=new JLabel("snaptask");
lblSnaptask.setFont(new Font("Open Sans",Font.PLAIN,48));
lblSnaptask.setForeground(new Color(255,255,255));
lblSnaptask.setBounds(16,0,216,58);
panel_1.add(lblSnaptask);
JPanel searchLine=new JPanel();
searchLine.setBackground(new Color(255,165,0));
searchLine.setBorder(null);
searchLine.setBounds(556,44,251,6);
searchLine.setEnabled(false);
panel_1.add(searchLine);
searchField=new JTextField();
searchField.addFocusListener(new FocusAdapter(){
@Override public void focusGained(FocusEvent e){
if (firstFocusSearchText) {
searchField.setText("");
firstFocusSearchText=false;
}
}
}
);
searchField.setFont(new Font("Open Sans",Font.PLAIN,15));
searchField.setForeground(new Color(169,169,169));
searchField.setToolTipText("Search for tasks!");
searchField.setText("Search for tasks!");
searchField.setBounds(552,15,258,36);
panel_1.add(searchField);
searchField.setColumns(10);
homeButton=new JButton("\n");
homeButton.setOpaque(true);
homeButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=0;
refreshButtons();
}
}
);
homeButton.setIcon(new ImageIcon("/Users/admin/Desktop/ListIcon.png"));
homeButton.setBorder(new EmptyBorder(0,0,0,0));
homeButton.setBackground(new Color(0,204,153));
homeButton.setBounds(237,0,66,64);
panel_1.add(homeButton);
historyButton=new JButton("\n");
historyButton.setOpaque(true);
historyButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=1;
refreshButtons();
}
}
);
historyButton.setIcon(new ImageIcon("/Users/admin/Desktop/HistoryIcon.png"));
historyButton.setBorder(new EmptyBorder(0,0,0,0));
historyButton.setBackground(new Color(0,204,153));
historyButton.setBounds(312,0,66,64);
panel_1.add(historyButton);
helpButton=new JButton("\n");
helpButton.setOpaque(true);
helpButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=2;
refreshButtons();
}
}
);
helpButton.setIcon(new ImageIcon("/Users/admin/Desktop/InfoImage.png"));
helpButton.setBorder(new EmptyBorder(0,0,0,0));
helpButton.setBackground(new Color(0,204,153));
helpButton.setBounds(391,0,66,64);
panel_1.add(helpButton);
JPanel panel=new JPanel();
panel.setBorder(new LineBorder(SystemColor.textHighlight));
panel.setBackground(new Color(255,255,255));
panel.setBounds(557,80,251,422);
frame.getContentPane().add(panel);
panel.setLayout(null);
warningBackground=new JPanel();
warningBackground.setEnabled(false);
warningBackground.setBorder(null);
warningBackground.setBackground(new Color(255,165,0));
warningBackground.setBounds(0,20,252,29);
panel.add(warningBackground);
warningBackground.setLayout(null);
txtLabelStatus=new JTextPane();
txtLabelStatus.setDisabledTextColor(SystemColor.text);
txtLabelStatus.setSelectionColor(SystemColor.activeCaption);
txtLabelStatus.setEnabled(false);
txtLabelStatus.setBounds(72,0,105,28);
txtLabelStatus.setFont(new Font("Open Sans",Font.PLAIN,20));
txtLabelStatus.setForeground(new Color(255,255,255));
txtLabelStatus.setBackground(new Color(255,165,0));
warningBackground.add(txtLabelStatus);
txtAreaDescription=new JTextPane();
txtAreaDescription.setFont(new Font("Open Sans",Font.PLAIN,14));
txtAreaDescription.setForeground(new Color(60,179,113));
txtAreaDescription.setBounds(10,232,208,159);
txtAreaDescription.setEnabled(false);
panel.add(txtAreaDescription);
txtAreaTaskDetails=new JTextArea();
txtAreaTaskDetails.setFont(new Font("Open Sans",Font.PLAIN,17));
txtAreaTaskDetails.setForeground(SystemColor.scrollbar);
txtAreaTaskDetails.setBounds(10,61,233,231);
txtAreaTaskDetails.setEnabled(false);
panel.add(txtAreaTaskDetails);
txtAreaHelp=new JTextPane();
txtAreaHelp.setForeground(new Color(102,205,170));
txtAreaHelp.setFont(new Font("Open Sans",Font.PLAIN,13));
txtAreaHelp.setBounds(30,100,499,372);
frame.getContentPane().add(txtAreaHelp);
txtAreaHelp.setText("add [NAME] || [DD/MM/YYYY] [HH:MM] [H:M]\nadd [NAME] || [DD/MM/YYYY] [HH:MM]\nadd [NAME] || [DD/MM/YYYY]\nadd [NAME]\ndelete [INDEX]\ndone [INDEX]\nedit [INDEX] name [STRING]\nedit [INDEX] duration [STRING]\nedit [INDEX] datetime [STRING]\nedit [INDEX] all [NAME] [DATE] [TIME] [DURATION]\nclear\ndisplay [INDEX]\nsearch name [STRING]\nsearch date [DD/MM/YYYY]\nundo\nhome\nhistory\nhelp\nsort [NAME/DATE/START/END/DURATION/DEFAULT]\nfilter [INCOMPLETE/COMPLETE/SHORT/MEDIUM/LONG/SOON/ALL]\n");
JPanel taskManageLine=new JPanel();
taskManageLine.setEnabled(false);
taskManageLine.setBorder(null);
taskManageLine.setBackground(new Color(255,165,0));
taskManageLine.setBounds(21,540,786,6);
taskManageLine.setEnabled(false);
frame.getContentPane().add(taskManageLine);
textFieldTaskManage=new JTextField();
textFieldTaskManage.addFocusListener(new FocusAdapter(){
@Override public void focusGained(FocusEvent e){
if (firstFocusManageText) {
textFieldTaskManage.setText("");
firstFocusManageText=false;
}
}
}
);
textFieldTaskManage.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
try {
taskManager.executeCommand(textFieldTaskManage.getText(),window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
refreshWindow();
textFieldTaskManage.setText("");
}
}
);
textFieldTaskManage.setDisabledTextColor(new Color(128,128,128));
textFieldTaskManage.setForeground(new Color(169,169,169));
textFieldTaskManage.setFont(new Font("Open Sans",Font.PLAIN,15));
textFieldTaskManage.setToolTipText("Manage your tasks here!");
textFieldTaskManage.setColumns(10);
textFieldTaskManage.setBounds(18,510,792,36);
textFieldTaskManage.setText("Manage your tasks here!");
frame.getContentPane().add(textFieldTaskManage);
refreshButtons();
}
 found.
!STACK 0
org.eclipse.wb.internal.core.utils.check.AssertionFailedException: Execution flow problem. {
  EventQueue.invokeLater(new Runnable(){
    public void run(){
      try {
        taskManager=TaskManager.getInstance();
        ApplicationWindow window=new ApplicationWindow();
        window.frame.setVisible(true);
        window.frame.setResizable(false);
      }
 catch (      Exception e) {
        e.printStackTrace();
      }
    }
  }
);
}
 expected, but {
  frame=new JFrame();
  frame.setBounds(100,100,828,580);
  frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
  frame.getContentPane().setLayout(null);
  JPanel panel_3=new JPanel();
  panel_3.setBorder(new LineBorder(SystemColor.textHighlight));
  panel_3.setBackground(new Color(255,255,255));
  panel_3.setBounds(20,80,516,422);
  frame.getContentPane().add(panel_3);
  panel_3.setLayout(null);
  taskList=new JList<String>();
  taskList.addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      selectedListIndex=taskList.getSelectedIndex();
      setTaskDetailView();
    }
  }
);
  taskList.setBackground(UIManager.getColor("TabbedPane.selectedTabTitlePressedColor"));
  taskList.setBorder(new EtchedBorder(EtchedBorder.LOWERED,null,null));
  taskList.setToolTipText("");
  taskList.setSelectionForeground(new Color(255,255,255));
  taskList.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
  taskList.setSelectionBackground(new Color(255,165,0));
  taskList.setForeground(new Color(255,165,0));
  taskList.setFont(new Font("Open Sans",Font.PLAIN,17));
  taskList.setModel(new AbstractListModel<String>(){
    private static final long serialVersionUID=1L;
    String[] values=taskManager.getTaskNames();
    public int getSize(){
      return values.length;
    }
    public String getElementAt(    int index){
      return values[index];
    }
  }
);
  taskList.setFixedCellHeight(25);
  taskList.setBounds(11,44,496,368);
  scrollPane=new JScrollPane();
  scrollPane.setBounds(11,44,496,368);
  scrollPane.setViewportView(taskList);
  panel_3.add(scrollPane);
  filterDropdown=new JComboBox();
  filterDropdown.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      String filterString;
switch (filterDropdown.getSelectedIndex()) {
case 0:
        filterString="filter all";
      break;
case 1:
    filterString="filter incomplete";
  break;
case 2:
filterString="filter complete";
break;
case 3:
filterString="filter short";
break;
case 4:
filterString="filter medium";
break;
case 5:
filterString="filter long";
break;
case 6:
filterString="filter soon";
break;
default :
filterString="";
break;
}
try {
taskManager.executeCommand(filterString,window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
refreshWindow();
}
}
);
filterDropdown.setBackground(new Color(255,255,255));
filterDropdown.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
filterDropdown.setForeground(new Color(60,179,113));
filterDropdown.setModel(new DefaultComboBoxModel(new String[]{"Filter by...","Incomplete Tasks","Complete Tasks","Short Tasks (<1 hour)","Medium Tasks (1 - 3 hours)","Long Tasks (3+ hours)","Tasks Ending Soon"}));
filterDropdown.setFont(new Font("Open Sans",Font.PLAIN,15));
filterDropdown.setBounds(6,6,258,36);
panel_3.add(filterDropdown);
sortDropdown=new JComboBox();
sortDropdown.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
String sortString;
switch (sortDropdown.getSelectedIndex()) {
case 0:
sortString="sort default";
break;
case 1:
sortString="sort name";
break;
case 2:
sortString="sort date";
break;
case 3:
sortString="sort start";
break;
case 4:
sortString="sort end";
break;
case 5:
sortString="sort duration";
break;
default :
sortString="";
break;
}
try {
taskManager.executeCommand(sortString,window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
}
}
);
sortDropdown.setOpaque(true);
sortDropdown.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
sortDropdown.setModel(new DefaultComboBoxModel(new String[]{"Sort By...","Name","Date","Starting Time","Ending Time","Duration"}));
sortDropdown.setForeground(new Color(60,179,113));
sortDropdown.setFont(new Font("Open Sans",Font.PLAIN,15));
sortDropdown.setBackground(Color.WHITE);
sortDropdown.setBounds(261,6,249,36);
panel_3.add(sortDropdown);
historyList=new JList();
historyList.setEnabled(false);
historyList.setForeground(new Color(60,179,113));
historyList.setFont(new Font("Open Sans",Font.PLAIN,13));
historyList.setBounds(6,6,501,406);
historyList.setModel(new AbstractListModel(){
List<String> history=taskManager.getHistoryList();
public int getSize(){
return history.size();
}
public Object getElementAt(int index){
return history.get(index);
}
}
);
panel_3.add(historyList);
String[] columns=new String[]{"Task Name","Task Duration","Task Date and Time","Task Completion"};
List<Task> tasks=taskManager.getTasks();
Object[][] data=new Object[taskManager.getNumberOfTasks()][4];
for (int i=0; i < taskManager.getNumberOfTasks(); i++) {
for (int j=0; j < 4; j++) {
switch (j) {
case 0:
data[i][j]=tasks.get(i).getName();
break;
case 1:
if (tasks.get(i).getDuration() != 0) {
data[i][j]=tasks.get(i).getDuration();
}
 else {
data[i][j]="N/A";
}
break;
case 2:
if (tasks.get(i).getTimeStart() != null) {
data[i][j]=tasks.get(i).getTimeStart();
}
 else {
data[i][j]="N/A";
}
break;
default :
data[i][j]=tasks.get(i).getDoneStatus();
break;
}
}
}
table=new JTable(data,columns);
table.setBounds(0,0,492,0);
frame.getContentPane().add(table);
JPanel panel_1=new JPanel();
panel_1.setBackground(new Color(51,204,153));
panel_1.setBounds(0,0,828,64);
frame.getContentPane().add(panel_1);
panel_1.setLayout(null);
JLabel lblSnaptask=new JLabel("snaptask");
lblSnaptask.setFont(new Font("Open Sans",Font.PLAIN,48));
lblSnaptask.setForeground(new Color(255,255,255));
lblSnaptask.setBounds(16,0,216,58);
panel_1.add(lblSnaptask);
JPanel searchLine=new JPanel();
searchLine.setBackground(new Color(255,165,0));
searchLine.setBorder(null);
searchLine.setBounds(556,44,251,6);
searchLine.setEnabled(false);
panel_1.add(searchLine);
searchField=new JTextField();
searchField.addFocusListener(new FocusAdapter(){
@Override public void focusGained(FocusEvent e){
if (firstFocusSearchText) {
searchField.setText("");
firstFocusSearchText=false;
}
}
}
);
searchField.setFont(new Font("Open Sans",Font.PLAIN,15));
searchField.setForeground(new Color(169,169,169));
searchField.setToolTipText("Search for tasks!");
searchField.setText("Search for tasks!");
searchField.setBounds(552,15,258,36);
panel_1.add(searchField);
searchField.setColumns(10);
homeButton=new JButton("\n");
homeButton.setOpaque(true);
homeButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=0;
refreshButtons();
}
}
);
homeButton.setIcon(new ImageIcon("/Users/admin/Desktop/ListIcon.png"));
homeButton.setBorder(new EmptyBorder(0,0,0,0));
homeButton.setBackground(new Color(0,204,153));
homeButton.setBounds(237,0,66,64);
panel_1.add(homeButton);
historyButton=new JButton("\n");
historyButton.setOpaque(true);
historyButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=1;
refreshButtons();
}
}
);
historyButton.setIcon(new ImageIcon("/Users/admin/Desktop/HistoryIcon.png"));
historyButton.setBorder(new EmptyBorder(0,0,0,0));
historyButton.setBackground(new Color(0,204,153));
historyButton.setBounds(312,0,66,64);
panel_1.add(historyButton);
helpButton=new JButton("\n");
helpButton.setOpaque(true);
helpButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=2;
refreshButtons();
}
}
);
helpButton.setIcon(new ImageIcon("/Users/admin/Desktop/InfoImage.png"));
helpButton.setBorder(new EmptyBorder(0,0,0,0));
helpButton.setBackground(new Color(0,204,153));
helpButton.setBounds(391,0,66,64);
panel_1.add(helpButton);
JPanel panel=new JPanel();
panel.setBorder(new LineBorder(SystemColor.textHighlight));
panel.setBackground(new Color(255,255,255));
panel.setBounds(557,80,251,422);
frame.getContentPane().add(panel);
panel.setLayout(null);
warningBackground=new JPanel();
warningBackground.setEnabled(false);
warningBackground.setBorder(null);
warningBackground.setBackground(new Color(255,165,0));
warningBackground.setBounds(0,20,252,29);
panel.add(warningBackground);
warningBackground.setLayout(null);
txtLabelStatus=new JTextPane();
txtLabelStatus.setDisabledTextColor(SystemColor.text);
txtLabelStatus.setSelectionColor(SystemColor.activeCaption);
txtLabelStatus.setEnabled(false);
txtLabelStatus.setBounds(72,0,105,28);
txtLabelStatus.setFont(new Font("Open Sans",Font.PLAIN,20));
txtLabelStatus.setForeground(new Color(255,255,255));
txtLabelStatus.setBackground(new Color(255,165,0));
warningBackground.add(txtLabelStatus);
txtAreaDescription=new JTextPane();
txtAreaDescription.setFont(new Font("Open Sans",Font.PLAIN,14));
txtAreaDescription.setForeground(new Color(60,179,113));
txtAreaDescription.setBounds(10,232,208,159);
txtAreaDescription.setEnabled(false);
panel.add(txtAreaDescription);
txtAreaTaskDetails=new JTextArea();
txtAreaTaskDetails.setFont(new Font("Open Sans",Font.PLAIN,17));
txtAreaTaskDetails.setForeground(SystemColor.scrollbar);
txtAreaTaskDetails.setBounds(10,61,233,231);
txtAreaTaskDetails.setEnabled(false);
panel.add(txtAreaTaskDetails);
txtAreaHelp=new JTextPane();
txtAreaHelp.setForeground(new Color(102,205,170));
txtAreaHelp.setFont(new Font("Open Sans",Font.PLAIN,13));
txtAreaHelp.setBounds(30,100,499,372);
frame.getContentPane().add(txtAreaHelp);
txtAreaHelp.setText("add [NAME] || [DD/MM/YYYY] [HH:MM] [H:M]\nadd [NAME] || [DD/MM/YYYY] [HH:MM]\nadd [NAME] || [DD/MM/YYYY]\nadd [NAME]\ndelete [INDEX]\ndone [INDEX]\nedit [INDEX] name [STRING]\nedit [INDEX] duration [STRING]\nedit [INDEX] datetime [STRING]\nedit [INDEX] all [NAME] [DATE] [TIME] [DURATION]\nclear\ndisplay [INDEX]\nsearch name [STRING]\nsearch date [DD/MM/YYYY]\nundo\nhome\nhistory\nhelp\nsort [NAME/DATE/START/END/DURATION/DEFAULT]\nfilter [INCOMPLETE/COMPLETE/SHORT/MEDIUM/LONG/SOON/ALL]\n");
JPanel taskManageLine=new JPanel();
taskManageLine.setEnabled(false);
taskManageLine.setBorder(null);
taskManageLine.setBackground(new Color(255,165,0));
taskManageLine.setBounds(21,540,786,6);
taskManageLine.setEnabled(false);
frame.getContentPane().add(taskManageLine);
textFieldTaskManage=new JTextField();
textFieldTaskManage.addFocusListener(new FocusAdapter(){
@Override public void focusGained(FocusEvent e){
if (firstFocusManageText) {
textFieldTaskManage.setText("");
firstFocusManageText=false;
}
}
}
);
textFieldTaskManage.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
try {
taskManager.executeCommand(textFieldTaskManage.getText(),window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
refreshWindow();
textFieldTaskManage.setText("");
}
}
);
textFieldTaskManage.setDisabledTextColor(new Color(128,128,128));
textFieldTaskManage.setForeground(new Color(169,169,169));
textFieldTaskManage.setFont(new Font("Open Sans",Font.PLAIN,15));
textFieldTaskManage.setToolTipText("Manage your tasks here!");
textFieldTaskManage.setColumns(10);
textFieldTaskManage.setBounds(18,510,792,36);
textFieldTaskManage.setText("Manage your tasks here!");
frame.getContentPane().add(textFieldTaskManage);
refreshButtons();
}
 found.
	at org.eclipse.wb.internal.core.utils.check.Assert.fail(Assert.java:225)
	at org.eclipse.wb.internal.core.utils.check.Assert.isTrue(Assert.java:291)
	at org.eclipse.wb.core.eval.ExecutionFlowDescription.leaveStatement(ExecutionFlowDescription.java:152)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:317)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.prepareAssignmentInformation(ExecutionFlowUtils.java:784)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.getVariableCachedValue(ExecutionFlowUtils.java:753)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.getVariableCachedList_notNull(ExecutionFlowUtils.java:707)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.getReferences(ExecutionFlowUtils.java:669)
	at org.eclipse.wb.internal.core.model.variable.AbstractNamedVariableSupport.getReferences(AbstractNamedVariableSupport.java:184)
	at org.eclipse.wb.internal.core.model.variable.FieldUniqueVariableSupport.canConvertFieldToLocal(FieldUniqueVariableSupport.java:97)
	at org.eclipse.wb.internal.core.editor.structure.property.JavaPropertiesToolBarContributor.addVariableConvertAction(JavaPropertiesToolBarContributor.java:101)
	at org.eclipse.wb.internal.core.editor.structure.property.JavaPropertiesToolBarContributor.contributeToolBar(JavaPropertiesToolBarContributor.java:54)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage$2$1.run(ComponentsPropertiesPage.java:186)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runLog(ExecutionUtils.java:106)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage$2.run(ComponentsPropertiesPage.java:184)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runLog(ExecutionUtils.java:106)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage.updateActions(ComponentsPropertiesPage.java:160)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage.access$22(ComponentsPropertiesPage.java:159)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage$12.run(ComponentsPropertiesPage.java:538)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runLog(ExecutionUtils.java:106)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage.refreshProperties(ComponentsPropertiesPage.java:530)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage.setSelection(ComponentsPropertiesPage.java:321)
	at org.eclipse.wb.internal.core.editor.structure.DesignComponentsComposite$1.selectionChanged(DesignComponentsComposite.java:72)
	at org.eclipse.wb.internal.core.utils.gef.EditPartsSelectionProvider.fireSelectionChanged(EditPartsSelectionProvider.java:111)
	at org.eclipse.wb.internal.core.utils.gef.EditPartsSelectionProvider.access$0(EditPartsSelectionProvider.java:102)
	at org.eclipse.wb.internal.core.utils.gef.EditPartsSelectionProvider$1.selectionChanged(EditPartsSelectionProvider.java:40)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.fireSelectionChanged(AbstractEditPartViewer.java:202)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.setSelection(AbstractEditPartViewer.java:262)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.setSelection(AbstractEditPartViewer.java:193)
	at org.eclipse.wb.internal.gef.tree.TreeViewer$1.widgetSelected(TreeViewer.java:180)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:248)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1491)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1514)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1499)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1299)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4072)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3698)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.waitEventLoop(ExecutionUtils.java:71)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:168)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runLaterAndWait(SwingUtils.java:73)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.execRefreshOperation(ComponentInfo.java:119)
	at org.eclipse.wb.core.model.ObjectInfo.refresh(ObjectInfo.java:482)
	at org.eclipse.wb.core.model.ObjectInfo.endEdit(ObjectInfo.java:446)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:325)
	at org.eclipse.wb.core.gef.command.EditCommand.execute(EditCommand.java:50)
	at org.eclipse.wb.internal.gef.core.EditDomain.executeCommand(EditDomain.java:59)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.executeCommand(TreeDropListener.java:265)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.drop(TreeDropListener.java:103)
	at org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:91)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1491)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1514)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1499)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1299)
	at org.eclipse.swt.dnd.DropTarget.drop(DropTarget.java:728)
	at org.eclipse.swt.dnd.DropTarget.outlineView_acceptDrop_item_childIndex(DropTarget.java:746)
	at org.eclipse.swt.dnd.DropTarget.dropTargetProc(DropTarget.java:471)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.dnd.DropTarget.dndCallSuper(DropTarget.java:210)
	at org.eclipse.swt.dnd.DropTarget.performDragOperation(DropTarget.java:739)
	at org.eclipse.swt.dnd.DropTarget.dropTargetProc(DropTarget.java:456)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:227)
	at org.eclipse.swt.widgets.Widget.mouseDownSuper(Widget.java:1121)
	at org.eclipse.swt.widgets.Tree.mouseDownSuper(Tree.java:2047)
	at org.eclipse.swt.widgets.Widget.mouseDown(Widget.java:1113)
	at org.eclipse.swt.widgets.Control.mouseDown(Control.java:2569)
	at org.eclipse.swt.widgets.Tree.mouseDown(Tree.java:2015)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5692)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:227)
	at org.eclipse.swt.widgets.Widget.windowSendEvent(Widget.java:2130)
	at org.eclipse.swt.widgets.Shell.windowSendEvent(Shell.java:2337)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5756)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Display.applicationSendEvent(Display.java:5193)
	at org.eclipse.swt.widgets.Display.applicationProc(Display.java:5342)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSApplication.sendEvent(NSApplication.java:128)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3695)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:1127)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1018)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:156)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:654)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:598)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:139)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:380)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:235)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:669)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:608)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1515)

!ENTRY org.eclipse.wb.core 4 4 2016-04-08 20:14:10.213
!MESSAGE Designer [1.8.0.r45x201506110820.201604082003]: Execution flow problem. {
  frame=new JFrame();
  frame.setBounds(100,100,828,580);
  frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
  frame.getContentPane().setLayout(null);
  JPanel panel_3=new JPanel();
  panel_3.setBorder(new LineBorder(SystemColor.textHighlight));
  panel_3.setBackground(new Color(255,255,255));
  panel_3.setBounds(20,80,516,422);
  frame.getContentPane().add(panel_3);
  panel_3.setLayout(null);
  taskList=new JList<String>();
  taskList.addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      selectedListIndex=taskList.getSelectedIndex();
      setTaskDetailView();
    }
  }
);
  taskList.setBackground(UIManager.getColor("TabbedPane.selectedTabTitlePressedColor"));
  taskList.setBorder(new EtchedBorder(EtchedBorder.LOWERED,null,null));
  taskList.setToolTipText("");
  taskList.setSelectionForeground(new Color(255,255,255));
  taskList.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
  taskList.setSelectionBackground(new Color(255,165,0));
  taskList.setForeground(new Color(255,165,0));
  taskList.setFont(new Font("Open Sans",Font.PLAIN,17));
  taskList.setModel(new AbstractListModel<String>(){
    private static final long serialVersionUID=1L;
    String[] values=taskManager.getTaskNames();
    public int getSize(){
      return values.length;
    }
    public String getElementAt(    int index){
      return values[index];
    }
  }
);
  taskList.setFixedCellHeight(25);
  taskList.setBounds(11,44,496,368);
  scrollPane=new JScrollPane();
  scrollPane.setBounds(11,44,496,368);
  scrollPane.setViewportView(taskList);
  panel_3.add(scrollPane);
  filterDropdown=new JComboBox();
  filterDropdown.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      String filterString;
switch (filterDropdown.getSelectedIndex()) {
case 0:
        filterString="filter all";
      break;
case 1:
    filterString="filter incomplete";
  break;
case 2:
filterString="filter complete";
break;
case 3:
filterString="filter short";
break;
case 4:
filterString="filter medium";
break;
case 5:
filterString="filter long";
break;
case 6:
filterString="filter soon";
break;
default :
filterString="";
break;
}
try {
taskManager.executeCommand(filterString,window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
refreshWindow();
}
}
);
filterDropdown.setBackground(new Color(255,255,255));
filterDropdown.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
filterDropdown.setForeground(new Color(60,179,113));
filterDropdown.setModel(new DefaultComboBoxModel(new String[]{"Filter by...","Incomplete Tasks","Complete Tasks","Short Tasks (<1 hour)","Medium Tasks (1 - 3 hours)","Long Tasks (3+ hours)","Tasks Ending Soon"}));
filterDropdown.setFont(new Font("Open Sans",Font.PLAIN,15));
filterDropdown.setBounds(6,6,258,36);
panel_3.add(filterDropdown);
sortDropdown=new JComboBox();
sortDropdown.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
String sortString;
switch (sortDropdown.getSelectedIndex()) {
case 0:
sortString="sort default";
break;
case 1:
sortString="sort name";
break;
case 2:
sortString="sort date";
break;
case 3:
sortString="sort start";
break;
case 4:
sortString="sort end";
break;
case 5:
sortString="sort duration";
break;
default :
sortString="";
break;
}
try {
taskManager.executeCommand(sortString,window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
}
}
);
sortDropdown.setOpaque(true);
sortDropdown.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
sortDropdown.setModel(new DefaultComboBoxModel(new String[]{"Sort By...","Name","Date","Starting Time","Ending Time","Duration"}));
sortDropdown.setForeground(new Color(60,179,113));
sortDropdown.setFont(new Font("Open Sans",Font.PLAIN,15));
sortDropdown.setBackground(Color.WHITE);
sortDropdown.setBounds(261,6,249,36);
panel_3.add(sortDropdown);
historyList=new JList();
historyList.setEnabled(false);
historyList.setForeground(new Color(60,179,113));
historyList.setFont(new Font("Open Sans",Font.PLAIN,13));
historyList.setBounds(6,6,501,406);
historyList.setModel(new AbstractListModel(){
List<String> history=taskManager.getHistoryList();
public int getSize(){
return history.size();
}
public Object getElementAt(int index){
return history.get(index);
}
}
);
panel_3.add(historyList);
String[] columns=new String[]{"Task Name","Task Duration","Task Date and Time","Task Completion"};
List<Task> tasks=taskManager.getTasks();
Object[][] data=new Object[taskManager.getNumberOfTasks()][4];
for (int i=0; i < taskManager.getNumberOfTasks(); i++) {
for (int j=0; j < 4; j++) {
switch (j) {
case 0:
data[i][j]=tasks.get(i).getName();
break;
case 1:
if (tasks.get(i).getDuration() != 0) {
data[i][j]=tasks.get(i).getDuration();
}
 else {
data[i][j]="N/A";
}
break;
case 2:
if (tasks.get(i).getTimeStart() != null) {
data[i][j]=tasks.get(i).getTimeStart();
}
 else {
data[i][j]="N/A";
}
break;
default :
data[i][j]=tasks.get(i).getDoneStatus();
break;
}
}
}
table=new JTable(data,columns);
table.setBounds(0,0,492,0);
frame.getContentPane().add(table);
JPanel panel_1=new JPanel();
panel_1.setBackground(new Color(51,204,153));
panel_1.setBounds(0,0,828,64);
frame.getContentPane().add(panel_1);
panel_1.setLayout(null);
JLabel lblSnaptask=new JLabel("snaptask");
lblSnaptask.setFont(new Font("Open Sans",Font.PLAIN,48));
lblSnaptask.setForeground(new Color(255,255,255));
lblSnaptask.setBounds(16,0,216,58);
panel_1.add(lblSnaptask);
JPanel searchLine=new JPanel();
searchLine.setBackground(new Color(255,165,0));
searchLine.setBorder(null);
searchLine.setBounds(556,44,251,6);
searchLine.setEnabled(false);
panel_1.add(searchLine);
searchField=new JTextField();
searchField.addFocusListener(new FocusAdapter(){
@Override public void focusGained(FocusEvent e){
if (firstFocusSearchText) {
searchField.setText("");
firstFocusSearchText=false;
}
}
}
);
searchField.setFont(new Font("Open Sans",Font.PLAIN,15));
searchField.setForeground(new Color(169,169,169));
searchField.setToolTipText("Search for tasks!");
searchField.setText("Search for tasks!");
searchField.setBounds(552,15,258,36);
panel_1.add(searchField);
searchField.setColumns(10);
homeButton=new JButton("\n");
homeButton.setOpaque(true);
homeButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=0;
refreshButtons();
}
}
);
homeButton.setIcon(new ImageIcon("/Users/admin/Desktop/ListIcon.png"));
homeButton.setBorder(new EmptyBorder(0,0,0,0));
homeButton.setBackground(new Color(0,204,153));
homeButton.setBounds(237,0,66,64);
panel_1.add(homeButton);
historyButton=new JButton("\n");
historyButton.setOpaque(true);
historyButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=1;
refreshButtons();
}
}
);
historyButton.setIcon(new ImageIcon("/Users/admin/Desktop/HistoryIcon.png"));
historyButton.setBorder(new EmptyBorder(0,0,0,0));
historyButton.setBackground(new Color(0,204,153));
historyButton.setBounds(312,0,66,64);
panel_1.add(historyButton);
helpButton=new JButton("\n");
helpButton.setOpaque(true);
helpButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=2;
refreshButtons();
}
}
);
helpButton.setIcon(new ImageIcon("/Users/admin/Desktop/InfoImage.png"));
helpButton.setBorder(new EmptyBorder(0,0,0,0));
helpButton.setBackground(new Color(0,204,153));
helpButton.setBounds(391,0,66,64);
panel_1.add(helpButton);
JPanel panel=new JPanel();
panel.setBorder(new LineBorder(SystemColor.textHighlight));
panel.setBackground(new Color(255,255,255));
panel.setBounds(557,80,251,422);
frame.getContentPane().add(panel);
panel.setLayout(null);
warningBackground=new JPanel();
warningBackground.setEnabled(false);
warningBackground.setBorder(null);
warningBackground.setBackground(new Color(255,165,0));
warningBackground.setBounds(0,20,252,29);
panel.add(warningBackground);
warningBackground.setLayout(null);
txtLabelStatus=new JTextPane();
txtLabelStatus.setDisabledTextColor(SystemColor.text);
txtLabelStatus.setSelectionColor(SystemColor.activeCaption);
txtLabelStatus.setEnabled(false);
txtLabelStatus.setBounds(72,0,105,28);
txtLabelStatus.setFont(new Font("Open Sans",Font.PLAIN,20));
txtLabelStatus.setForeground(new Color(255,255,255));
txtLabelStatus.setBackground(new Color(255,165,0));
warningBackground.add(txtLabelStatus);
txtAreaDescription=new JTextPane();
txtAreaDescription.setFont(new Font("Open Sans",Font.PLAIN,14));
txtAreaDescription.setForeground(new Color(60,179,113));
txtAreaDescription.setBounds(10,232,208,159);
txtAreaDescription.setEnabled(false);
panel.add(txtAreaDescription);
txtAreaTaskDetails=new JTextArea();
txtAreaTaskDetails.setFont(new Font("Open Sans",Font.PLAIN,17));
txtAreaTaskDetails.setForeground(SystemColor.scrollbar);
txtAreaTaskDetails.setBounds(10,61,233,231);
txtAreaTaskDetails.setEnabled(false);
panel.add(txtAreaTaskDetails);
txtAreaHelp=new JTextPane();
txtAreaHelp.setForeground(new Color(102,205,170));
txtAreaHelp.setFont(new Font("Open Sans",Font.PLAIN,13));
txtAreaHelp.setBounds(30,100,499,372);
frame.getContentPane().add(txtAreaHelp);
txtAreaHelp.setText("add [NAME] || [DD/MM/YYYY] [HH:MM] [H:M]\nadd [NAME] || [DD/MM/YYYY] [HH:MM]\nadd [NAME] || [DD/MM/YYYY]\nadd [NAME]\ndelete [INDEX]\ndone [INDEX]\nedit [INDEX] name [STRING]\nedit [INDEX] duration [STRING]\nedit [INDEX] datetime [STRING]\nedit [INDEX] all [NAME] [DATE] [TIME] [DURATION]\nclear\ndisplay [INDEX]\nsearch name [STRING]\nsearch date [DD/MM/YYYY]\nundo\nhome\nhistory\nhelp\nsort [NAME/DATE/START/END/DURATION/DEFAULT]\nfilter [INCOMPLETE/COMPLETE/SHORT/MEDIUM/LONG/SOON/ALL]\n");
JPanel taskManageLine=new JPanel();
taskManageLine.setEnabled(false);
taskManageLine.setBorder(null);
taskManageLine.setBackground(new Color(255,165,0));
taskManageLine.setBounds(21,540,786,6);
taskManageLine.setEnabled(false);
frame.getContentPane().add(taskManageLine);
textFieldTaskManage=new JTextField();
textFieldTaskManage.addFocusListener(new FocusAdapter(){
@Override public void focusGained(FocusEvent e){
if (firstFocusManageText) {
textFieldTaskManage.setText("");
firstFocusManageText=false;
}
}
}
);
textFieldTaskManage.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
try {
taskManager.executeCommand(textFieldTaskManage.getText(),window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
refreshWindow();
textFieldTaskManage.setText("");
}
}
);
textFieldTaskManage.setDisabledTextColor(new Color(128,128,128));
textFieldTaskManage.setForeground(new Color(169,169,169));
textFieldTaskManage.setFont(new Font("Open Sans",Font.PLAIN,15));
textFieldTaskManage.setToolTipText("Manage your tasks here!");
textFieldTaskManage.setColumns(10);
textFieldTaskManage.setBounds(18,510,792,36);
textFieldTaskManage.setText("Manage your tasks here!");
frame.getContentPane().add(textFieldTaskManage);
refreshButtons();
}
 expected, but {
  initialize();
}
 found.
!STACK 0
org.eclipse.wb.internal.core.utils.check.AssertionFailedException: Execution flow problem. {
  frame=new JFrame();
  frame.setBounds(100,100,828,580);
  frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
  frame.getContentPane().setLayout(null);
  JPanel panel_3=new JPanel();
  panel_3.setBorder(new LineBorder(SystemColor.textHighlight));
  panel_3.setBackground(new Color(255,255,255));
  panel_3.setBounds(20,80,516,422);
  frame.getContentPane().add(panel_3);
  panel_3.setLayout(null);
  taskList=new JList<String>();
  taskList.addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      selectedListIndex=taskList.getSelectedIndex();
      setTaskDetailView();
    }
  }
);
  taskList.setBackground(UIManager.getColor("TabbedPane.selectedTabTitlePressedColor"));
  taskList.setBorder(new EtchedBorder(EtchedBorder.LOWERED,null,null));
  taskList.setToolTipText("");
  taskList.setSelectionForeground(new Color(255,255,255));
  taskList.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
  taskList.setSelectionBackground(new Color(255,165,0));
  taskList.setForeground(new Color(255,165,0));
  taskList.setFont(new Font("Open Sans",Font.PLAIN,17));
  taskList.setModel(new AbstractListModel<String>(){
    private static final long serialVersionUID=1L;
    String[] values=taskManager.getTaskNames();
    public int getSize(){
      return values.length;
    }
    public String getElementAt(    int index){
      return values[index];
    }
  }
);
  taskList.setFixedCellHeight(25);
  taskList.setBounds(11,44,496,368);
  scrollPane=new JScrollPane();
  scrollPane.setBounds(11,44,496,368);
  scrollPane.setViewportView(taskList);
  panel_3.add(scrollPane);
  filterDropdown=new JComboBox();
  filterDropdown.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      String filterString;
switch (filterDropdown.getSelectedIndex()) {
case 0:
        filterString="filter all";
      break;
case 1:
    filterString="filter incomplete";
  break;
case 2:
filterString="filter complete";
break;
case 3:
filterString="filter short";
break;
case 4:
filterString="filter medium";
break;
case 5:
filterString="filter long";
break;
case 6:
filterString="filter soon";
break;
default :
filterString="";
break;
}
try {
taskManager.executeCommand(filterString,window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
refreshWindow();
}
}
);
filterDropdown.setBackground(new Color(255,255,255));
filterDropdown.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
filterDropdown.setForeground(new Color(60,179,113));
filterDropdown.setModel(new DefaultComboBoxModel(new String[]{"Filter by...","Incomplete Tasks","Complete Tasks","Short Tasks (<1 hour)","Medium Tasks (1 - 3 hours)","Long Tasks (3+ hours)","Tasks Ending Soon"}));
filterDropdown.setFont(new Font("Open Sans",Font.PLAIN,15));
filterDropdown.setBounds(6,6,258,36);
panel_3.add(filterDropdown);
sortDropdown=new JComboBox();
sortDropdown.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
String sortString;
switch (sortDropdown.getSelectedIndex()) {
case 0:
sortString="sort default";
break;
case 1:
sortString="sort name";
break;
case 2:
sortString="sort date";
break;
case 3:
sortString="sort start";
break;
case 4:
sortString="sort end";
break;
case 5:
sortString="sort duration";
break;
default :
sortString="";
break;
}
try {
taskManager.executeCommand(sortString,window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
}
}
);
sortDropdown.setOpaque(true);
sortDropdown.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
sortDropdown.setModel(new DefaultComboBoxModel(new String[]{"Sort By...","Name","Date","Starting Time","Ending Time","Duration"}));
sortDropdown.setForeground(new Color(60,179,113));
sortDropdown.setFont(new Font("Open Sans",Font.PLAIN,15));
sortDropdown.setBackground(Color.WHITE);
sortDropdown.setBounds(261,6,249,36);
panel_3.add(sortDropdown);
historyList=new JList();
historyList.setEnabled(false);
historyList.setForeground(new Color(60,179,113));
historyList.setFont(new Font("Open Sans",Font.PLAIN,13));
historyList.setBounds(6,6,501,406);
historyList.setModel(new AbstractListModel(){
List<String> history=taskManager.getHistoryList();
public int getSize(){
return history.size();
}
public Object getElementAt(int index){
return history.get(index);
}
}
);
panel_3.add(historyList);
String[] columns=new String[]{"Task Name","Task Duration","Task Date and Time","Task Completion"};
List<Task> tasks=taskManager.getTasks();
Object[][] data=new Object[taskManager.getNumberOfTasks()][4];
for (int i=0; i < taskManager.getNumberOfTasks(); i++) {
for (int j=0; j < 4; j++) {
switch (j) {
case 0:
data[i][j]=tasks.get(i).getName();
break;
case 1:
if (tasks.get(i).getDuration() != 0) {
data[i][j]=tasks.get(i).getDuration();
}
 else {
data[i][j]="N/A";
}
break;
case 2:
if (tasks.get(i).getTimeStart() != null) {
data[i][j]=tasks.get(i).getTimeStart();
}
 else {
data[i][j]="N/A";
}
break;
default :
data[i][j]=tasks.get(i).getDoneStatus();
break;
}
}
}
table=new JTable(data,columns);
table.setBounds(0,0,492,0);
frame.getContentPane().add(table);
JPanel panel_1=new JPanel();
panel_1.setBackground(new Color(51,204,153));
panel_1.setBounds(0,0,828,64);
frame.getContentPane().add(panel_1);
panel_1.setLayout(null);
JLabel lblSnaptask=new JLabel("snaptask");
lblSnaptask.setFont(new Font("Open Sans",Font.PLAIN,48));
lblSnaptask.setForeground(new Color(255,255,255));
lblSnaptask.setBounds(16,0,216,58);
panel_1.add(lblSnaptask);
JPanel searchLine=new JPanel();
searchLine.setBackground(new Color(255,165,0));
searchLine.setBorder(null);
searchLine.setBounds(556,44,251,6);
searchLine.setEnabled(false);
panel_1.add(searchLine);
searchField=new JTextField();
searchField.addFocusListener(new FocusAdapter(){
@Override public void focusGained(FocusEvent e){
if (firstFocusSearchText) {
searchField.setText("");
firstFocusSearchText=false;
}
}
}
);
searchField.setFont(new Font("Open Sans",Font.PLAIN,15));
searchField.setForeground(new Color(169,169,169));
searchField.setToolTipText("Search for tasks!");
searchField.setText("Search for tasks!");
searchField.setBounds(552,15,258,36);
panel_1.add(searchField);
searchField.setColumns(10);
homeButton=new JButton("\n");
homeButton.setOpaque(true);
homeButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=0;
refreshButtons();
}
}
);
homeButton.setIcon(new ImageIcon("/Users/admin/Desktop/ListIcon.png"));
homeButton.setBorder(new EmptyBorder(0,0,0,0));
homeButton.setBackground(new Color(0,204,153));
homeButton.setBounds(237,0,66,64);
panel_1.add(homeButton);
historyButton=new JButton("\n");
historyButton.setOpaque(true);
historyButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=1;
refreshButtons();
}
}
);
historyButton.setIcon(new ImageIcon("/Users/admin/Desktop/HistoryIcon.png"));
historyButton.setBorder(new EmptyBorder(0,0,0,0));
historyButton.setBackground(new Color(0,204,153));
historyButton.setBounds(312,0,66,64);
panel_1.add(historyButton);
helpButton=new JButton("\n");
helpButton.setOpaque(true);
helpButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=2;
refreshButtons();
}
}
);
helpButton.setIcon(new ImageIcon("/Users/admin/Desktop/InfoImage.png"));
helpButton.setBorder(new EmptyBorder(0,0,0,0));
helpButton.setBackground(new Color(0,204,153));
helpButton.setBounds(391,0,66,64);
panel_1.add(helpButton);
JPanel panel=new JPanel();
panel.setBorder(new LineBorder(SystemColor.textHighlight));
panel.setBackground(new Color(255,255,255));
panel.setBounds(557,80,251,422);
frame.getContentPane().add(panel);
panel.setLayout(null);
warningBackground=new JPanel();
warningBackground.setEnabled(false);
warningBackground.setBorder(null);
warningBackground.setBackground(new Color(255,165,0));
warningBackground.setBounds(0,20,252,29);
panel.add(warningBackground);
warningBackground.setLayout(null);
txtLabelStatus=new JTextPane();
txtLabelStatus.setDisabledTextColor(SystemColor.text);
txtLabelStatus.setSelectionColor(SystemColor.activeCaption);
txtLabelStatus.setEnabled(false);
txtLabelStatus.setBounds(72,0,105,28);
txtLabelStatus.setFont(new Font("Open Sans",Font.PLAIN,20));
txtLabelStatus.setForeground(new Color(255,255,255));
txtLabelStatus.setBackground(new Color(255,165,0));
warningBackground.add(txtLabelStatus);
txtAreaDescription=new JTextPane();
txtAreaDescription.setFont(new Font("Open Sans",Font.PLAIN,14));
txtAreaDescription.setForeground(new Color(60,179,113));
txtAreaDescription.setBounds(10,232,208,159);
txtAreaDescription.setEnabled(false);
panel.add(txtAreaDescription);
txtAreaTaskDetails=new JTextArea();
txtAreaTaskDetails.setFont(new Font("Open Sans",Font.PLAIN,17));
txtAreaTaskDetails.setForeground(SystemColor.scrollbar);
txtAreaTaskDetails.setBounds(10,61,233,231);
txtAreaTaskDetails.setEnabled(false);
panel.add(txtAreaTaskDetails);
txtAreaHelp=new JTextPane();
txtAreaHelp.setForeground(new Color(102,205,170));
txtAreaHelp.setFont(new Font("Open Sans",Font.PLAIN,13));
txtAreaHelp.setBounds(30,100,499,372);
frame.getContentPane().add(txtAreaHelp);
txtAreaHelp.setText("add [NAME] || [DD/MM/YYYY] [HH:MM] [H:M]\nadd [NAME] || [DD/MM/YYYY] [HH:MM]\nadd [NAME] || [DD/MM/YYYY]\nadd [NAME]\ndelete [INDEX]\ndone [INDEX]\nedit [INDEX] name [STRING]\nedit [INDEX] duration [STRING]\nedit [INDEX] datetime [STRING]\nedit [INDEX] all [NAME] [DATE] [TIME] [DURATION]\nclear\ndisplay [INDEX]\nsearch name [STRING]\nsearch date [DD/MM/YYYY]\nundo\nhome\nhistory\nhelp\nsort [NAME/DATE/START/END/DURATION/DEFAULT]\nfilter [INCOMPLETE/COMPLETE/SHORT/MEDIUM/LONG/SOON/ALL]\n");
JPanel taskManageLine=new JPanel();
taskManageLine.setEnabled(false);
taskManageLine.setBorder(null);
taskManageLine.setBackground(new Color(255,165,0));
taskManageLine.setBounds(21,540,786,6);
taskManageLine.setEnabled(false);
frame.getContentPane().add(taskManageLine);
textFieldTaskManage=new JTextField();
textFieldTaskManage.addFocusListener(new FocusAdapter(){
@Override public void focusGained(FocusEvent e){
if (firstFocusManageText) {
textFieldTaskManage.setText("");
firstFocusManageText=false;
}
}
}
);
textFieldTaskManage.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
try {
taskManager.executeCommand(textFieldTaskManage.getText(),window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
refreshWindow();
textFieldTaskManage.setText("");
}
}
);
textFieldTaskManage.setDisabledTextColor(new Color(128,128,128));
textFieldTaskManage.setForeground(new Color(169,169,169));
textFieldTaskManage.setFont(new Font("Open Sans",Font.PLAIN,15));
textFieldTaskManage.setToolTipText("Manage your tasks here!");
textFieldTaskManage.setColumns(10);
textFieldTaskManage.setBounds(18,510,792,36);
textFieldTaskManage.setText("Manage your tasks here!");
frame.getContentPane().add(textFieldTaskManage);
refreshButtons();
}
 expected, but {
  initialize();
}
 found.
	at org.eclipse.wb.internal.core.utils.check.Assert.fail(Assert.java:225)
	at org.eclipse.wb.internal.core.utils.check.Assert.isTrue(Assert.java:291)
	at org.eclipse.wb.core.eval.ExecutionFlowDescription.leaveStatement(ExecutionFlowDescription.java:152)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:317)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.access$1(ExecutionFlowUtils.java:235)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:442)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:391)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$28c57345.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:241)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2759)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:145)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:421)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:389)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$28c57345.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:316)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2759)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:263)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2782)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:267)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2782)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:137)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2759)
	at org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:250)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2782)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:137)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2759)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:635)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2782)
	at org.eclipse.jdt.core.dom.AnonymousClassDeclaration.accept0(AnonymousClassDeclaration.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2759)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:314)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2782)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:239)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2759)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:145)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.core.model.JavaInfo.refresh_create(JavaInfo.java:1199)
	at org.eclipse.wb.core.model.ObjectInfo.refreshCreate0(ObjectInfo.java:550)
	at org.eclipse.wb.core.model.ObjectInfo.access$0(ObjectInfo.java:546)
	at org.eclipse.wb.core.model.ObjectInfo$5$1.run(ObjectInfo.java:486)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:145)
	at org.eclipse.wb.core.model.ObjectInfo$5.run(ObjectInfo.java:484)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$2.run(SwingUtils.java:76)
	at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:312)
	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:745)
	at java.awt.EventQueue.access$300(EventQueue.java:103)
	at java.awt.EventQueue$3.run(EventQueue.java:706)
	at java.awt.EventQueue$3.run(EventQueue.java:704)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.awt.EventQueue.dispatchEvent(EventQueue.java:715)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:242)
	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:161)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:150)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:146)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:138)
	at java.awt.EventDispatchThread.run(EventDispatchThread.java:91)

!ENTRY org.eclipse.ui 4 0 2016-04-08 20:14:10.564
!MESSAGE Unhandled event loop exception
!STACK 0
org.eclipse.core.runtime.AssertionFailedException: null argument:
	at org.eclipse.core.runtime.Assert.isNotNull(Assert.java:85)
	at org.eclipse.core.runtime.Assert.isNotNull(Assert.java:73)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.setSelection(AbstractEditPartViewer.java:249)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.resetSelectionFromModels(TreeDropListener.java:141)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.drop(TreeDropListener.java:107)
	at org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:91)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1491)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1514)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1499)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1299)
	at org.eclipse.swt.dnd.DropTarget.drop(DropTarget.java:728)
	at org.eclipse.swt.dnd.DropTarget.outlineView_acceptDrop_item_childIndex(DropTarget.java:746)
	at org.eclipse.swt.dnd.DropTarget.dropTargetProc(DropTarget.java:471)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.dnd.DropTarget.dndCallSuper(DropTarget.java:210)
	at org.eclipse.swt.dnd.DropTarget.performDragOperation(DropTarget.java:739)
	at org.eclipse.swt.dnd.DropTarget.dropTargetProc(DropTarget.java:456)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:227)
	at org.eclipse.swt.widgets.Widget.mouseDownSuper(Widget.java:1121)
	at org.eclipse.swt.widgets.Tree.mouseDownSuper(Tree.java:2047)
	at org.eclipse.swt.widgets.Widget.mouseDown(Widget.java:1113)
	at org.eclipse.swt.widgets.Control.mouseDown(Control.java:2569)
	at org.eclipse.swt.widgets.Tree.mouseDown(Tree.java:2015)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5692)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:227)
	at org.eclipse.swt.widgets.Widget.windowSendEvent(Widget.java:2130)
	at org.eclipse.swt.widgets.Shell.windowSendEvent(Shell.java:2337)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5756)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Display.applicationSendEvent(Display.java:5193)
	at org.eclipse.swt.widgets.Display.applicationProc(Display.java:5342)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSApplication.sendEvent(NSApplication.java:128)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3695)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:1127)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1018)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:156)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:654)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:598)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:139)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:380)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:235)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:669)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:608)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1515)

!ENTRY org.eclipse.wb.core 4 4 2016-04-08 20:14:21.362
!MESSAGE Designer [1.8.0.r45x201506110820.201604082003]: Execution flow problem. {
  EventQueue.invokeLater(new Runnable(){
    public void run(){
      try {
        taskManager=TaskManager.getInstance();
        ApplicationWindow window=new ApplicationWindow();
        window.frame.setVisible(true);
        window.frame.setResizable(false);
      }
 catch (      Exception e) {
        e.printStackTrace();
      }
    }
  }
);
}
 expected, but {
  frame=new JFrame();
  frame.setBounds(100,100,828,580);
  frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
  frame.getContentPane().setLayout(null);
  JPanel panel_3=new JPanel();
  panel_3.setBorder(new LineBorder(SystemColor.textHighlight));
  panel_3.setBackground(new Color(255,255,255));
  panel_3.setBounds(20,80,516,422);
  frame.getContentPane().add(panel_3);
  panel_3.setLayout(null);
  taskList=new JList<String>();
  taskList.addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      selectedListIndex=taskList.getSelectedIndex();
      setTaskDetailView();
    }
  }
);
  taskList.setBackground(UIManager.getColor("TabbedPane.selectedTabTitlePressedColor"));
  taskList.setBorder(new EtchedBorder(EtchedBorder.LOWERED,null,null));
  taskList.setToolTipText("");
  taskList.setSelectionForeground(new Color(255,255,255));
  taskList.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
  taskList.setSelectionBackground(new Color(255,165,0));
  taskList.setForeground(new Color(255,165,0));
  taskList.setFont(new Font("Open Sans",Font.PLAIN,17));
  taskList.setModel(new AbstractListModel<String>(){
    private static final long serialVersionUID=1L;
    String[] values=taskManager.getTaskNames();
    public int getSize(){
      return values.length;
    }
    public String getElementAt(    int index){
      return values[index];
    }
  }
);
  taskList.setFixedCellHeight(25);
  taskList.setBounds(11,44,496,368);
  scrollPane=new JScrollPane();
  scrollPane.setBounds(11,44,496,368);
  scrollPane.setViewportView(taskList);
  panel_3.add(scrollPane);
  filterDropdown=new JComboBox();
  filterDropdown.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      String filterString;
switch (filterDropdown.getSelectedIndex()) {
case 0:
        filterString="filter all";
      break;
case 1:
    filterString="filter incomplete";
  break;
case 2:
filterString="filter complete";
break;
case 3:
filterString="filter short";
break;
case 4:
filterString="filter medium";
break;
case 5:
filterString="filter long";
break;
case 6:
filterString="filter soon";
break;
default :
filterString="";
break;
}
try {
taskManager.executeCommand(filterString,window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
refreshWindow();
}
}
);
filterDropdown.setBackground(new Color(255,255,255));
filterDropdown.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
filterDropdown.setForeground(new Color(60,179,113));
filterDropdown.setModel(new DefaultComboBoxModel(new String[]{"Filter by...","Incomplete Tasks","Complete Tasks","Short Tasks (<1 hour)","Medium Tasks (1 - 3 hours)","Long Tasks (3+ hours)","Tasks Ending Soon"}));
filterDropdown.setFont(new Font("Open Sans",Font.PLAIN,15));
filterDropdown.setBounds(6,6,258,36);
panel_3.add(filterDropdown);
sortDropdown=new JComboBox();
sortDropdown.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
String sortString;
switch (sortDropdown.getSelectedIndex()) {
case 0:
sortString="sort default";
break;
case 1:
sortString="sort name";
break;
case 2:
sortString="sort date";
break;
case 3:
sortString="sort start";
break;
case 4:
sortString="sort end";
break;
case 5:
sortString="sort duration";
break;
default :
sortString="";
break;
}
try {
taskManager.executeCommand(sortString,window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
}
}
);
sortDropdown.setOpaque(true);
sortDropdown.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
sortDropdown.setModel(new DefaultComboBoxModel(new String[]{"Sort By...","Name","Date","Starting Time","Ending Time","Duration"}));
sortDropdown.setForeground(new Color(60,179,113));
sortDropdown.setFont(new Font("Open Sans",Font.PLAIN,15));
sortDropdown.setBackground(Color.WHITE);
sortDropdown.setBounds(261,6,249,36);
panel_3.add(sortDropdown);
historyList=new JList();
historyList.setEnabled(false);
historyList.setForeground(new Color(60,179,113));
historyList.setFont(new Font("Open Sans",Font.PLAIN,13));
historyList.setBounds(6,6,501,406);
historyList.setModel(new AbstractListModel(){
List<String> history=taskManager.getHistoryList();
public int getSize(){
return history.size();
}
public Object getElementAt(int index){
return history.get(index);
}
}
);
panel_3.add(historyList);
table=new JTable(data,columns);
table.setBounds(0,0,492,0);
panel_3.add(table);
String[] columns=new String[]{"Task Name","Task Duration","Task Date and Time","Task Completion"};
List<Task> tasks=taskManager.getTasks();
Object[][] data=new Object[taskManager.getNumberOfTasks()][4];
for (int i=0; i < taskManager.getNumberOfTasks(); i++) {
for (int j=0; j < 4; j++) {
switch (j) {
case 0:
data[i][j]=tasks.get(i).getName();
break;
case 1:
if (tasks.get(i).getDuration() != 0) {
data[i][j]=tasks.get(i).getDuration();
}
 else {
data[i][j]="N/A";
}
break;
case 2:
if (tasks.get(i).getTimeStart() != null) {
data[i][j]=tasks.get(i).getTimeStart();
}
 else {
data[i][j]="N/A";
}
break;
default :
data[i][j]=tasks.get(i).getDoneStatus();
break;
}
}
}
JPanel panel_1=new JPanel();
panel_1.setBackground(new Color(51,204,153));
panel_1.setBounds(0,0,828,64);
frame.getContentPane().add(panel_1);
panel_1.setLayout(null);
JLabel lblSnaptask=new JLabel("snaptask");
lblSnaptask.setFont(new Font("Open Sans",Font.PLAIN,48));
lblSnaptask.setForeground(new Color(255,255,255));
lblSnaptask.setBounds(16,0,216,58);
panel_1.add(lblSnaptask);
JPanel searchLine=new JPanel();
searchLine.setBackground(new Color(255,165,0));
searchLine.setBorder(null);
searchLine.setBounds(556,44,251,6);
searchLine.setEnabled(false);
panel_1.add(searchLine);
searchField=new JTextField();
searchField.addFocusListener(new FocusAdapter(){
@Override public void focusGained(FocusEvent e){
if (firstFocusSearchText) {
searchField.setText("");
firstFocusSearchText=false;
}
}
}
);
searchField.setFont(new Font("Open Sans",Font.PLAIN,15));
searchField.setForeground(new Color(169,169,169));
searchField.setToolTipText("Search for tasks!");
searchField.setText("Search for tasks!");
searchField.setBounds(552,15,258,36);
panel_1.add(searchField);
searchField.setColumns(10);
homeButton=new JButton("\n");
homeButton.setOpaque(true);
homeButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=0;
refreshButtons();
}
}
);
homeButton.setIcon(new ImageIcon("/Users/admin/Desktop/ListIcon.png"));
homeButton.setBorder(new EmptyBorder(0,0,0,0));
homeButton.setBackground(new Color(0,204,153));
homeButton.setBounds(237,0,66,64);
panel_1.add(homeButton);
historyButton=new JButton("\n");
historyButton.setOpaque(true);
historyButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=1;
refreshButtons();
}
}
);
historyButton.setIcon(new ImageIcon("/Users/admin/Desktop/HistoryIcon.png"));
historyButton.setBorder(new EmptyBorder(0,0,0,0));
historyButton.setBackground(new Color(0,204,153));
historyButton.setBounds(312,0,66,64);
panel_1.add(historyButton);
helpButton=new JButton("\n");
helpButton.setOpaque(true);
helpButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=2;
refreshButtons();
}
}
);
helpButton.setIcon(new ImageIcon("/Users/admin/Desktop/InfoImage.png"));
helpButton.setBorder(new EmptyBorder(0,0,0,0));
helpButton.setBackground(new Color(0,204,153));
helpButton.setBounds(391,0,66,64);
panel_1.add(helpButton);
JPanel panel=new JPanel();
panel.setBorder(new LineBorder(SystemColor.textHighlight));
panel.setBackground(new Color(255,255,255));
panel.setBounds(557,80,251,422);
frame.getContentPane().add(panel);
panel.setLayout(null);
warningBackground=new JPanel();
warningBackground.setEnabled(false);
warningBackground.setBorder(null);
warningBackground.setBackground(new Color(255,165,0));
warningBackground.setBounds(0,20,252,29);
panel.add(warningBackground);
warningBackground.setLayout(null);
txtLabelStatus=new JTextPane();
txtLabelStatus.setDisabledTextColor(SystemColor.text);
txtLabelStatus.setSelectionColor(SystemColor.activeCaption);
txtLabelStatus.setEnabled(false);
txtLabelStatus.setBounds(72,0,105,28);
txtLabelStatus.setFont(new Font("Open Sans",Font.PLAIN,20));
txtLabelStatus.setForeground(new Color(255,255,255));
txtLabelStatus.setBackground(new Color(255,165,0));
warningBackground.add(txtLabelStatus);
txtAreaDescription=new JTextPane();
txtAreaDescription.setFont(new Font("Open Sans",Font.PLAIN,14));
txtAreaDescription.setForeground(new Color(60,179,113));
txtAreaDescription.setBounds(10,232,208,159);
txtAreaDescription.setEnabled(false);
panel.add(txtAreaDescription);
txtAreaTaskDetails=new JTextArea();
txtAreaTaskDetails.setFont(new Font("Open Sans",Font.PLAIN,17));
txtAreaTaskDetails.setForeground(SystemColor.scrollbar);
txtAreaTaskDetails.setBounds(10,61,233,231);
txtAreaTaskDetails.setEnabled(false);
panel.add(txtAreaTaskDetails);
txtAreaHelp=new JTextPane();
txtAreaHelp.setForeground(new Color(102,205,170));
txtAreaHelp.setFont(new Font("Open Sans",Font.PLAIN,13));
txtAreaHelp.setBounds(30,100,499,372);
frame.getContentPane().add(txtAreaHelp);
txtAreaHelp.setText("add [NAME] || [DD/MM/YYYY] [HH:MM] [H:M]\nadd [NAME] || [DD/MM/YYYY] [HH:MM]\nadd [NAME] || [DD/MM/YYYY]\nadd [NAME]\ndelete [INDEX]\ndone [INDEX]\nedit [INDEX] name [STRING]\nedit [INDEX] duration [STRING]\nedit [INDEX] datetime [STRING]\nedit [INDEX] all [NAME] [DATE] [TIME] [DURATION]\nclear\ndisplay [INDEX]\nsearch name [STRING]\nsearch date [DD/MM/YYYY]\nundo\nhome\nhistory\nhelp\nsort [NAME/DATE/START/END/DURATION/DEFAULT]\nfilter [INCOMPLETE/COMPLETE/SHORT/MEDIUM/LONG/SOON/ALL]\n");
JPanel taskManageLine=new JPanel();
taskManageLine.setEnabled(false);
taskManageLine.setBorder(null);
taskManageLine.setBackground(new Color(255,165,0));
taskManageLine.setBounds(21,540,786,6);
taskManageLine.setEnabled(false);
frame.getContentPane().add(taskManageLine);
textFieldTaskManage=new JTextField();
textFieldTaskManage.addFocusListener(new FocusAdapter(){
@Override public void focusGained(FocusEvent e){
if (firstFocusManageText) {
textFieldTaskManage.setText("");
firstFocusManageText=false;
}
}
}
);
textFieldTaskManage.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
try {
taskManager.executeCommand(textFieldTaskManage.getText(),window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
refreshWindow();
textFieldTaskManage.setText("");
}
}
);
textFieldTaskManage.setDisabledTextColor(new Color(128,128,128));
textFieldTaskManage.setForeground(new Color(169,169,169));
textFieldTaskManage.setFont(new Font("Open Sans",Font.PLAIN,15));
textFieldTaskManage.setToolTipText("Manage your tasks here!");
textFieldTaskManage.setColumns(10);
textFieldTaskManage.setBounds(18,510,792,36);
textFieldTaskManage.setText("Manage your tasks here!");
frame.getContentPane().add(textFieldTaskManage);
refreshButtons();
}
 found.
!STACK 0
org.eclipse.wb.internal.core.utils.check.AssertionFailedException: Execution flow problem. {
  EventQueue.invokeLater(new Runnable(){
    public void run(){
      try {
        taskManager=TaskManager.getInstance();
        ApplicationWindow window=new ApplicationWindow();
        window.frame.setVisible(true);
        window.frame.setResizable(false);
      }
 catch (      Exception e) {
        e.printStackTrace();
      }
    }
  }
);
}
 expected, but {
  frame=new JFrame();
  frame.setBounds(100,100,828,580);
  frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
  frame.getContentPane().setLayout(null);
  JPanel panel_3=new JPanel();
  panel_3.setBorder(new LineBorder(SystemColor.textHighlight));
  panel_3.setBackground(new Color(255,255,255));
  panel_3.setBounds(20,80,516,422);
  frame.getContentPane().add(panel_3);
  panel_3.setLayout(null);
  taskList=new JList<String>();
  taskList.addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      selectedListIndex=taskList.getSelectedIndex();
      setTaskDetailView();
    }
  }
);
  taskList.setBackground(UIManager.getColor("TabbedPane.selectedTabTitlePressedColor"));
  taskList.setBorder(new EtchedBorder(EtchedBorder.LOWERED,null,null));
  taskList.setToolTipText("");
  taskList.setSelectionForeground(new Color(255,255,255));
  taskList.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
  taskList.setSelectionBackground(new Color(255,165,0));
  taskList.setForeground(new Color(255,165,0));
  taskList.setFont(new Font("Open Sans",Font.PLAIN,17));
  taskList.setModel(new AbstractListModel<String>(){
    private static final long serialVersionUID=1L;
    String[] values=taskManager.getTaskNames();
    public int getSize(){
      return values.length;
    }
    public String getElementAt(    int index){
      return values[index];
    }
  }
);
  taskList.setFixedCellHeight(25);
  taskList.setBounds(11,44,496,368);
  scrollPane=new JScrollPane();
  scrollPane.setBounds(11,44,496,368);
  scrollPane.setViewportView(taskList);
  panel_3.add(scrollPane);
  filterDropdown=new JComboBox();
  filterDropdown.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      String filterString;
switch (filterDropdown.getSelectedIndex()) {
case 0:
        filterString="filter all";
      break;
case 1:
    filterString="filter incomplete";
  break;
case 2:
filterString="filter complete";
break;
case 3:
filterString="filter short";
break;
case 4:
filterString="filter medium";
break;
case 5:
filterString="filter long";
break;
case 6:
filterString="filter soon";
break;
default :
filterString="";
break;
}
try {
taskManager.executeCommand(filterString,window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
refreshWindow();
}
}
);
filterDropdown.setBackground(new Color(255,255,255));
filterDropdown.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
filterDropdown.setForeground(new Color(60,179,113));
filterDropdown.setModel(new DefaultComboBoxModel(new String[]{"Filter by...","Incomplete Tasks","Complete Tasks","Short Tasks (<1 hour)","Medium Tasks (1 - 3 hours)","Long Tasks (3+ hours)","Tasks Ending Soon"}));
filterDropdown.setFont(new Font("Open Sans",Font.PLAIN,15));
filterDropdown.setBounds(6,6,258,36);
panel_3.add(filterDropdown);
sortDropdown=new JComboBox();
sortDropdown.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
String sortString;
switch (sortDropdown.getSelectedIndex()) {
case 0:
sortString="sort default";
break;
case 1:
sortString="sort name";
break;
case 2:
sortString="sort date";
break;
case 3:
sortString="sort start";
break;
case 4:
sortString="sort end";
break;
case 5:
sortString="sort duration";
break;
default :
sortString="";
break;
}
try {
taskManager.executeCommand(sortString,window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
}
}
);
sortDropdown.setOpaque(true);
sortDropdown.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
sortDropdown.setModel(new DefaultComboBoxModel(new String[]{"Sort By...","Name","Date","Starting Time","Ending Time","Duration"}));
sortDropdown.setForeground(new Color(60,179,113));
sortDropdown.setFont(new Font("Open Sans",Font.PLAIN,15));
sortDropdown.setBackground(Color.WHITE);
sortDropdown.setBounds(261,6,249,36);
panel_3.add(sortDropdown);
historyList=new JList();
historyList.setEnabled(false);
historyList.setForeground(new Color(60,179,113));
historyList.setFont(new Font("Open Sans",Font.PLAIN,13));
historyList.setBounds(6,6,501,406);
historyList.setModel(new AbstractListModel(){
List<String> history=taskManager.getHistoryList();
public int getSize(){
return history.size();
}
public Object getElementAt(int index){
return history.get(index);
}
}
);
panel_3.add(historyList);
table=new JTable(data,columns);
table.setBounds(0,0,492,0);
panel_3.add(table);
String[] columns=new String[]{"Task Name","Task Duration","Task Date and Time","Task Completion"};
List<Task> tasks=taskManager.getTasks();
Object[][] data=new Object[taskManager.getNumberOfTasks()][4];
for (int i=0; i < taskManager.getNumberOfTasks(); i++) {
for (int j=0; j < 4; j++) {
switch (j) {
case 0:
data[i][j]=tasks.get(i).getName();
break;
case 1:
if (tasks.get(i).getDuration() != 0) {
data[i][j]=tasks.get(i).getDuration();
}
 else {
data[i][j]="N/A";
}
break;
case 2:
if (tasks.get(i).getTimeStart() != null) {
data[i][j]=tasks.get(i).getTimeStart();
}
 else {
data[i][j]="N/A";
}
break;
default :
data[i][j]=tasks.get(i).getDoneStatus();
break;
}
}
}
JPanel panel_1=new JPanel();
panel_1.setBackground(new Color(51,204,153));
panel_1.setBounds(0,0,828,64);
frame.getContentPane().add(panel_1);
panel_1.setLayout(null);
JLabel lblSnaptask=new JLabel("snaptask");
lblSnaptask.setFont(new Font("Open Sans",Font.PLAIN,48));
lblSnaptask.setForeground(new Color(255,255,255));
lblSnaptask.setBounds(16,0,216,58);
panel_1.add(lblSnaptask);
JPanel searchLine=new JPanel();
searchLine.setBackground(new Color(255,165,0));
searchLine.setBorder(null);
searchLine.setBounds(556,44,251,6);
searchLine.setEnabled(false);
panel_1.add(searchLine);
searchField=new JTextField();
searchField.addFocusListener(new FocusAdapter(){
@Override public void focusGained(FocusEvent e){
if (firstFocusSearchText) {
searchField.setText("");
firstFocusSearchText=false;
}
}
}
);
searchField.setFont(new Font("Open Sans",Font.PLAIN,15));
searchField.setForeground(new Color(169,169,169));
searchField.setToolTipText("Search for tasks!");
searchField.setText("Search for tasks!");
searchField.setBounds(552,15,258,36);
panel_1.add(searchField);
searchField.setColumns(10);
homeButton=new JButton("\n");
homeButton.setOpaque(true);
homeButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=0;
refreshButtons();
}
}
);
homeButton.setIcon(new ImageIcon("/Users/admin/Desktop/ListIcon.png"));
homeButton.setBorder(new EmptyBorder(0,0,0,0));
homeButton.setBackground(new Color(0,204,153));
homeButton.setBounds(237,0,66,64);
panel_1.add(homeButton);
historyButton=new JButton("\n");
historyButton.setOpaque(true);
historyButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=1;
refreshButtons();
}
}
);
historyButton.setIcon(new ImageIcon("/Users/admin/Desktop/HistoryIcon.png"));
historyButton.setBorder(new EmptyBorder(0,0,0,0));
historyButton.setBackground(new Color(0,204,153));
historyButton.setBounds(312,0,66,64);
panel_1.add(historyButton);
helpButton=new JButton("\n");
helpButton.setOpaque(true);
helpButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=2;
refreshButtons();
}
}
);
helpButton.setIcon(new ImageIcon("/Users/admin/Desktop/InfoImage.png"));
helpButton.setBorder(new EmptyBorder(0,0,0,0));
helpButton.setBackground(new Color(0,204,153));
helpButton.setBounds(391,0,66,64);
panel_1.add(helpButton);
JPanel panel=new JPanel();
panel.setBorder(new LineBorder(SystemColor.textHighlight));
panel.setBackground(new Color(255,255,255));
panel.setBounds(557,80,251,422);
frame.getContentPane().add(panel);
panel.setLayout(null);
warningBackground=new JPanel();
warningBackground.setEnabled(false);
warningBackground.setBorder(null);
warningBackground.setBackground(new Color(255,165,0));
warningBackground.setBounds(0,20,252,29);
panel.add(warningBackground);
warningBackground.setLayout(null);
txtLabelStatus=new JTextPane();
txtLabelStatus.setDisabledTextColor(SystemColor.text);
txtLabelStatus.setSelectionColor(SystemColor.activeCaption);
txtLabelStatus.setEnabled(false);
txtLabelStatus.setBounds(72,0,105,28);
txtLabelStatus.setFont(new Font("Open Sans",Font.PLAIN,20));
txtLabelStatus.setForeground(new Color(255,255,255));
txtLabelStatus.setBackground(new Color(255,165,0));
warningBackground.add(txtLabelStatus);
txtAreaDescription=new JTextPane();
txtAreaDescription.setFont(new Font("Open Sans",Font.PLAIN,14));
txtAreaDescription.setForeground(new Color(60,179,113));
txtAreaDescription.setBounds(10,232,208,159);
txtAreaDescription.setEnabled(false);
panel.add(txtAreaDescription);
txtAreaTaskDetails=new JTextArea();
txtAreaTaskDetails.setFont(new Font("Open Sans",Font.PLAIN,17));
txtAreaTaskDetails.setForeground(SystemColor.scrollbar);
txtAreaTaskDetails.setBounds(10,61,233,231);
txtAreaTaskDetails.setEnabled(false);
panel.add(txtAreaTaskDetails);
txtAreaHelp=new JTextPane();
txtAreaHelp.setForeground(new Color(102,205,170));
txtAreaHelp.setFont(new Font("Open Sans",Font.PLAIN,13));
txtAreaHelp.setBounds(30,100,499,372);
frame.getContentPane().add(txtAreaHelp);
txtAreaHelp.setText("add [NAME] || [DD/MM/YYYY] [HH:MM] [H:M]\nadd [NAME] || [DD/MM/YYYY] [HH:MM]\nadd [NAME] || [DD/MM/YYYY]\nadd [NAME]\ndelete [INDEX]\ndone [INDEX]\nedit [INDEX] name [STRING]\nedit [INDEX] duration [STRING]\nedit [INDEX] datetime [STRING]\nedit [INDEX] all [NAME] [DATE] [TIME] [DURATION]\nclear\ndisplay [INDEX]\nsearch name [STRING]\nsearch date [DD/MM/YYYY]\nundo\nhome\nhistory\nhelp\nsort [NAME/DATE/START/END/DURATION/DEFAULT]\nfilter [INCOMPLETE/COMPLETE/SHORT/MEDIUM/LONG/SOON/ALL]\n");
JPanel taskManageLine=new JPanel();
taskManageLine.setEnabled(false);
taskManageLine.setBorder(null);
taskManageLine.setBackground(new Color(255,165,0));
taskManageLine.setBounds(21,540,786,6);
taskManageLine.setEnabled(false);
frame.getContentPane().add(taskManageLine);
textFieldTaskManage=new JTextField();
textFieldTaskManage.addFocusListener(new FocusAdapter(){
@Override public void focusGained(FocusEvent e){
if (firstFocusManageText) {
textFieldTaskManage.setText("");
firstFocusManageText=false;
}
}
}
);
textFieldTaskManage.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
try {
taskManager.executeCommand(textFieldTaskManage.getText(),window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
refreshWindow();
textFieldTaskManage.setText("");
}
}
);
textFieldTaskManage.setDisabledTextColor(new Color(128,128,128));
textFieldTaskManage.setForeground(new Color(169,169,169));
textFieldTaskManage.setFont(new Font("Open Sans",Font.PLAIN,15));
textFieldTaskManage.setToolTipText("Manage your tasks here!");
textFieldTaskManage.setColumns(10);
textFieldTaskManage.setBounds(18,510,792,36);
textFieldTaskManage.setText("Manage your tasks here!");
frame.getContentPane().add(textFieldTaskManage);
refreshButtons();
}
 found.
	at org.eclipse.wb.internal.core.utils.check.Assert.fail(Assert.java:225)
	at org.eclipse.wb.internal.core.utils.check.Assert.isTrue(Assert.java:291)
	at org.eclipse.wb.core.eval.ExecutionFlowDescription.leaveStatement(ExecutionFlowDescription.java:152)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:317)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.prepareAssignmentInformation(ExecutionFlowUtils.java:784)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.getVariableCachedValue(ExecutionFlowUtils.java:753)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.getVariableCachedList_notNull(ExecutionFlowUtils.java:707)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.getReferences(ExecutionFlowUtils.java:669)
	at org.eclipse.wb.internal.core.model.variable.AbstractNamedVariableSupport.getReferences(AbstractNamedVariableSupport.java:184)
	at org.eclipse.wb.internal.core.model.variable.FieldUniqueVariableSupport.canConvertFieldToLocal(FieldUniqueVariableSupport.java:97)
	at org.eclipse.wb.internal.core.editor.structure.property.JavaPropertiesToolBarContributor.addVariableConvertAction(JavaPropertiesToolBarContributor.java:101)
	at org.eclipse.wb.internal.core.editor.structure.property.JavaPropertiesToolBarContributor.contributeToolBar(JavaPropertiesToolBarContributor.java:54)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage$2$1.run(ComponentsPropertiesPage.java:186)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runLog(ExecutionUtils.java:106)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage$2.run(ComponentsPropertiesPage.java:184)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runLog(ExecutionUtils.java:106)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage.updateActions(ComponentsPropertiesPage.java:160)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage.access$22(ComponentsPropertiesPage.java:159)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage$12.run(ComponentsPropertiesPage.java:538)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runLog(ExecutionUtils.java:106)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage.refreshProperties(ComponentsPropertiesPage.java:530)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage.setSelection(ComponentsPropertiesPage.java:321)
	at org.eclipse.wb.internal.core.editor.structure.DesignComponentsComposite$1.selectionChanged(DesignComponentsComposite.java:72)
	at org.eclipse.wb.internal.core.utils.gef.EditPartsSelectionProvider.fireSelectionChanged(EditPartsSelectionProvider.java:111)
	at org.eclipse.wb.internal.core.utils.gef.EditPartsSelectionProvider.access$0(EditPartsSelectionProvider.java:102)
	at org.eclipse.wb.internal.core.utils.gef.EditPartsSelectionProvider$1.selectionChanged(EditPartsSelectionProvider.java:40)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.fireSelectionChanged(AbstractEditPartViewer.java:202)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.setSelection(AbstractEditPartViewer.java:262)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.setSelection(AbstractEditPartViewer.java:193)
	at org.eclipse.wb.internal.gef.tree.TreeViewer$1.widgetSelected(TreeViewer.java:180)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:248)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1491)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1514)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1499)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1299)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4072)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3698)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.waitEventLoop(ExecutionUtils.java:71)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:168)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runLaterAndWait(SwingUtils.java:73)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.execRefreshOperation(ComponentInfo.java:119)
	at org.eclipse.wb.core.model.ObjectInfo.refresh(ObjectInfo.java:482)
	at org.eclipse.wb.core.model.ObjectInfo.endEdit(ObjectInfo.java:446)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:325)
	at org.eclipse.wb.core.gef.command.EditCommand.execute(EditCommand.java:50)
	at org.eclipse.wb.internal.gef.core.EditDomain.executeCommand(EditDomain.java:59)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.executeCommand(TreeDropListener.java:265)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.drop(TreeDropListener.java:103)
	at org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:91)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1491)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1514)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1499)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1299)
	at org.eclipse.swt.dnd.DropTarget.drop(DropTarget.java:728)
	at org.eclipse.swt.dnd.DropTarget.outlineView_acceptDrop_item_childIndex(DropTarget.java:746)
	at org.eclipse.swt.dnd.DropTarget.dropTargetProc(DropTarget.java:471)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.dnd.DropTarget.dndCallSuper(DropTarget.java:210)
	at org.eclipse.swt.dnd.DropTarget.performDragOperation(DropTarget.java:739)
	at org.eclipse.swt.dnd.DropTarget.dropTargetProc(DropTarget.java:456)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:227)
	at org.eclipse.swt.widgets.Widget.mouseDownSuper(Widget.java:1121)
	at org.eclipse.swt.widgets.Tree.mouseDownSuper(Tree.java:2047)
	at org.eclipse.swt.widgets.Widget.mouseDown(Widget.java:1113)
	at org.eclipse.swt.widgets.Control.mouseDown(Control.java:2569)
	at org.eclipse.swt.widgets.Tree.mouseDown(Tree.java:2015)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5692)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:227)
	at org.eclipse.swt.widgets.Widget.windowSendEvent(Widget.java:2130)
	at org.eclipse.swt.widgets.Shell.windowSendEvent(Shell.java:2337)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5756)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Display.applicationSendEvent(Display.java:5193)
	at org.eclipse.swt.widgets.Display.applicationProc(Display.java:5342)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSApplication.sendEvent(NSApplication.java:128)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3695)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:1127)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1018)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:156)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:654)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:598)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:139)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:380)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:235)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:669)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:608)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1515)

!ENTRY org.eclipse.wb.core 4 4 2016-04-08 20:14:21.923
!MESSAGE Designer [1.8.0.r45x201506110820.201604082003]: Index: 0, Size: 0
!STACK 0
java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.ArrayList.rangeCheck(ArrayList.java:635)
	at java.util.ArrayList.get(ArrayList.java:411)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.updateTargetRequestAfter(TreeDropListener.java:176)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.dragOperationChanged(TreeDropListener.java:76)
	at org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:111)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1491)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1514)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1499)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1299)
	at org.eclipse.swt.dnd.DropTarget.draggingUpdated(DropTarget.java:319)
	at org.eclipse.swt.dnd.DropTarget.dropTargetProc(DropTarget.java:452)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Display.applicationNextEventMatchingMask(Display.java:5051)
	at org.eclipse.swt.widgets.Display.applicationProc(Display.java:5432)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSApplication.nextEventMatchingMask(NSApplication.java:94)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3692)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.waitEventLoop(ExecutionUtils.java:71)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:168)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runLaterAndWait(SwingUtils.java:73)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils.disposeWindow(SwingImageUtils.java:313)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_dispose(ComponentInfo.java:125)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.refresh_dispose(ContainerInfo.java:237)
	at org.eclipse.wb.internal.core.editor.DesignPage$5.run(DesignPage.java:348)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runLog(ExecutionUtils.java:106)
	at org.eclipse.wb.internal.core.editor.DesignPage.disposeAll(DesignPage.java:346)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleDesignException(DesignPage.java:641)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$8(DesignPage.java:632)
	at org.eclipse.wb.internal.core.editor.DesignPage$9.handleException(DesignPage.java:564)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:330)
	at org.eclipse.wb.core.gef.command.EditCommand.execute(EditCommand.java:50)
	at org.eclipse.wb.internal.gef.core.EditDomain.executeCommand(EditDomain.java:59)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.executeCommand(TreeDropListener.java:265)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.drop(TreeDropListener.java:103)
	at org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:91)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1491)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1514)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1499)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1299)
	at org.eclipse.swt.dnd.DropTarget.drop(DropTarget.java:728)
	at org.eclipse.swt.dnd.DropTarget.outlineView_acceptDrop_item_childIndex(DropTarget.java:746)
	at org.eclipse.swt.dnd.DropTarget.dropTargetProc(DropTarget.java:471)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.dnd.DropTarget.dndCallSuper(DropTarget.java:210)
	at org.eclipse.swt.dnd.DropTarget.performDragOperation(DropTarget.java:739)
	at org.eclipse.swt.dnd.DropTarget.dropTargetProc(DropTarget.java:456)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:227)
	at org.eclipse.swt.widgets.Widget.mouseDownSuper(Widget.java:1121)
	at org.eclipse.swt.widgets.Tree.mouseDownSuper(Tree.java:2047)
	at org.eclipse.swt.widgets.Widget.mouseDown(Widget.java:1113)
	at org.eclipse.swt.widgets.Control.mouseDown(Control.java:2569)
	at org.eclipse.swt.widgets.Tree.mouseDown(Tree.java:2015)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5692)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:227)
	at org.eclipse.swt.widgets.Widget.windowSendEvent(Widget.java:2130)
	at org.eclipse.swt.widgets.Shell.windowSendEvent(Shell.java:2337)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5756)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Display.applicationSendEvent(Display.java:5193)
	at org.eclipse.swt.widgets.Display.applicationProc(Display.java:5342)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSApplication.sendEvent(NSApplication.java:128)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3695)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:1127)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1018)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:156)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:654)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:598)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:139)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:380)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:235)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:669)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:608)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1515)

!ENTRY org.eclipse.wb.core 4 4 2016-04-08 20:14:21.936
!MESSAGE Designer [1.8.0.r45x201506110820.201604082003]: Execution flow problem. {
  frame=new JFrame();
  frame.setBounds(100,100,828,580);
  frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
  frame.getContentPane().setLayout(null);
  JPanel panel_3=new JPanel();
  panel_3.setBorder(new LineBorder(SystemColor.textHighlight));
  panel_3.setBackground(new Color(255,255,255));
  panel_3.setBounds(20,80,516,422);
  frame.getContentPane().add(panel_3);
  panel_3.setLayout(null);
  taskList=new JList<String>();
  taskList.addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      selectedListIndex=taskList.getSelectedIndex();
      setTaskDetailView();
    }
  }
);
  taskList.setBackground(UIManager.getColor("TabbedPane.selectedTabTitlePressedColor"));
  taskList.setBorder(new EtchedBorder(EtchedBorder.LOWERED,null,null));
  taskList.setToolTipText("");
  taskList.setSelectionForeground(new Color(255,255,255));
  taskList.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
  taskList.setSelectionBackground(new Color(255,165,0));
  taskList.setForeground(new Color(255,165,0));
  taskList.setFont(new Font("Open Sans",Font.PLAIN,17));
  taskList.setModel(new AbstractListModel<String>(){
    private static final long serialVersionUID=1L;
    String[] values=taskManager.getTaskNames();
    public int getSize(){
      return values.length;
    }
    public String getElementAt(    int index){
      return values[index];
    }
  }
);
  taskList.setFixedCellHeight(25);
  taskList.setBounds(11,44,496,368);
  scrollPane=new JScrollPane();
  scrollPane.setBounds(11,44,496,368);
  scrollPane.setViewportView(taskList);
  panel_3.add(scrollPane);
  filterDropdown=new JComboBox();
  filterDropdown.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      String filterString;
switch (filterDropdown.getSelectedIndex()) {
case 0:
        filterString="filter all";
      break;
case 1:
    filterString="filter incomplete";
  break;
case 2:
filterString="filter complete";
break;
case 3:
filterString="filter short";
break;
case 4:
filterString="filter medium";
break;
case 5:
filterString="filter long";
break;
case 6:
filterString="filter soon";
break;
default :
filterString="";
break;
}
try {
taskManager.executeCommand(filterString,window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
refreshWindow();
}
}
);
filterDropdown.setBackground(new Color(255,255,255));
filterDropdown.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
filterDropdown.setForeground(new Color(60,179,113));
filterDropdown.setModel(new DefaultComboBoxModel(new String[]{"Filter by...","Incomplete Tasks","Complete Tasks","Short Tasks (<1 hour)","Medium Tasks (1 - 3 hours)","Long Tasks (3+ hours)","Tasks Ending Soon"}));
filterDropdown.setFont(new Font("Open Sans",Font.PLAIN,15));
filterDropdown.setBounds(6,6,258,36);
panel_3.add(filterDropdown);
sortDropdown=new JComboBox();
sortDropdown.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
String sortString;
switch (sortDropdown.getSelectedIndex()) {
case 0:
sortString="sort default";
break;
case 1:
sortString="sort name";
break;
case 2:
sortString="sort date";
break;
case 3:
sortString="sort start";
break;
case 4:
sortString="sort end";
break;
case 5:
sortString="sort duration";
break;
default :
sortString="";
break;
}
try {
taskManager.executeCommand(sortString,window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
}
}
);
sortDropdown.setOpaque(true);
sortDropdown.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
sortDropdown.setModel(new DefaultComboBoxModel(new String[]{"Sort By...","Name","Date","Starting Time","Ending Time","Duration"}));
sortDropdown.setForeground(new Color(60,179,113));
sortDropdown.setFont(new Font("Open Sans",Font.PLAIN,15));
sortDropdown.setBackground(Color.WHITE);
sortDropdown.setBounds(261,6,249,36);
panel_3.add(sortDropdown);
historyList=new JList();
historyList.setEnabled(false);
historyList.setForeground(new Color(60,179,113));
historyList.setFont(new Font("Open Sans",Font.PLAIN,13));
historyList.setBounds(6,6,501,406);
historyList.setModel(new AbstractListModel(){
List<String> history=taskManager.getHistoryList();
public int getSize(){
return history.size();
}
public Object getElementAt(int index){
return history.get(index);
}
}
);
panel_3.add(historyList);
table=new JTable(data,columns);
table.setBounds(0,0,492,0);
panel_3.add(table);
String[] columns=new String[]{"Task Name","Task Duration","Task Date and Time","Task Completion"};
List<Task> tasks=taskManager.getTasks();
Object[][] data=new Object[taskManager.getNumberOfTasks()][4];
for (int i=0; i < taskManager.getNumberOfTasks(); i++) {
for (int j=0; j < 4; j++) {
switch (j) {
case 0:
data[i][j]=tasks.get(i).getName();
break;
case 1:
if (tasks.get(i).getDuration() != 0) {
data[i][j]=tasks.get(i).getDuration();
}
 else {
data[i][j]="N/A";
}
break;
case 2:
if (tasks.get(i).getTimeStart() != null) {
data[i][j]=tasks.get(i).getTimeStart();
}
 else {
data[i][j]="N/A";
}
break;
default :
data[i][j]=tasks.get(i).getDoneStatus();
break;
}
}
}
JPanel panel_1=new JPanel();
panel_1.setBackground(new Color(51,204,153));
panel_1.setBounds(0,0,828,64);
frame.getContentPane().add(panel_1);
panel_1.setLayout(null);
JLabel lblSnaptask=new JLabel("snaptask");
lblSnaptask.setFont(new Font("Open Sans",Font.PLAIN,48));
lblSnaptask.setForeground(new Color(255,255,255));
lblSnaptask.setBounds(16,0,216,58);
panel_1.add(lblSnaptask);
JPanel searchLine=new JPanel();
searchLine.setBackground(new Color(255,165,0));
searchLine.setBorder(null);
searchLine.setBounds(556,44,251,6);
searchLine.setEnabled(false);
panel_1.add(searchLine);
searchField=new JTextField();
searchField.addFocusListener(new FocusAdapter(){
@Override public void focusGained(FocusEvent e){
if (firstFocusSearchText) {
searchField.setText("");
firstFocusSearchText=false;
}
}
}
);
searchField.setFont(new Font("Open Sans",Font.PLAIN,15));
searchField.setForeground(new Color(169,169,169));
searchField.setToolTipText("Search for tasks!");
searchField.setText("Search for tasks!");
searchField.setBounds(552,15,258,36);
panel_1.add(searchField);
searchField.setColumns(10);
homeButton=new JButton("\n");
homeButton.setOpaque(true);
homeButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=0;
refreshButtons();
}
}
);
homeButton.setIcon(new ImageIcon("/Users/admin/Desktop/ListIcon.png"));
homeButton.setBorder(new EmptyBorder(0,0,0,0));
homeButton.setBackground(new Color(0,204,153));
homeButton.setBounds(237,0,66,64);
panel_1.add(homeButton);
historyButton=new JButton("\n");
historyButton.setOpaque(true);
historyButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=1;
refreshButtons();
}
}
);
historyButton.setIcon(new ImageIcon("/Users/admin/Desktop/HistoryIcon.png"));
historyButton.setBorder(new EmptyBorder(0,0,0,0));
historyButton.setBackground(new Color(0,204,153));
historyButton.setBounds(312,0,66,64);
panel_1.add(historyButton);
helpButton=new JButton("\n");
helpButton.setOpaque(true);
helpButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=2;
refreshButtons();
}
}
);
helpButton.setIcon(new ImageIcon("/Users/admin/Desktop/InfoImage.png"));
helpButton.setBorder(new EmptyBorder(0,0,0,0));
helpButton.setBackground(new Color(0,204,153));
helpButton.setBounds(391,0,66,64);
panel_1.add(helpButton);
JPanel panel=new JPanel();
panel.setBorder(new LineBorder(SystemColor.textHighlight));
panel.setBackground(new Color(255,255,255));
panel.setBounds(557,80,251,422);
frame.getContentPane().add(panel);
panel.setLayout(null);
warningBackground=new JPanel();
warningBackground.setEnabled(false);
warningBackground.setBorder(null);
warningBackground.setBackground(new Color(255,165,0));
warningBackground.setBounds(0,20,252,29);
panel.add(warningBackground);
warningBackground.setLayout(null);
txtLabelStatus=new JTextPane();
txtLabelStatus.setDisabledTextColor(SystemColor.text);
txtLabelStatus.setSelectionColor(SystemColor.activeCaption);
txtLabelStatus.setEnabled(false);
txtLabelStatus.setBounds(72,0,105,28);
txtLabelStatus.setFont(new Font("Open Sans",Font.PLAIN,20));
txtLabelStatus.setForeground(new Color(255,255,255));
txtLabelStatus.setBackground(new Color(255,165,0));
warningBackground.add(txtLabelStatus);
txtAreaDescription=new JTextPane();
txtAreaDescription.setFont(new Font("Open Sans",Font.PLAIN,14));
txtAreaDescription.setForeground(new Color(60,179,113));
txtAreaDescription.setBounds(10,232,208,159);
txtAreaDescription.setEnabled(false);
panel.add(txtAreaDescription);
txtAreaTaskDetails=new JTextArea();
txtAreaTaskDetails.setFont(new Font("Open Sans",Font.PLAIN,17));
txtAreaTaskDetails.setForeground(SystemColor.scrollbar);
txtAreaTaskDetails.setBounds(10,61,233,231);
txtAreaTaskDetails.setEnabled(false);
panel.add(txtAreaTaskDetails);
txtAreaHelp=new JTextPane();
txtAreaHelp.setForeground(new Color(102,205,170));
txtAreaHelp.setFont(new Font("Open Sans",Font.PLAIN,13));
txtAreaHelp.setBounds(30,100,499,372);
frame.getContentPane().add(txtAreaHelp);
txtAreaHelp.setText("add [NAME] || [DD/MM/YYYY] [HH:MM] [H:M]\nadd [NAME] || [DD/MM/YYYY] [HH:MM]\nadd [NAME] || [DD/MM/YYYY]\nadd [NAME]\ndelete [INDEX]\ndone [INDEX]\nedit [INDEX] name [STRING]\nedit [INDEX] duration [STRING]\nedit [INDEX] datetime [STRING]\nedit [INDEX] all [NAME] [DATE] [TIME] [DURATION]\nclear\ndisplay [INDEX]\nsearch name [STRING]\nsearch date [DD/MM/YYYY]\nundo\nhome\nhistory\nhelp\nsort [NAME/DATE/START/END/DURATION/DEFAULT]\nfilter [INCOMPLETE/COMPLETE/SHORT/MEDIUM/LONG/SOON/ALL]\n");
JPanel taskManageLine=new JPanel();
taskManageLine.setEnabled(false);
taskManageLine.setBorder(null);
taskManageLine.setBackground(new Color(255,165,0));
taskManageLine.setBounds(21,540,786,6);
taskManageLine.setEnabled(false);
frame.getContentPane().add(taskManageLine);
textFieldTaskManage=new JTextField();
textFieldTaskManage.addFocusListener(new FocusAdapter(){
@Override public void focusGained(FocusEvent e){
if (firstFocusManageText) {
textFieldTaskManage.setText("");
firstFocusManageText=false;
}
}
}
);
textFieldTaskManage.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
try {
taskManager.executeCommand(textFieldTaskManage.getText(),window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
refreshWindow();
textFieldTaskManage.setText("");
}
}
);
textFieldTaskManage.setDisabledTextColor(new Color(128,128,128));
textFieldTaskManage.setForeground(new Color(169,169,169));
textFieldTaskManage.setFont(new Font("Open Sans",Font.PLAIN,15));
textFieldTaskManage.setToolTipText("Manage your tasks here!");
textFieldTaskManage.setColumns(10);
textFieldTaskManage.setBounds(18,510,792,36);
textFieldTaskManage.setText("Manage your tasks here!");
frame.getContentPane().add(textFieldTaskManage);
refreshButtons();
}
 expected, but {
  initialize();
}
 found.
!STACK 0
org.eclipse.wb.internal.core.utils.check.AssertionFailedException: Execution flow problem. {
  frame=new JFrame();
  frame.setBounds(100,100,828,580);
  frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
  frame.getContentPane().setLayout(null);
  JPanel panel_3=new JPanel();
  panel_3.setBorder(new LineBorder(SystemColor.textHighlight));
  panel_3.setBackground(new Color(255,255,255));
  panel_3.setBounds(20,80,516,422);
  frame.getContentPane().add(panel_3);
  panel_3.setLayout(null);
  taskList=new JList<String>();
  taskList.addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      selectedListIndex=taskList.getSelectedIndex();
      setTaskDetailView();
    }
  }
);
  taskList.setBackground(UIManager.getColor("TabbedPane.selectedTabTitlePressedColor"));
  taskList.setBorder(new EtchedBorder(EtchedBorder.LOWERED,null,null));
  taskList.setToolTipText("");
  taskList.setSelectionForeground(new Color(255,255,255));
  taskList.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
  taskList.setSelectionBackground(new Color(255,165,0));
  taskList.setForeground(new Color(255,165,0));
  taskList.setFont(new Font("Open Sans",Font.PLAIN,17));
  taskList.setModel(new AbstractListModel<String>(){
    private static final long serialVersionUID=1L;
    String[] values=taskManager.getTaskNames();
    public int getSize(){
      return values.length;
    }
    public String getElementAt(    int index){
      return values[index];
    }
  }
);
  taskList.setFixedCellHeight(25);
  taskList.setBounds(11,44,496,368);
  scrollPane=new JScrollPane();
  scrollPane.setBounds(11,44,496,368);
  scrollPane.setViewportView(taskList);
  panel_3.add(scrollPane);
  filterDropdown=new JComboBox();
  filterDropdown.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      String filterString;
switch (filterDropdown.getSelectedIndex()) {
case 0:
        filterString="filter all";
      break;
case 1:
    filterString="filter incomplete";
  break;
case 2:
filterString="filter complete";
break;
case 3:
filterString="filter short";
break;
case 4:
filterString="filter medium";
break;
case 5:
filterString="filter long";
break;
case 6:
filterString="filter soon";
break;
default :
filterString="";
break;
}
try {
taskManager.executeCommand(filterString,window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
refreshWindow();
}
}
);
filterDropdown.setBackground(new Color(255,255,255));
filterDropdown.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
filterDropdown.setForeground(new Color(60,179,113));
filterDropdown.setModel(new DefaultComboBoxModel(new String[]{"Filter by...","Incomplete Tasks","Complete Tasks","Short Tasks (<1 hour)","Medium Tasks (1 - 3 hours)","Long Tasks (3+ hours)","Tasks Ending Soon"}));
filterDropdown.setFont(new Font("Open Sans",Font.PLAIN,15));
filterDropdown.setBounds(6,6,258,36);
panel_3.add(filterDropdown);
sortDropdown=new JComboBox();
sortDropdown.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
String sortString;
switch (sortDropdown.getSelectedIndex()) {
case 0:
sortString="sort default";
break;
case 1:
sortString="sort name";
break;
case 2:
sortString="sort date";
break;
case 3:
sortString="sort start";
break;
case 4:
sortString="sort end";
break;
case 5:
sortString="sort duration";
break;
default :
sortString="";
break;
}
try {
taskManager.executeCommand(sortString,window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
}
}
);
sortDropdown.setOpaque(true);
sortDropdown.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
sortDropdown.setModel(new DefaultComboBoxModel(new String[]{"Sort By...","Name","Date","Starting Time","Ending Time","Duration"}));
sortDropdown.setForeground(new Color(60,179,113));
sortDropdown.setFont(new Font("Open Sans",Font.PLAIN,15));
sortDropdown.setBackground(Color.WHITE);
sortDropdown.setBounds(261,6,249,36);
panel_3.add(sortDropdown);
historyList=new JList();
historyList.setEnabled(false);
historyList.setForeground(new Color(60,179,113));
historyList.setFont(new Font("Open Sans",Font.PLAIN,13));
historyList.setBounds(6,6,501,406);
historyList.setModel(new AbstractListModel(){
List<String> history=taskManager.getHistoryList();
public int getSize(){
return history.size();
}
public Object getElementAt(int index){
return history.get(index);
}
}
);
panel_3.add(historyList);
table=new JTable(data,columns);
table.setBounds(0,0,492,0);
panel_3.add(table);
String[] columns=new String[]{"Task Name","Task Duration","Task Date and Time","Task Completion"};
List<Task> tasks=taskManager.getTasks();
Object[][] data=new Object[taskManager.getNumberOfTasks()][4];
for (int i=0; i < taskManager.getNumberOfTasks(); i++) {
for (int j=0; j < 4; j++) {
switch (j) {
case 0:
data[i][j]=tasks.get(i).getName();
break;
case 1:
if (tasks.get(i).getDuration() != 0) {
data[i][j]=tasks.get(i).getDuration();
}
 else {
data[i][j]="N/A";
}
break;
case 2:
if (tasks.get(i).getTimeStart() != null) {
data[i][j]=tasks.get(i).getTimeStart();
}
 else {
data[i][j]="N/A";
}
break;
default :
data[i][j]=tasks.get(i).getDoneStatus();
break;
}
}
}
JPanel panel_1=new JPanel();
panel_1.setBackground(new Color(51,204,153));
panel_1.setBounds(0,0,828,64);
frame.getContentPane().add(panel_1);
panel_1.setLayout(null);
JLabel lblSnaptask=new JLabel("snaptask");
lblSnaptask.setFont(new Font("Open Sans",Font.PLAIN,48));
lblSnaptask.setForeground(new Color(255,255,255));
lblSnaptask.setBounds(16,0,216,58);
panel_1.add(lblSnaptask);
JPanel searchLine=new JPanel();
searchLine.setBackground(new Color(255,165,0));
searchLine.setBorder(null);
searchLine.setBounds(556,44,251,6);
searchLine.setEnabled(false);
panel_1.add(searchLine);
searchField=new JTextField();
searchField.addFocusListener(new FocusAdapter(){
@Override public void focusGained(FocusEvent e){
if (firstFocusSearchText) {
searchField.setText("");
firstFocusSearchText=false;
}
}
}
);
searchField.setFont(new Font("Open Sans",Font.PLAIN,15));
searchField.setForeground(new Color(169,169,169));
searchField.setToolTipText("Search for tasks!");
searchField.setText("Search for tasks!");
searchField.setBounds(552,15,258,36);
panel_1.add(searchField);
searchField.setColumns(10);
homeButton=new JButton("\n");
homeButton.setOpaque(true);
homeButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=0;
refreshButtons();
}
}
);
homeButton.setIcon(new ImageIcon("/Users/admin/Desktop/ListIcon.png"));
homeButton.setBorder(new EmptyBorder(0,0,0,0));
homeButton.setBackground(new Color(0,204,153));
homeButton.setBounds(237,0,66,64);
panel_1.add(homeButton);
historyButton=new JButton("\n");
historyButton.setOpaque(true);
historyButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=1;
refreshButtons();
}
}
);
historyButton.setIcon(new ImageIcon("/Users/admin/Desktop/HistoryIcon.png"));
historyButton.setBorder(new EmptyBorder(0,0,0,0));
historyButton.setBackground(new Color(0,204,153));
historyButton.setBounds(312,0,66,64);
panel_1.add(historyButton);
helpButton=new JButton("\n");
helpButton.setOpaque(true);
helpButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=2;
refreshButtons();
}
}
);
helpButton.setIcon(new ImageIcon("/Users/admin/Desktop/InfoImage.png"));
helpButton.setBorder(new EmptyBorder(0,0,0,0));
helpButton.setBackground(new Color(0,204,153));
helpButton.setBounds(391,0,66,64);
panel_1.add(helpButton);
JPanel panel=new JPanel();
panel.setBorder(new LineBorder(SystemColor.textHighlight));
panel.setBackground(new Color(255,255,255));
panel.setBounds(557,80,251,422);
frame.getContentPane().add(panel);
panel.setLayout(null);
warningBackground=new JPanel();
warningBackground.setEnabled(false);
warningBackground.setBorder(null);
warningBackground.setBackground(new Color(255,165,0));
warningBackground.setBounds(0,20,252,29);
panel.add(warningBackground);
warningBackground.setLayout(null);
txtLabelStatus=new JTextPane();
txtLabelStatus.setDisabledTextColor(SystemColor.text);
txtLabelStatus.setSelectionColor(SystemColor.activeCaption);
txtLabelStatus.setEnabled(false);
txtLabelStatus.setBounds(72,0,105,28);
txtLabelStatus.setFont(new Font("Open Sans",Font.PLAIN,20));
txtLabelStatus.setForeground(new Color(255,255,255));
txtLabelStatus.setBackground(new Color(255,165,0));
warningBackground.add(txtLabelStatus);
txtAreaDescription=new JTextPane();
txtAreaDescription.setFont(new Font("Open Sans",Font.PLAIN,14));
txtAreaDescription.setForeground(new Color(60,179,113));
txtAreaDescription.setBounds(10,232,208,159);
txtAreaDescription.setEnabled(false);
panel.add(txtAreaDescription);
txtAreaTaskDetails=new JTextArea();
txtAreaTaskDetails.setFont(new Font("Open Sans",Font.PLAIN,17));
txtAreaTaskDetails.setForeground(SystemColor.scrollbar);
txtAreaTaskDetails.setBounds(10,61,233,231);
txtAreaTaskDetails.setEnabled(false);
panel.add(txtAreaTaskDetails);
txtAreaHelp=new JTextPane();
txtAreaHelp.setForeground(new Color(102,205,170));
txtAreaHelp.setFont(new Font("Open Sans",Font.PLAIN,13));
txtAreaHelp.setBounds(30,100,499,372);
frame.getContentPane().add(txtAreaHelp);
txtAreaHelp.setText("add [NAME] || [DD/MM/YYYY] [HH:MM] [H:M]\nadd [NAME] || [DD/MM/YYYY] [HH:MM]\nadd [NAME] || [DD/MM/YYYY]\nadd [NAME]\ndelete [INDEX]\ndone [INDEX]\nedit [INDEX] name [STRING]\nedit [INDEX] duration [STRING]\nedit [INDEX] datetime [STRING]\nedit [INDEX] all [NAME] [DATE] [TIME] [DURATION]\nclear\ndisplay [INDEX]\nsearch name [STRING]\nsearch date [DD/MM/YYYY]\nundo\nhome\nhistory\nhelp\nsort [NAME/DATE/START/END/DURATION/DEFAULT]\nfilter [INCOMPLETE/COMPLETE/SHORT/MEDIUM/LONG/SOON/ALL]\n");
JPanel taskManageLine=new JPanel();
taskManageLine.setEnabled(false);
taskManageLine.setBorder(null);
taskManageLine.setBackground(new Color(255,165,0));
taskManageLine.setBounds(21,540,786,6);
taskManageLine.setEnabled(false);
frame.getContentPane().add(taskManageLine);
textFieldTaskManage=new JTextField();
textFieldTaskManage.addFocusListener(new FocusAdapter(){
@Override public void focusGained(FocusEvent e){
if (firstFocusManageText) {
textFieldTaskManage.setText("");
firstFocusManageText=false;
}
}
}
);
textFieldTaskManage.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
try {
taskManager.executeCommand(textFieldTaskManage.getText(),window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
refreshWindow();
textFieldTaskManage.setText("");
}
}
);
textFieldTaskManage.setDisabledTextColor(new Color(128,128,128));
textFieldTaskManage.setForeground(new Color(169,169,169));
textFieldTaskManage.setFont(new Font("Open Sans",Font.PLAIN,15));
textFieldTaskManage.setToolTipText("Manage your tasks here!");
textFieldTaskManage.setColumns(10);
textFieldTaskManage.setBounds(18,510,792,36);
textFieldTaskManage.setText("Manage your tasks here!");
frame.getContentPane().add(textFieldTaskManage);
refreshButtons();
}
 expected, but {
  initialize();
}
 found.
	at org.eclipse.wb.internal.core.utils.check.Assert.fail(Assert.java:225)
	at org.eclipse.wb.internal.core.utils.check.Assert.isTrue(Assert.java:291)
	at org.eclipse.wb.core.eval.ExecutionFlowDescription.leaveStatement(ExecutionFlowDescription.java:152)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:317)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.access$1(ExecutionFlowUtils.java:235)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:442)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:391)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$28c57345.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:241)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2759)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:145)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:421)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:389)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$28c57345.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:316)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2759)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:263)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2782)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:267)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2782)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:137)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2759)
	at org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:250)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2782)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:137)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2759)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:635)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2782)
	at org.eclipse.jdt.core.dom.AnonymousClassDeclaration.accept0(AnonymousClassDeclaration.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2759)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:314)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2782)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:239)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2759)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:145)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.core.model.JavaInfo.refresh_create(JavaInfo.java:1199)
	at org.eclipse.wb.core.model.ObjectInfo.refreshCreate0(ObjectInfo.java:550)
	at org.eclipse.wb.core.model.ObjectInfo.access$0(ObjectInfo.java:546)
	at org.eclipse.wb.core.model.ObjectInfo$5$1.run(ObjectInfo.java:486)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:145)
	at org.eclipse.wb.core.model.ObjectInfo$5.run(ObjectInfo.java:484)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$2.run(SwingUtils.java:76)
	at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:312)
	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:745)
	at java.awt.EventQueue.access$300(EventQueue.java:103)
	at java.awt.EventQueue$3.run(EventQueue.java:706)
	at java.awt.EventQueue$3.run(EventQueue.java:704)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.awt.EventQueue.dispatchEvent(EventQueue.java:715)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:242)
	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:161)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:150)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:146)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:138)
	at java.awt.EventDispatchThread.run(EventDispatchThread.java:91)

!ENTRY org.eclipse.ui 4 0 2016-04-08 20:14:22.133
!MESSAGE Unhandled event loop exception
!STACK 0
org.eclipse.core.runtime.AssertionFailedException: null argument:
	at org.eclipse.core.runtime.Assert.isNotNull(Assert.java:85)
	at org.eclipse.core.runtime.Assert.isNotNull(Assert.java:73)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.setSelection(AbstractEditPartViewer.java:249)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.resetSelectionFromModels(TreeDropListener.java:141)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.drop(TreeDropListener.java:107)
	at org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:91)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1491)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1514)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1499)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1299)
	at org.eclipse.swt.dnd.DropTarget.drop(DropTarget.java:728)
	at org.eclipse.swt.dnd.DropTarget.outlineView_acceptDrop_item_childIndex(DropTarget.java:746)
	at org.eclipse.swt.dnd.DropTarget.dropTargetProc(DropTarget.java:471)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.dnd.DropTarget.dndCallSuper(DropTarget.java:210)
	at org.eclipse.swt.dnd.DropTarget.performDragOperation(DropTarget.java:739)
	at org.eclipse.swt.dnd.DropTarget.dropTargetProc(DropTarget.java:456)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:227)
	at org.eclipse.swt.widgets.Widget.mouseDownSuper(Widget.java:1121)
	at org.eclipse.swt.widgets.Tree.mouseDownSuper(Tree.java:2047)
	at org.eclipse.swt.widgets.Widget.mouseDown(Widget.java:1113)
	at org.eclipse.swt.widgets.Control.mouseDown(Control.java:2569)
	at org.eclipse.swt.widgets.Tree.mouseDown(Tree.java:2015)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5692)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:227)
	at org.eclipse.swt.widgets.Widget.windowSendEvent(Widget.java:2130)
	at org.eclipse.swt.widgets.Shell.windowSendEvent(Shell.java:2337)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5756)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Display.applicationSendEvent(Display.java:5193)
	at org.eclipse.swt.widgets.Display.applicationProc(Display.java:5342)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSApplication.sendEvent(NSApplication.java:128)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3695)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:1127)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1018)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:156)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:654)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:598)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:139)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:380)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:235)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:669)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:608)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1515)

!ENTRY org.eclipse.wb.core 4 4 2016-04-08 20:14:53.995
!MESSAGE Designer [1.8.0.r45x201506110820.201604082003]: Execution flow problem. {
  EventQueue.invokeLater(new Runnable(){
    public void run(){
      try {
        taskManager=TaskManager.getInstance();
        ApplicationWindow window=new ApplicationWindow();
        window.frame.setVisible(true);
        window.frame.setResizable(false);
      }
 catch (      Exception e) {
        e.printStackTrace();
      }
    }
  }
);
}
 expected, but {
  initialize();
}
 found.
!STACK 0
org.eclipse.wb.internal.core.utils.check.AssertionFailedException: Execution flow problem. {
  EventQueue.invokeLater(new Runnable(){
    public void run(){
      try {
        taskManager=TaskManager.getInstance();
        ApplicationWindow window=new ApplicationWindow();
        window.frame.setVisible(true);
        window.frame.setResizable(false);
      }
 catch (      Exception e) {
        e.printStackTrace();
      }
    }
  }
);
}
 expected, but {
  initialize();
}
 found.
	at org.eclipse.wb.internal.core.utils.check.Assert.fail(Assert.java:225)
	at org.eclipse.wb.internal.core.utils.check.Assert.isTrue(Assert.java:291)
	at org.eclipse.wb.core.eval.ExecutionFlowDescription.leaveStatement(ExecutionFlowDescription.java:152)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:317)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.prepareAssignmentInformation(ExecutionFlowUtils.java:784)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.getVariableCachedValue(ExecutionFlowUtils.java:753)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.getVariableCachedList_notNull(ExecutionFlowUtils.java:707)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.getReferences(ExecutionFlowUtils.java:669)
	at org.eclipse.wb.internal.core.model.variable.AbstractNamedVariableSupport.getReferences(AbstractNamedVariableSupport.java:184)
	at org.eclipse.wb.internal.core.model.variable.FieldUniqueVariableSupport.canConvertFieldToLocal(FieldUniqueVariableSupport.java:97)
	at org.eclipse.wb.internal.core.editor.structure.property.JavaPropertiesToolBarContributor.addVariableConvertAction(JavaPropertiesToolBarContributor.java:101)
	at org.eclipse.wb.internal.core.editor.structure.property.JavaPropertiesToolBarContributor.contributeToolBar(JavaPropertiesToolBarContributor.java:54)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage$2$1.run(ComponentsPropertiesPage.java:186)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runLog(ExecutionUtils.java:106)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage$2.run(ComponentsPropertiesPage.java:184)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runLog(ExecutionUtils.java:106)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage.updateActions(ComponentsPropertiesPage.java:160)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage.access$22(ComponentsPropertiesPage.java:159)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage$12.run(ComponentsPropertiesPage.java:538)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runLog(ExecutionUtils.java:106)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage.refreshProperties(ComponentsPropertiesPage.java:530)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage.setSelection(ComponentsPropertiesPage.java:321)
	at org.eclipse.wb.internal.core.editor.structure.DesignComponentsComposite$1.selectionChanged(DesignComponentsComposite.java:72)
	at org.eclipse.wb.internal.core.utils.gef.EditPartsSelectionProvider.fireSelectionChanged(EditPartsSelectionProvider.java:111)
	at org.eclipse.wb.internal.core.utils.gef.EditPartsSelectionProvider.access$0(EditPartsSelectionProvider.java:102)
	at org.eclipse.wb.internal.core.utils.gef.EditPartsSelectionProvider$1.selectionChanged(EditPartsSelectionProvider.java:40)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.fireSelectionChanged(AbstractEditPartViewer.java:202)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.setSelection(AbstractEditPartViewer.java:262)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.setSelection(AbstractEditPartViewer.java:193)
	at org.eclipse.wb.internal.gef.tree.TreeViewer$1.widgetSelected(TreeViewer.java:180)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:248)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1491)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1514)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1499)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1299)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4072)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3698)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.waitEventLoop(ExecutionUtils.java:71)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:168)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runLaterAndWait(SwingUtils.java:73)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.execRefreshOperation(ComponentInfo.java:119)
	at org.eclipse.wb.core.model.ObjectInfo.refresh(ObjectInfo.java:482)
	at org.eclipse.wb.core.model.ObjectInfo.endEdit(ObjectInfo.java:446)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:325)
	at org.eclipse.wb.core.gef.command.EditCommand.execute(EditCommand.java:50)
	at org.eclipse.wb.internal.gef.core.EditDomain.executeCommand(EditDomain.java:59)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.executeCommand(TreeDropListener.java:265)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.drop(TreeDropListener.java:103)
	at org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:91)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1491)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1514)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1499)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1299)
	at org.eclipse.swt.dnd.DropTarget.drop(DropTarget.java:728)
	at org.eclipse.swt.dnd.DropTarget.outlineView_acceptDrop_item_childIndex(DropTarget.java:746)
	at org.eclipse.swt.dnd.DropTarget.dropTargetProc(DropTarget.java:471)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.dnd.DropTarget.dndCallSuper(DropTarget.java:210)
	at org.eclipse.swt.dnd.DropTarget.performDragOperation(DropTarget.java:739)
	at org.eclipse.swt.dnd.DropTarget.dropTargetProc(DropTarget.java:456)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:227)
	at org.eclipse.swt.widgets.Widget.mouseDownSuper(Widget.java:1121)
	at org.eclipse.swt.widgets.Tree.mouseDownSuper(Tree.java:2047)
	at org.eclipse.swt.widgets.Widget.mouseDown(Widget.java:1113)
	at org.eclipse.swt.widgets.Control.mouseDown(Control.java:2569)
	at org.eclipse.swt.widgets.Tree.mouseDown(Tree.java:2015)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5692)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:227)
	at org.eclipse.swt.widgets.Widget.windowSendEvent(Widget.java:2130)
	at org.eclipse.swt.widgets.Shell.windowSendEvent(Shell.java:2337)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5756)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Display.applicationSendEvent(Display.java:5193)
	at org.eclipse.swt.widgets.Display.applicationProc(Display.java:5342)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSApplication.sendEvent(NSApplication.java:128)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3695)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:1127)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1018)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:156)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:654)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:598)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:139)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:380)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:235)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:669)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:608)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1515)

!ENTRY org.eclipse.wb.core 4 4 2016-04-08 20:14:54.786
!MESSAGE Designer [1.8.0.r45x201506110820.201604082003]: Execution flow problem. frame=new JFrame();
 expected, but taskList.setModel(new AbstractListModel<String>(){
  private static final long serialVersionUID=1L;
  String[] values=taskManager.getTaskNames();
  public int getSize(){
    return values.length;
  }
  public String getElementAt(  int index){
    return values[index];
  }
}
);
 found.
!STACK 0
org.eclipse.wb.internal.core.utils.check.AssertionFailedException: Execution flow problem. frame=new JFrame();
 expected, but taskList.setModel(new AbstractListModel<String>(){
  private static final long serialVersionUID=1L;
  String[] values=taskManager.getTaskNames();
  public int getSize(){
    return values.length;
  }
  public String getElementAt(  int index){
    return values[index];
  }
}
);
 found.
	at org.eclipse.wb.internal.core.utils.check.Assert.fail(Assert.java:225)
	at org.eclipse.wb.internal.core.utils.check.Assert.isTrue(Assert.java:291)
	at org.eclipse.wb.core.eval.ExecutionFlowDescription.leaveStatement(ExecutionFlowDescription.java:152)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:317)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.access$1(ExecutionFlowUtils.java:235)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:442)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:391)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$28c57345.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:241)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2759)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:145)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:421)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:389)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$28c57345.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:316)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2759)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:263)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2782)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:267)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2782)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:137)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2759)
	at org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:250)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2782)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:137)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2759)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:635)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2782)
	at org.eclipse.jdt.core.dom.AnonymousClassDeclaration.accept0(AnonymousClassDeclaration.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2759)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:314)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2782)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:239)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2759)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:145)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.core.model.JavaInfo.refresh_create(JavaInfo.java:1199)
	at org.eclipse.wb.core.model.ObjectInfo.refreshCreate0(ObjectInfo.java:550)
	at org.eclipse.wb.core.model.ObjectInfo.access$0(ObjectInfo.java:546)
	at org.eclipse.wb.core.model.ObjectInfo$5$1.run(ObjectInfo.java:486)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:145)
	at org.eclipse.wb.core.model.ObjectInfo$5.run(ObjectInfo.java:484)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$2.run(SwingUtils.java:76)
	at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:312)
	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:745)
	at java.awt.EventQueue.access$300(EventQueue.java:103)
	at java.awt.EventQueue$3.run(EventQueue.java:706)
	at java.awt.EventQueue$3.run(EventQueue.java:704)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.awt.EventQueue.dispatchEvent(EventQueue.java:715)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:242)
	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:161)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:150)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:146)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:138)
	at java.awt.EventDispatchThread.run(EventDispatchThread.java:91)

!ENTRY org.eclipse.ui 4 0 2016-04-08 20:14:55.389
!MESSAGE Unhandled event loop exception
!STACK 0
org.eclipse.core.runtime.AssertionFailedException: null argument:
	at org.eclipse.core.runtime.Assert.isNotNull(Assert.java:85)
	at org.eclipse.core.runtime.Assert.isNotNull(Assert.java:73)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.setSelection(AbstractEditPartViewer.java:249)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.resetSelectionFromModels(TreeDropListener.java:141)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.drop(TreeDropListener.java:107)
	at org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:91)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1491)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1514)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1499)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1299)
	at org.eclipse.swt.dnd.DropTarget.drop(DropTarget.java:728)
	at org.eclipse.swt.dnd.DropTarget.outlineView_acceptDrop_item_childIndex(DropTarget.java:746)
	at org.eclipse.swt.dnd.DropTarget.dropTargetProc(DropTarget.java:471)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.dnd.DropTarget.dndCallSuper(DropTarget.java:210)
	at org.eclipse.swt.dnd.DropTarget.performDragOperation(DropTarget.java:739)
	at org.eclipse.swt.dnd.DropTarget.dropTargetProc(DropTarget.java:456)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:227)
	at org.eclipse.swt.widgets.Widget.mouseDownSuper(Widget.java:1121)
	at org.eclipse.swt.widgets.Tree.mouseDownSuper(Tree.java:2047)
	at org.eclipse.swt.widgets.Widget.mouseDown(Widget.java:1113)
	at org.eclipse.swt.widgets.Control.mouseDown(Control.java:2569)
	at org.eclipse.swt.widgets.Tree.mouseDown(Tree.java:2015)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5692)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:227)
	at org.eclipse.swt.widgets.Widget.windowSendEvent(Widget.java:2130)
	at org.eclipse.swt.widgets.Shell.windowSendEvent(Shell.java:2337)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5756)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Display.applicationSendEvent(Display.java:5193)
	at org.eclipse.swt.widgets.Display.applicationProc(Display.java:5342)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSApplication.sendEvent(NSApplication.java:128)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3695)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:1127)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1018)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:156)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:654)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:598)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:139)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:380)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:235)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:669)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:608)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1515)

!ENTRY org.eclipse.wb.core 4 4 2016-04-08 20:16:43.897
!MESSAGE Designer [1.8.0.r45x201506110820.201604082003]: Execution flow problem. {
  EventQueue.invokeLater(new Runnable(){
    public void run(){
      try {
        taskManager=TaskManager.getInstance();
        ApplicationWindow window=new ApplicationWindow();
        window.frame.setVisible(true);
        window.frame.setResizable(false);
      }
 catch (      Exception e) {
        e.printStackTrace();
      }
    }
  }
);
}
 expected, but frame.getContentPane().add(panel_1);
 found.
!STACK 0
org.eclipse.wb.internal.core.utils.check.AssertionFailedException: Execution flow problem. {
  EventQueue.invokeLater(new Runnable(){
    public void run(){
      try {
        taskManager=TaskManager.getInstance();
        ApplicationWindow window=new ApplicationWindow();
        window.frame.setVisible(true);
        window.frame.setResizable(false);
      }
 catch (      Exception e) {
        e.printStackTrace();
      }
    }
  }
);
}
 expected, but frame.getContentPane().add(panel_1);
 found.
	at org.eclipse.wb.internal.core.utils.check.Assert.fail(Assert.java:225)
	at org.eclipse.wb.internal.core.utils.check.Assert.isTrue(Assert.java:291)
	at org.eclipse.wb.core.eval.ExecutionFlowDescription.leaveStatement(ExecutionFlowDescription.java:152)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:317)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.prepareAssignmentInformation(ExecutionFlowUtils.java:784)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.getVariableCachedValue(ExecutionFlowUtils.java:753)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.getVariableCachedList_notNull(ExecutionFlowUtils.java:707)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.getReferences(ExecutionFlowUtils.java:669)
	at org.eclipse.wb.internal.core.model.variable.AbstractNamedVariableSupport.getReferences(AbstractNamedVariableSupport.java:184)
	at org.eclipse.wb.internal.core.model.variable.FieldUniqueVariableSupport.canConvertFieldToLocal(FieldUniqueVariableSupport.java:97)
	at org.eclipse.wb.internal.core.editor.structure.property.JavaPropertiesToolBarContributor.addVariableConvertAction(JavaPropertiesToolBarContributor.java:101)
	at org.eclipse.wb.internal.core.editor.structure.property.JavaPropertiesToolBarContributor.contributeToolBar(JavaPropertiesToolBarContributor.java:54)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage$2$1.run(ComponentsPropertiesPage.java:186)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runLog(ExecutionUtils.java:106)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage$2.run(ComponentsPropertiesPage.java:184)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runLog(ExecutionUtils.java:106)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage.updateActions(ComponentsPropertiesPage.java:160)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage.access$22(ComponentsPropertiesPage.java:159)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage$12.run(ComponentsPropertiesPage.java:538)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runLog(ExecutionUtils.java:106)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage.refreshProperties(ComponentsPropertiesPage.java:530)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage.setSelection(ComponentsPropertiesPage.java:321)
	at org.eclipse.wb.internal.core.editor.structure.DesignComponentsComposite$1.selectionChanged(DesignComponentsComposite.java:72)
	at org.eclipse.wb.internal.core.utils.gef.EditPartsSelectionProvider.fireSelectionChanged(EditPartsSelectionProvider.java:111)
	at org.eclipse.wb.internal.core.utils.gef.EditPartsSelectionProvider.access$0(EditPartsSelectionProvider.java:102)
	at org.eclipse.wb.internal.core.utils.gef.EditPartsSelectionProvider$1.selectionChanged(EditPartsSelectionProvider.java:40)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.fireSelectionChanged(AbstractEditPartViewer.java:202)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.setSelection(AbstractEditPartViewer.java:262)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.setSelection(AbstractEditPartViewer.java:193)
	at org.eclipse.wb.internal.gef.tree.TreeViewer$1.widgetSelected(TreeViewer.java:180)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:248)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1491)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1514)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1499)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1299)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4072)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3698)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.waitEventLoop(ExecutionUtils.java:71)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:168)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runLaterAndWait(SwingUtils.java:73)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.execRefreshOperation(ComponentInfo.java:119)
	at org.eclipse.wb.core.model.ObjectInfo.refresh(ObjectInfo.java:482)
	at org.eclipse.wb.core.model.ObjectInfo.endEdit(ObjectInfo.java:446)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:325)
	at org.eclipse.wb.core.gef.command.EditCommand.execute(EditCommand.java:50)
	at org.eclipse.wb.internal.gef.core.EditDomain.executeCommand(EditDomain.java:59)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.executeCommand(TreeDropListener.java:265)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.drop(TreeDropListener.java:103)
	at org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:91)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1491)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1514)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1499)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1299)
	at org.eclipse.swt.dnd.DropTarget.drop(DropTarget.java:728)
	at org.eclipse.swt.dnd.DropTarget.outlineView_acceptDrop_item_childIndex(DropTarget.java:746)
	at org.eclipse.swt.dnd.DropTarget.dropTargetProc(DropTarget.java:471)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.dnd.DropTarget.dndCallSuper(DropTarget.java:210)
	at org.eclipse.swt.dnd.DropTarget.performDragOperation(DropTarget.java:739)
	at org.eclipse.swt.dnd.DropTarget.dropTargetProc(DropTarget.java:456)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:227)
	at org.eclipse.swt.widgets.Widget.mouseDownSuper(Widget.java:1121)
	at org.eclipse.swt.widgets.Tree.mouseDownSuper(Tree.java:2047)
	at org.eclipse.swt.widgets.Widget.mouseDown(Widget.java:1113)
	at org.eclipse.swt.widgets.Control.mouseDown(Control.java:2569)
	at org.eclipse.swt.widgets.Tree.mouseDown(Tree.java:2015)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5692)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:227)
	at org.eclipse.swt.widgets.Widget.windowSendEvent(Widget.java:2130)
	at org.eclipse.swt.widgets.Shell.windowSendEvent(Shell.java:2337)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5756)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Display.applicationSendEvent(Display.java:5193)
	at org.eclipse.swt.widgets.Display.applicationProc(Display.java:5342)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSApplication.sendEvent(NSApplication.java:128)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3695)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:1127)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1018)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:156)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:654)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:598)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:139)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:380)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:235)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:669)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:608)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1515)

!ENTRY org.eclipse.wb.core 4 4 2016-04-08 20:17:00.799
!MESSAGE Designer [1.8.0.r45x201506110820.201604082003]: Execution flow problem. {
  EventQueue.invokeLater(new Runnable(){
    public void run(){
      try {
        taskManager=TaskManager.getInstance();
        ApplicationWindow window=new ApplicationWindow();
        window.frame.setVisible(true);
        window.frame.setResizable(false);
      }
 catch (      Exception e) {
        e.printStackTrace();
      }
    }
  }
);
}
 expected, but {
  frame=new JFrame();
  frame.setBounds(100,100,828,580);
  frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
  frame.getContentPane().setLayout(null);
  JPanel panel_3=new JPanel();
  panel_3.setBorder(new LineBorder(SystemColor.textHighlight));
  panel_3.setBackground(new Color(255,255,255));
  panel_3.setBounds(20,80,516,422);
  frame.getContentPane().add(panel_3);
  panel_3.setLayout(null);
  taskList=new JList<String>();
  taskList.addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      selectedListIndex=taskList.getSelectedIndex();
      setTaskDetailView();
    }
  }
);
  taskList.setBackground(UIManager.getColor("TabbedPane.selectedTabTitlePressedColor"));
  taskList.setBorder(new EtchedBorder(EtchedBorder.LOWERED,null,null));
  taskList.setToolTipText("");
  taskList.setSelectionForeground(new Color(255,255,255));
  taskList.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
  taskList.setSelectionBackground(new Color(255,165,0));
  taskList.setForeground(new Color(255,165,0));
  taskList.setFont(new Font("Open Sans",Font.PLAIN,17));
  taskList.setModel(new AbstractListModel<String>(){
    private static final long serialVersionUID=1L;
    String[] values=taskManager.getTaskNames();
    public int getSize(){
      return values.length;
    }
    public String getElementAt(    int index){
      return values[index];
    }
  }
);
  taskList.setFixedCellHeight(25);
  taskList.setBounds(11,44,496,368);
  scrollPane=new JScrollPane();
  scrollPane.setBounds(11,44,496,368);
  scrollPane.setViewportView(taskList);
  panel_3.add(scrollPane);
  filterDropdown=new JComboBox();
  filterDropdown.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      String filterString;
switch (filterDropdown.getSelectedIndex()) {
case 0:
        filterString="filter all";
      break;
case 1:
    filterString="filter incomplete";
  break;
case 2:
filterString="filter complete";
break;
case 3:
filterString="filter short";
break;
case 4:
filterString="filter medium";
break;
case 5:
filterString="filter long";
break;
case 6:
filterString="filter soon";
break;
default :
filterString="";
break;
}
try {
taskManager.executeCommand(filterString,window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
refreshWindow();
}
}
);
filterDropdown.setBackground(new Color(255,255,255));
filterDropdown.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
filterDropdown.setForeground(new Color(60,179,113));
filterDropdown.setModel(new DefaultComboBoxModel(new String[]{"Filter by...","Incomplete Tasks","Complete Tasks","Short Tasks (<1 hour)","Medium Tasks (1 - 3 hours)","Long Tasks (3+ hours)","Tasks Ending Soon"}));
filterDropdown.setFont(new Font("Open Sans",Font.PLAIN,15));
filterDropdown.setBounds(6,6,258,36);
panel_3.add(filterDropdown);
sortDropdown=new JComboBox();
sortDropdown.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
String sortString;
switch (sortDropdown.getSelectedIndex()) {
case 0:
sortString="sort default";
break;
case 1:
sortString="sort name";
break;
case 2:
sortString="sort date";
break;
case 3:
sortString="sort start";
break;
case 4:
sortString="sort end";
break;
case 5:
sortString="sort duration";
break;
default :
sortString="";
break;
}
try {
taskManager.executeCommand(sortString,window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
}
}
);
sortDropdown.setOpaque(true);
sortDropdown.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
sortDropdown.setModel(new DefaultComboBoxModel(new String[]{"Sort By...","Name","Date","Starting Time","Ending Time","Duration"}));
sortDropdown.setForeground(new Color(60,179,113));
sortDropdown.setFont(new Font("Open Sans",Font.PLAIN,15));
sortDropdown.setBackground(Color.WHITE);
sortDropdown.setBounds(261,6,249,36);
panel_3.add(sortDropdown);
historyList=new JList();
historyList.setEnabled(false);
historyList.setForeground(new Color(60,179,113));
historyList.setFont(new Font("Open Sans",Font.PLAIN,13));
historyList.setBounds(6,6,501,406);
historyList.setModel(new AbstractListModel(){
List<String> history=taskManager.getHistoryList();
public int getSize(){
return history.size();
}
public Object getElementAt(int index){
return history.get(index);
}
}
);
panel_3.add(historyList);
table=new JTable();
table.setBounds(0,0,499,372);
panel_3.add(table);
String[] columns=new String[]{"Task Name","Task Duration","Task Date and Time","Task Completion"};
List<Task> tasks=taskManager.getTasks();
Object[][] data=new Object[taskManager.getNumberOfTasks()][4];
for (int i=0; i < taskManager.getNumberOfTasks(); i++) {
for (int j=0; j < 4; j++) {
switch (j) {
case 0:
data[i][j]=tasks.get(i).getName();
break;
case 1:
if (tasks.get(i).getDuration() != 0) {
data[i][j]=tasks.get(i).getDuration();
}
 else {
data[i][j]="N/A";
}
break;
case 2:
if (tasks.get(i).getTimeStart() != null) {
data[i][j]=tasks.get(i).getTimeStart();
}
 else {
data[i][j]="N/A";
}
break;
default :
data[i][j]=tasks.get(i).getDoneStatus();
break;
}
}
}
JPanel panel_1=new JPanel();
panel_1.setBackground(new Color(51,204,153));
panel_1.setBounds(0,0,828,64);
frame.getContentPane().add(panel_1);
panel_1.setLayout(null);
JLabel lblSnaptask=new JLabel("snaptask");
lblSnaptask.setFont(new Font("Open Sans",Font.PLAIN,48));
lblSnaptask.setForeground(new Color(255,255,255));
lblSnaptask.setBounds(16,0,216,58);
panel_1.add(lblSnaptask);
JPanel searchLine=new JPanel();
searchLine.setBackground(new Color(255,165,0));
searchLine.setBorder(null);
searchLine.setBounds(556,44,251,6);
searchLine.setEnabled(false);
panel_1.add(searchLine);
searchField=new JTextField();
searchField.addFocusListener(new FocusAdapter(){
@Override public void focusGained(FocusEvent e){
if (firstFocusSearchText) {
searchField.setText("");
firstFocusSearchText=false;
}
}
}
);
searchField.setFont(new Font("Open Sans",Font.PLAIN,15));
searchField.setForeground(new Color(169,169,169));
searchField.setToolTipText("Search for tasks!");
searchField.setText("Search for tasks!");
searchField.setBounds(552,15,258,36);
panel_1.add(searchField);
searchField.setColumns(10);
homeButton=new JButton("\n");
homeButton.setOpaque(true);
homeButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=0;
refreshButtons();
}
}
);
homeButton.setIcon(new ImageIcon("/Users/admin/Desktop/ListIcon.png"));
homeButton.setBorder(new EmptyBorder(0,0,0,0));
homeButton.setBackground(new Color(0,204,153));
homeButton.setBounds(237,0,66,64);
panel_1.add(homeButton);
historyButton=new JButton("\n");
historyButton.setOpaque(true);
historyButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=1;
refreshButtons();
}
}
);
historyButton.setIcon(new ImageIcon("/Users/admin/Desktop/HistoryIcon.png"));
historyButton.setBorder(new EmptyBorder(0,0,0,0));
historyButton.setBackground(new Color(0,204,153));
historyButton.setBounds(312,0,66,64);
panel_1.add(historyButton);
helpButton=new JButton("\n");
helpButton.setOpaque(true);
helpButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=2;
refreshButtons();
}
}
);
helpButton.setIcon(new ImageIcon("/Users/admin/Desktop/InfoImage.png"));
helpButton.setBorder(new EmptyBorder(0,0,0,0));
helpButton.setBackground(new Color(0,204,153));
helpButton.setBounds(391,0,66,64);
panel_1.add(helpButton);
JPanel panel=new JPanel();
panel.setBorder(new LineBorder(SystemColor.textHighlight));
panel.setBackground(new Color(255,255,255));
panel.setBounds(557,80,251,422);
frame.getContentPane().add(panel);
panel.setLayout(null);
warningBackground=new JPanel();
warningBackground.setEnabled(false);
warningBackground.setBorder(null);
warningBackground.setBackground(new Color(255,165,0));
warningBackground.setBounds(0,20,252,29);
panel.add(warningBackground);
warningBackground.setLayout(null);
txtLabelStatus=new JTextPane();
txtLabelStatus.setDisabledTextColor(SystemColor.text);
txtLabelStatus.setSelectionColor(SystemColor.activeCaption);
txtLabelStatus.setEnabled(false);
txtLabelStatus.setBounds(72,0,105,28);
txtLabelStatus.setFont(new Font("Open Sans",Font.PLAIN,20));
txtLabelStatus.setForeground(new Color(255,255,255));
txtLabelStatus.setBackground(new Color(255,165,0));
warningBackground.add(txtLabelStatus);
txtAreaDescription=new JTextPane();
txtAreaDescription.setFont(new Font("Open Sans",Font.PLAIN,14));
txtAreaDescription.setForeground(new Color(60,179,113));
txtAreaDescription.setBounds(10,232,208,159);
txtAreaDescription.setEnabled(false);
panel.add(txtAreaDescription);
txtAreaTaskDetails=new JTextArea();
txtAreaTaskDetails.setFont(new Font("Open Sans",Font.PLAIN,17));
txtAreaTaskDetails.setForeground(SystemColor.scrollbar);
txtAreaTaskDetails.setBounds(10,61,233,231);
txtAreaTaskDetails.setEnabled(false);
panel.add(txtAreaTaskDetails);
txtAreaHelp=new JTextPane();
txtAreaHelp.setForeground(new Color(102,205,170));
txtAreaHelp.setFont(new Font("Open Sans",Font.PLAIN,13));
txtAreaHelp.setBounds(30,100,499,372);
frame.getContentPane().add(txtAreaHelp);
txtAreaHelp.setText("add [NAME] || [DD/MM/YYYY] [HH:MM] [H:M]\nadd [NAME] || [DD/MM/YYYY] [HH:MM]\nadd [NAME] || [DD/MM/YYYY]\nadd [NAME]\ndelete [INDEX]\ndone [INDEX]\nedit [INDEX] name [STRING]\nedit [INDEX] duration [STRING]\nedit [INDEX] datetime [STRING]\nedit [INDEX] all [NAME] [DATE] [TIME] [DURATION]\nclear\ndisplay [INDEX]\nsearch name [STRING]\nsearch date [DD/MM/YYYY]\nundo\nhome\nhistory\nhelp\nsort [NAME/DATE/START/END/DURATION/DEFAULT]\nfilter [INCOMPLETE/COMPLETE/SHORT/MEDIUM/LONG/SOON/ALL]\n");
JPanel taskManageLine=new JPanel();
taskManageLine.setEnabled(false);
taskManageLine.setBorder(null);
taskManageLine.setBackground(new Color(255,165,0));
taskManageLine.setBounds(21,540,786,6);
taskManageLine.setEnabled(false);
frame.getContentPane().add(taskManageLine);
textFieldTaskManage=new JTextField();
textFieldTaskManage.addFocusListener(new FocusAdapter(){
@Override public void focusGained(FocusEvent e){
if (firstFocusManageText) {
textFieldTaskManage.setText("");
firstFocusManageText=false;
}
}
}
);
textFieldTaskManage.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
try {
taskManager.executeCommand(textFieldTaskManage.getText(),window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
refreshWindow();
textFieldTaskManage.setText("");
}
}
);
textFieldTaskManage.setDisabledTextColor(new Color(128,128,128));
textFieldTaskManage.setForeground(new Color(169,169,169));
textFieldTaskManage.setFont(new Font("Open Sans",Font.PLAIN,15));
textFieldTaskManage.setToolTipText("Manage your tasks here!");
textFieldTaskManage.setColumns(10);
textFieldTaskManage.setBounds(18,510,792,36);
textFieldTaskManage.setText("Manage your tasks here!");
frame.getContentPane().add(textFieldTaskManage);
refreshButtons();
}
 found.
!STACK 0
org.eclipse.wb.internal.core.utils.check.AssertionFailedException: Execution flow problem. {
  EventQueue.invokeLater(new Runnable(){
    public void run(){
      try {
        taskManager=TaskManager.getInstance();
        ApplicationWindow window=new ApplicationWindow();
        window.frame.setVisible(true);
        window.frame.setResizable(false);
      }
 catch (      Exception e) {
        e.printStackTrace();
      }
    }
  }
);
}
 expected, but {
  frame=new JFrame();
  frame.setBounds(100,100,828,580);
  frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
  frame.getContentPane().setLayout(null);
  JPanel panel_3=new JPanel();
  panel_3.setBorder(new LineBorder(SystemColor.textHighlight));
  panel_3.setBackground(new Color(255,255,255));
  panel_3.setBounds(20,80,516,422);
  frame.getContentPane().add(panel_3);
  panel_3.setLayout(null);
  taskList=new JList<String>();
  taskList.addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      selectedListIndex=taskList.getSelectedIndex();
      setTaskDetailView();
    }
  }
);
  taskList.setBackground(UIManager.getColor("TabbedPane.selectedTabTitlePressedColor"));
  taskList.setBorder(new EtchedBorder(EtchedBorder.LOWERED,null,null));
  taskList.setToolTipText("");
  taskList.setSelectionForeground(new Color(255,255,255));
  taskList.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
  taskList.setSelectionBackground(new Color(255,165,0));
  taskList.setForeground(new Color(255,165,0));
  taskList.setFont(new Font("Open Sans",Font.PLAIN,17));
  taskList.setModel(new AbstractListModel<String>(){
    private static final long serialVersionUID=1L;
    String[] values=taskManager.getTaskNames();
    public int getSize(){
      return values.length;
    }
    public String getElementAt(    int index){
      return values[index];
    }
  }
);
  taskList.setFixedCellHeight(25);
  taskList.setBounds(11,44,496,368);
  scrollPane=new JScrollPane();
  scrollPane.setBounds(11,44,496,368);
  scrollPane.setViewportView(taskList);
  panel_3.add(scrollPane);
  filterDropdown=new JComboBox();
  filterDropdown.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      String filterString;
switch (filterDropdown.getSelectedIndex()) {
case 0:
        filterString="filter all";
      break;
case 1:
    filterString="filter incomplete";
  break;
case 2:
filterString="filter complete";
break;
case 3:
filterString="filter short";
break;
case 4:
filterString="filter medium";
break;
case 5:
filterString="filter long";
break;
case 6:
filterString="filter soon";
break;
default :
filterString="";
break;
}
try {
taskManager.executeCommand(filterString,window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
refreshWindow();
}
}
);
filterDropdown.setBackground(new Color(255,255,255));
filterDropdown.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
filterDropdown.setForeground(new Color(60,179,113));
filterDropdown.setModel(new DefaultComboBoxModel(new String[]{"Filter by...","Incomplete Tasks","Complete Tasks","Short Tasks (<1 hour)","Medium Tasks (1 - 3 hours)","Long Tasks (3+ hours)","Tasks Ending Soon"}));
filterDropdown.setFont(new Font("Open Sans",Font.PLAIN,15));
filterDropdown.setBounds(6,6,258,36);
panel_3.add(filterDropdown);
sortDropdown=new JComboBox();
sortDropdown.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
String sortString;
switch (sortDropdown.getSelectedIndex()) {
case 0:
sortString="sort default";
break;
case 1:
sortString="sort name";
break;
case 2:
sortString="sort date";
break;
case 3:
sortString="sort start";
break;
case 4:
sortString="sort end";
break;
case 5:
sortString="sort duration";
break;
default :
sortString="";
break;
}
try {
taskManager.executeCommand(sortString,window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
}
}
);
sortDropdown.setOpaque(true);
sortDropdown.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
sortDropdown.setModel(new DefaultComboBoxModel(new String[]{"Sort By...","Name","Date","Starting Time","Ending Time","Duration"}));
sortDropdown.setForeground(new Color(60,179,113));
sortDropdown.setFont(new Font("Open Sans",Font.PLAIN,15));
sortDropdown.setBackground(Color.WHITE);
sortDropdown.setBounds(261,6,249,36);
panel_3.add(sortDropdown);
historyList=new JList();
historyList.setEnabled(false);
historyList.setForeground(new Color(60,179,113));
historyList.setFont(new Font("Open Sans",Font.PLAIN,13));
historyList.setBounds(6,6,501,406);
historyList.setModel(new AbstractListModel(){
List<String> history=taskManager.getHistoryList();
public int getSize(){
return history.size();
}
public Object getElementAt(int index){
return history.get(index);
}
}
);
panel_3.add(historyList);
table=new JTable();
table.setBounds(0,0,499,372);
panel_3.add(table);
String[] columns=new String[]{"Task Name","Task Duration","Task Date and Time","Task Completion"};
List<Task> tasks=taskManager.getTasks();
Object[][] data=new Object[taskManager.getNumberOfTasks()][4];
for (int i=0; i < taskManager.getNumberOfTasks(); i++) {
for (int j=0; j < 4; j++) {
switch (j) {
case 0:
data[i][j]=tasks.get(i).getName();
break;
case 1:
if (tasks.get(i).getDuration() != 0) {
data[i][j]=tasks.get(i).getDuration();
}
 else {
data[i][j]="N/A";
}
break;
case 2:
if (tasks.get(i).getTimeStart() != null) {
data[i][j]=tasks.get(i).getTimeStart();
}
 else {
data[i][j]="N/A";
}
break;
default :
data[i][j]=tasks.get(i).getDoneStatus();
break;
}
}
}
JPanel panel_1=new JPanel();
panel_1.setBackground(new Color(51,204,153));
panel_1.setBounds(0,0,828,64);
frame.getContentPane().add(panel_1);
panel_1.setLayout(null);
JLabel lblSnaptask=new JLabel("snaptask");
lblSnaptask.setFont(new Font("Open Sans",Font.PLAIN,48));
lblSnaptask.setForeground(new Color(255,255,255));
lblSnaptask.setBounds(16,0,216,58);
panel_1.add(lblSnaptask);
JPanel searchLine=new JPanel();
searchLine.setBackground(new Color(255,165,0));
searchLine.setBorder(null);
searchLine.setBounds(556,44,251,6);
searchLine.setEnabled(false);
panel_1.add(searchLine);
searchField=new JTextField();
searchField.addFocusListener(new FocusAdapter(){
@Override public void focusGained(FocusEvent e){
if (firstFocusSearchText) {
searchField.setText("");
firstFocusSearchText=false;
}
}
}
);
searchField.setFont(new Font("Open Sans",Font.PLAIN,15));
searchField.setForeground(new Color(169,169,169));
searchField.setToolTipText("Search for tasks!");
searchField.setText("Search for tasks!");
searchField.setBounds(552,15,258,36);
panel_1.add(searchField);
searchField.setColumns(10);
homeButton=new JButton("\n");
homeButton.setOpaque(true);
homeButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=0;
refreshButtons();
}
}
);
homeButton.setIcon(new ImageIcon("/Users/admin/Desktop/ListIcon.png"));
homeButton.setBorder(new EmptyBorder(0,0,0,0));
homeButton.setBackground(new Color(0,204,153));
homeButton.setBounds(237,0,66,64);
panel_1.add(homeButton);
historyButton=new JButton("\n");
historyButton.setOpaque(true);
historyButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=1;
refreshButtons();
}
}
);
historyButton.setIcon(new ImageIcon("/Users/admin/Desktop/HistoryIcon.png"));
historyButton.setBorder(new EmptyBorder(0,0,0,0));
historyButton.setBackground(new Color(0,204,153));
historyButton.setBounds(312,0,66,64);
panel_1.add(historyButton);
helpButton=new JButton("\n");
helpButton.setOpaque(true);
helpButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=2;
refreshButtons();
}
}
);
helpButton.setIcon(new ImageIcon("/Users/admin/Desktop/InfoImage.png"));
helpButton.setBorder(new EmptyBorder(0,0,0,0));
helpButton.setBackground(new Color(0,204,153));
helpButton.setBounds(391,0,66,64);
panel_1.add(helpButton);
JPanel panel=new JPanel();
panel.setBorder(new LineBorder(SystemColor.textHighlight));
panel.setBackground(new Color(255,255,255));
panel.setBounds(557,80,251,422);
frame.getContentPane().add(panel);
panel.setLayout(null);
warningBackground=new JPanel();
warningBackground.setEnabled(false);
warningBackground.setBorder(null);
warningBackground.setBackground(new Color(255,165,0));
warningBackground.setBounds(0,20,252,29);
panel.add(warningBackground);
warningBackground.setLayout(null);
txtLabelStatus=new JTextPane();
txtLabelStatus.setDisabledTextColor(SystemColor.text);
txtLabelStatus.setSelectionColor(SystemColor.activeCaption);
txtLabelStatus.setEnabled(false);
txtLabelStatus.setBounds(72,0,105,28);
txtLabelStatus.setFont(new Font("Open Sans",Font.PLAIN,20));
txtLabelStatus.setForeground(new Color(255,255,255));
txtLabelStatus.setBackground(new Color(255,165,0));
warningBackground.add(txtLabelStatus);
txtAreaDescription=new JTextPane();
txtAreaDescription.setFont(new Font("Open Sans",Font.PLAIN,14));
txtAreaDescription.setForeground(new Color(60,179,113));
txtAreaDescription.setBounds(10,232,208,159);
txtAreaDescription.setEnabled(false);
panel.add(txtAreaDescription);
txtAreaTaskDetails=new JTextArea();
txtAreaTaskDetails.setFont(new Font("Open Sans",Font.PLAIN,17));
txtAreaTaskDetails.setForeground(SystemColor.scrollbar);
txtAreaTaskDetails.setBounds(10,61,233,231);
txtAreaTaskDetails.setEnabled(false);
panel.add(txtAreaTaskDetails);
txtAreaHelp=new JTextPane();
txtAreaHelp.setForeground(new Color(102,205,170));
txtAreaHelp.setFont(new Font("Open Sans",Font.PLAIN,13));
txtAreaHelp.setBounds(30,100,499,372);
frame.getContentPane().add(txtAreaHelp);
txtAreaHelp.setText("add [NAME] || [DD/MM/YYYY] [HH:MM] [H:M]\nadd [NAME] || [DD/MM/YYYY] [HH:MM]\nadd [NAME] || [DD/MM/YYYY]\nadd [NAME]\ndelete [INDEX]\ndone [INDEX]\nedit [INDEX] name [STRING]\nedit [INDEX] duration [STRING]\nedit [INDEX] datetime [STRING]\nedit [INDEX] all [NAME] [DATE] [TIME] [DURATION]\nclear\ndisplay [INDEX]\nsearch name [STRING]\nsearch date [DD/MM/YYYY]\nundo\nhome\nhistory\nhelp\nsort [NAME/DATE/START/END/DURATION/DEFAULT]\nfilter [INCOMPLETE/COMPLETE/SHORT/MEDIUM/LONG/SOON/ALL]\n");
JPanel taskManageLine=new JPanel();
taskManageLine.setEnabled(false);
taskManageLine.setBorder(null);
taskManageLine.setBackground(new Color(255,165,0));
taskManageLine.setBounds(21,540,786,6);
taskManageLine.setEnabled(false);
frame.getContentPane().add(taskManageLine);
textFieldTaskManage=new JTextField();
textFieldTaskManage.addFocusListener(new FocusAdapter(){
@Override public void focusGained(FocusEvent e){
if (firstFocusManageText) {
textFieldTaskManage.setText("");
firstFocusManageText=false;
}
}
}
);
textFieldTaskManage.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
try {
taskManager.executeCommand(textFieldTaskManage.getText(),window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
refreshWindow();
textFieldTaskManage.setText("");
}
}
);
textFieldTaskManage.setDisabledTextColor(new Color(128,128,128));
textFieldTaskManage.setForeground(new Color(169,169,169));
textFieldTaskManage.setFont(new Font("Open Sans",Font.PLAIN,15));
textFieldTaskManage.setToolTipText("Manage your tasks here!");
textFieldTaskManage.setColumns(10);
textFieldTaskManage.setBounds(18,510,792,36);
textFieldTaskManage.setText("Manage your tasks here!");
frame.getContentPane().add(textFieldTaskManage);
refreshButtons();
}
 found.
	at org.eclipse.wb.internal.core.utils.check.Assert.fail(Assert.java:225)
	at org.eclipse.wb.internal.core.utils.check.Assert.isTrue(Assert.java:291)
	at org.eclipse.wb.core.eval.ExecutionFlowDescription.leaveStatement(ExecutionFlowDescription.java:152)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:317)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.prepareAssignmentInformation(ExecutionFlowUtils.java:784)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.getVariableCachedValue(ExecutionFlowUtils.java:753)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.getVariableCachedList_notNull(ExecutionFlowUtils.java:707)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.getReferences(ExecutionFlowUtils.java:669)
	at org.eclipse.wb.internal.core.model.variable.AbstractNamedVariableSupport.getReferences(AbstractNamedVariableSupport.java:184)
	at org.eclipse.wb.internal.core.model.variable.FieldUniqueVariableSupport.canConvertFieldToLocal(FieldUniqueVariableSupport.java:97)
	at org.eclipse.wb.internal.core.editor.structure.property.JavaPropertiesToolBarContributor.addVariableConvertAction(JavaPropertiesToolBarContributor.java:101)
	at org.eclipse.wb.internal.core.editor.structure.property.JavaPropertiesToolBarContributor.contributeToolBar(JavaPropertiesToolBarContributor.java:54)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage$2$1.run(ComponentsPropertiesPage.java:186)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runLog(ExecutionUtils.java:106)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage$2.run(ComponentsPropertiesPage.java:184)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runLog(ExecutionUtils.java:106)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage.updateActions(ComponentsPropertiesPage.java:160)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage.access$22(ComponentsPropertiesPage.java:159)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage$12.run(ComponentsPropertiesPage.java:538)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runLog(ExecutionUtils.java:106)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage.refreshProperties(ComponentsPropertiesPage.java:530)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage.setSelection(ComponentsPropertiesPage.java:321)
	at org.eclipse.wb.internal.core.editor.structure.DesignComponentsComposite$1.selectionChanged(DesignComponentsComposite.java:72)
	at org.eclipse.wb.internal.core.utils.gef.EditPartsSelectionProvider.fireSelectionChanged(EditPartsSelectionProvider.java:111)
	at org.eclipse.wb.internal.core.utils.gef.EditPartsSelectionProvider.access$0(EditPartsSelectionProvider.java:102)
	at org.eclipse.wb.internal.core.utils.gef.EditPartsSelectionProvider$1.selectionChanged(EditPartsSelectionProvider.java:40)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.fireSelectionChanged(AbstractEditPartViewer.java:202)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.setSelection(AbstractEditPartViewer.java:262)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.setSelection(AbstractEditPartViewer.java:193)
	at org.eclipse.wb.internal.gef.tree.TreeViewer$1.widgetSelected(TreeViewer.java:180)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:248)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1491)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1514)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1499)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1299)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4072)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3698)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.waitEventLoop(ExecutionUtils.java:71)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:168)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runLaterAndWait(SwingUtils.java:73)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.execRefreshOperation(ComponentInfo.java:119)
	at org.eclipse.wb.core.model.ObjectInfo.refresh(ObjectInfo.java:482)
	at org.eclipse.wb.core.model.ObjectInfo.endEdit(ObjectInfo.java:446)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:325)
	at org.eclipse.wb.core.gef.command.EditCommand.execute(EditCommand.java:50)
	at org.eclipse.wb.internal.gef.core.EditDomain.executeCommand(EditDomain.java:59)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.executeCommand(TreeDropListener.java:265)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.drop(TreeDropListener.java:103)
	at org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:91)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1491)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1514)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1499)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1299)
	at org.eclipse.swt.dnd.DropTarget.drop(DropTarget.java:728)
	at org.eclipse.swt.dnd.DropTarget.outlineView_acceptDrop_item_childIndex(DropTarget.java:746)
	at org.eclipse.swt.dnd.DropTarget.dropTargetProc(DropTarget.java:471)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.dnd.DropTarget.dndCallSuper(DropTarget.java:210)
	at org.eclipse.swt.dnd.DropTarget.performDragOperation(DropTarget.java:739)
	at org.eclipse.swt.dnd.DropTarget.dropTargetProc(DropTarget.java:456)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:227)
	at org.eclipse.swt.widgets.Widget.mouseDownSuper(Widget.java:1121)
	at org.eclipse.swt.widgets.Tree.mouseDownSuper(Tree.java:2047)
	at org.eclipse.swt.widgets.Widget.mouseDown(Widget.java:1113)
	at org.eclipse.swt.widgets.Control.mouseDown(Control.java:2569)
	at org.eclipse.swt.widgets.Tree.mouseDown(Tree.java:2015)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5692)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:227)
	at org.eclipse.swt.widgets.Widget.windowSendEvent(Widget.java:2130)
	at org.eclipse.swt.widgets.Shell.windowSendEvent(Shell.java:2337)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5756)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Display.applicationSendEvent(Display.java:5193)
	at org.eclipse.swt.widgets.Display.applicationProc(Display.java:5342)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSApplication.sendEvent(NSApplication.java:128)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3695)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:1127)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1018)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:156)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:654)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:598)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:139)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:380)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:235)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:669)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:608)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1515)

!ENTRY org.eclipse.wb.core 4 4 2016-04-08 20:17:01.379
!MESSAGE Designer [1.8.0.r45x201506110820.201604082003]: Index: 0, Size: 0
!STACK 0
java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.ArrayList.rangeCheck(ArrayList.java:635)
	at java.util.ArrayList.get(ArrayList.java:411)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.updateTargetRequestAfter(TreeDropListener.java:176)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.dragOperationChanged(TreeDropListener.java:76)
	at org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:111)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1491)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1514)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1499)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1299)
	at org.eclipse.swt.dnd.DropTarget.draggingUpdated(DropTarget.java:319)
	at org.eclipse.swt.dnd.DropTarget.dropTargetProc(DropTarget.java:452)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Display.applicationNextEventMatchingMask(Display.java:5051)
	at org.eclipse.swt.widgets.Display.applicationProc(Display.java:5432)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSApplication.nextEventMatchingMask(NSApplication.java:94)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3692)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.waitEventLoop(ExecutionUtils.java:71)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:168)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runLaterAndWait(SwingUtils.java:73)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils.disposeWindow(SwingImageUtils.java:313)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_dispose(ComponentInfo.java:125)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.refresh_dispose(ContainerInfo.java:237)
	at org.eclipse.wb.internal.core.editor.DesignPage$5.run(DesignPage.java:348)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runLog(ExecutionUtils.java:106)
	at org.eclipse.wb.internal.core.editor.DesignPage.disposeAll(DesignPage.java:346)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleDesignException(DesignPage.java:641)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$8(DesignPage.java:632)
	at org.eclipse.wb.internal.core.editor.DesignPage$9.handleException(DesignPage.java:564)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:330)
	at org.eclipse.wb.core.gef.command.EditCommand.execute(EditCommand.java:50)
	at org.eclipse.wb.internal.gef.core.EditDomain.executeCommand(EditDomain.java:59)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.executeCommand(TreeDropListener.java:265)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.drop(TreeDropListener.java:103)
	at org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:91)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1491)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1514)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1499)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1299)
	at org.eclipse.swt.dnd.DropTarget.drop(DropTarget.java:728)
	at org.eclipse.swt.dnd.DropTarget.outlineView_acceptDrop_item_childIndex(DropTarget.java:746)
	at org.eclipse.swt.dnd.DropTarget.dropTargetProc(DropTarget.java:471)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.dnd.DropTarget.dndCallSuper(DropTarget.java:210)
	at org.eclipse.swt.dnd.DropTarget.performDragOperation(DropTarget.java:739)
	at org.eclipse.swt.dnd.DropTarget.dropTargetProc(DropTarget.java:456)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:227)
	at org.eclipse.swt.widgets.Widget.mouseDownSuper(Widget.java:1121)
	at org.eclipse.swt.widgets.Tree.mouseDownSuper(Tree.java:2047)
	at org.eclipse.swt.widgets.Widget.mouseDown(Widget.java:1113)
	at org.eclipse.swt.widgets.Control.mouseDown(Control.java:2569)
	at org.eclipse.swt.widgets.Tree.mouseDown(Tree.java:2015)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5692)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:227)
	at org.eclipse.swt.widgets.Widget.windowSendEvent(Widget.java:2130)
	at org.eclipse.swt.widgets.Shell.windowSendEvent(Shell.java:2337)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5756)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Display.applicationSendEvent(Display.java:5193)
	at org.eclipse.swt.widgets.Display.applicationProc(Display.java:5342)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSApplication.sendEvent(NSApplication.java:128)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3695)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:1127)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1018)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:156)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:654)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:598)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:139)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:380)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:235)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:669)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:608)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1515)

!ENTRY org.eclipse.wb.core 4 4 2016-04-08 20:17:01.385
!MESSAGE Designer [1.8.0.r45x201506110820.201604082003]: Execution flow problem. {
  frame=new JFrame();
  frame.setBounds(100,100,828,580);
  frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
  frame.getContentPane().setLayout(null);
  JPanel panel_3=new JPanel();
  panel_3.setBorder(new LineBorder(SystemColor.textHighlight));
  panel_3.setBackground(new Color(255,255,255));
  panel_3.setBounds(20,80,516,422);
  frame.getContentPane().add(panel_3);
  panel_3.setLayout(null);
  taskList=new JList<String>();
  taskList.addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      selectedListIndex=taskList.getSelectedIndex();
      setTaskDetailView();
    }
  }
);
  taskList.setBackground(UIManager.getColor("TabbedPane.selectedTabTitlePressedColor"));
  taskList.setBorder(new EtchedBorder(EtchedBorder.LOWERED,null,null));
  taskList.setToolTipText("");
  taskList.setSelectionForeground(new Color(255,255,255));
  taskList.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
  taskList.setSelectionBackground(new Color(255,165,0));
  taskList.setForeground(new Color(255,165,0));
  taskList.setFont(new Font("Open Sans",Font.PLAIN,17));
  taskList.setModel(new AbstractListModel<String>(){
    private static final long serialVersionUID=1L;
    String[] values=taskManager.getTaskNames();
    public int getSize(){
      return values.length;
    }
    public String getElementAt(    int index){
      return values[index];
    }
  }
);
  taskList.setFixedCellHeight(25);
  taskList.setBounds(11,44,496,368);
  scrollPane=new JScrollPane();
  scrollPane.setBounds(11,44,496,368);
  scrollPane.setViewportView(taskList);
  panel_3.add(scrollPane);
  filterDropdown=new JComboBox();
  filterDropdown.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      String filterString;
switch (filterDropdown.getSelectedIndex()) {
case 0:
        filterString="filter all";
      break;
case 1:
    filterString="filter incomplete";
  break;
case 2:
filterString="filter complete";
break;
case 3:
filterString="filter short";
break;
case 4:
filterString="filter medium";
break;
case 5:
filterString="filter long";
break;
case 6:
filterString="filter soon";
break;
default :
filterString="";
break;
}
try {
taskManager.executeCommand(filterString,window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
refreshWindow();
}
}
);
filterDropdown.setBackground(new Color(255,255,255));
filterDropdown.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
filterDropdown.setForeground(new Color(60,179,113));
filterDropdown.setModel(new DefaultComboBoxModel(new String[]{"Filter by...","Incomplete Tasks","Complete Tasks","Short Tasks (<1 hour)","Medium Tasks (1 - 3 hours)","Long Tasks (3+ hours)","Tasks Ending Soon"}));
filterDropdown.setFont(new Font("Open Sans",Font.PLAIN,15));
filterDropdown.setBounds(6,6,258,36);
panel_3.add(filterDropdown);
sortDropdown=new JComboBox();
sortDropdown.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
String sortString;
switch (sortDropdown.getSelectedIndex()) {
case 0:
sortString="sort default";
break;
case 1:
sortString="sort name";
break;
case 2:
sortString="sort date";
break;
case 3:
sortString="sort start";
break;
case 4:
sortString="sort end";
break;
case 5:
sortString="sort duration";
break;
default :
sortString="";
break;
}
try {
taskManager.executeCommand(sortString,window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
}
}
);
sortDropdown.setOpaque(true);
sortDropdown.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
sortDropdown.setModel(new DefaultComboBoxModel(new String[]{"Sort By...","Name","Date","Starting Time","Ending Time","Duration"}));
sortDropdown.setForeground(new Color(60,179,113));
sortDropdown.setFont(new Font("Open Sans",Font.PLAIN,15));
sortDropdown.setBackground(Color.WHITE);
sortDropdown.setBounds(261,6,249,36);
panel_3.add(sortDropdown);
historyList=new JList();
historyList.setEnabled(false);
historyList.setForeground(new Color(60,179,113));
historyList.setFont(new Font("Open Sans",Font.PLAIN,13));
historyList.setBounds(6,6,501,406);
historyList.setModel(new AbstractListModel(){
List<String> history=taskManager.getHistoryList();
public int getSize(){
return history.size();
}
public Object getElementAt(int index){
return history.get(index);
}
}
);
panel_3.add(historyList);
table=new JTable();
table.setBounds(0,0,499,372);
panel_3.add(table);
String[] columns=new String[]{"Task Name","Task Duration","Task Date and Time","Task Completion"};
List<Task> tasks=taskManager.getTasks();
Object[][] data=new Object[taskManager.getNumberOfTasks()][4];
for (int i=0; i < taskManager.getNumberOfTasks(); i++) {
for (int j=0; j < 4; j++) {
switch (j) {
case 0:
data[i][j]=tasks.get(i).getName();
break;
case 1:
if (tasks.get(i).getDuration() != 0) {
data[i][j]=tasks.get(i).getDuration();
}
 else {
data[i][j]="N/A";
}
break;
case 2:
if (tasks.get(i).getTimeStart() != null) {
data[i][j]=tasks.get(i).getTimeStart();
}
 else {
data[i][j]="N/A";
}
break;
default :
data[i][j]=tasks.get(i).getDoneStatus();
break;
}
}
}
JPanel panel_1=new JPanel();
panel_1.setBackground(new Color(51,204,153));
panel_1.setBounds(0,0,828,64);
frame.getContentPane().add(panel_1);
panel_1.setLayout(null);
JLabel lblSnaptask=new JLabel("snaptask");
lblSnaptask.setFont(new Font("Open Sans",Font.PLAIN,48));
lblSnaptask.setForeground(new Color(255,255,255));
lblSnaptask.setBounds(16,0,216,58);
panel_1.add(lblSnaptask);
JPanel searchLine=new JPanel();
searchLine.setBackground(new Color(255,165,0));
searchLine.setBorder(null);
searchLine.setBounds(556,44,251,6);
searchLine.setEnabled(false);
panel_1.add(searchLine);
searchField=new JTextField();
searchField.addFocusListener(new FocusAdapter(){
@Override public void focusGained(FocusEvent e){
if (firstFocusSearchText) {
searchField.setText("");
firstFocusSearchText=false;
}
}
}
);
searchField.setFont(new Font("Open Sans",Font.PLAIN,15));
searchField.setForeground(new Color(169,169,169));
searchField.setToolTipText("Search for tasks!");
searchField.setText("Search for tasks!");
searchField.setBounds(552,15,258,36);
panel_1.add(searchField);
searchField.setColumns(10);
homeButton=new JButton("\n");
homeButton.setOpaque(true);
homeButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=0;
refreshButtons();
}
}
);
homeButton.setIcon(new ImageIcon("/Users/admin/Desktop/ListIcon.png"));
homeButton.setBorder(new EmptyBorder(0,0,0,0));
homeButton.setBackground(new Color(0,204,153));
homeButton.setBounds(237,0,66,64);
panel_1.add(homeButton);
historyButton=new JButton("\n");
historyButton.setOpaque(true);
historyButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=1;
refreshButtons();
}
}
);
historyButton.setIcon(new ImageIcon("/Users/admin/Desktop/HistoryIcon.png"));
historyButton.setBorder(new EmptyBorder(0,0,0,0));
historyButton.setBackground(new Color(0,204,153));
historyButton.setBounds(312,0,66,64);
panel_1.add(historyButton);
helpButton=new JButton("\n");
helpButton.setOpaque(true);
helpButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=2;
refreshButtons();
}
}
);
helpButton.setIcon(new ImageIcon("/Users/admin/Desktop/InfoImage.png"));
helpButton.setBorder(new EmptyBorder(0,0,0,0));
helpButton.setBackground(new Color(0,204,153));
helpButton.setBounds(391,0,66,64);
panel_1.add(helpButton);
JPanel panel=new JPanel();
panel.setBorder(new LineBorder(SystemColor.textHighlight));
panel.setBackground(new Color(255,255,255));
panel.setBounds(557,80,251,422);
frame.getContentPane().add(panel);
panel.setLayout(null);
warningBackground=new JPanel();
warningBackground.setEnabled(false);
warningBackground.setBorder(null);
warningBackground.setBackground(new Color(255,165,0));
warningBackground.setBounds(0,20,252,29);
panel.add(warningBackground);
warningBackground.setLayout(null);
txtLabelStatus=new JTextPane();
txtLabelStatus.setDisabledTextColor(SystemColor.text);
txtLabelStatus.setSelectionColor(SystemColor.activeCaption);
txtLabelStatus.setEnabled(false);
txtLabelStatus.setBounds(72,0,105,28);
txtLabelStatus.setFont(new Font("Open Sans",Font.PLAIN,20));
txtLabelStatus.setForeground(new Color(255,255,255));
txtLabelStatus.setBackground(new Color(255,165,0));
warningBackground.add(txtLabelStatus);
txtAreaDescription=new JTextPane();
txtAreaDescription.setFont(new Font("Open Sans",Font.PLAIN,14));
txtAreaDescription.setForeground(new Color(60,179,113));
txtAreaDescription.setBounds(10,232,208,159);
txtAreaDescription.setEnabled(false);
panel.add(txtAreaDescription);
txtAreaTaskDetails=new JTextArea();
txtAreaTaskDetails.setFont(new Font("Open Sans",Font.PLAIN,17));
txtAreaTaskDetails.setForeground(SystemColor.scrollbar);
txtAreaTaskDetails.setBounds(10,61,233,231);
txtAreaTaskDetails.setEnabled(false);
panel.add(txtAreaTaskDetails);
txtAreaHelp=new JTextPane();
txtAreaHelp.setForeground(new Color(102,205,170));
txtAreaHelp.setFont(new Font("Open Sans",Font.PLAIN,13));
txtAreaHelp.setBounds(30,100,499,372);
frame.getContentPane().add(txtAreaHelp);
txtAreaHelp.setText("add [NAME] || [DD/MM/YYYY] [HH:MM] [H:M]\nadd [NAME] || [DD/MM/YYYY] [HH:MM]\nadd [NAME] || [DD/MM/YYYY]\nadd [NAME]\ndelete [INDEX]\ndone [INDEX]\nedit [INDEX] name [STRING]\nedit [INDEX] duration [STRING]\nedit [INDEX] datetime [STRING]\nedit [INDEX] all [NAME] [DATE] [TIME] [DURATION]\nclear\ndisplay [INDEX]\nsearch name [STRING]\nsearch date [DD/MM/YYYY]\nundo\nhome\nhistory\nhelp\nsort [NAME/DATE/START/END/DURATION/DEFAULT]\nfilter [INCOMPLETE/COMPLETE/SHORT/MEDIUM/LONG/SOON/ALL]\n");
JPanel taskManageLine=new JPanel();
taskManageLine.setEnabled(false);
taskManageLine.setBorder(null);
taskManageLine.setBackground(new Color(255,165,0));
taskManageLine.setBounds(21,540,786,6);
taskManageLine.setEnabled(false);
frame.getContentPane().add(taskManageLine);
textFieldTaskManage=new JTextField();
textFieldTaskManage.addFocusListener(new FocusAdapter(){
@Override public void focusGained(FocusEvent e){
if (firstFocusManageText) {
textFieldTaskManage.setText("");
firstFocusManageText=false;
}
}
}
);
textFieldTaskManage.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
try {
taskManager.executeCommand(textFieldTaskManage.getText(),window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
refreshWindow();
textFieldTaskManage.setText("");
}
}
);
textFieldTaskManage.setDisabledTextColor(new Color(128,128,128));
textFieldTaskManage.setForeground(new Color(169,169,169));
textFieldTaskManage.setFont(new Font("Open Sans",Font.PLAIN,15));
textFieldTaskManage.setToolTipText("Manage your tasks here!");
textFieldTaskManage.setColumns(10);
textFieldTaskManage.setBounds(18,510,792,36);
textFieldTaskManage.setText("Manage your tasks here!");
frame.getContentPane().add(textFieldTaskManage);
refreshButtons();
}
 expected, but {
  initialize();
}
 found.
!STACK 0
org.eclipse.wb.internal.core.utils.check.AssertionFailedException: Execution flow problem. {
  frame=new JFrame();
  frame.setBounds(100,100,828,580);
  frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
  frame.getContentPane().setLayout(null);
  JPanel panel_3=new JPanel();
  panel_3.setBorder(new LineBorder(SystemColor.textHighlight));
  panel_3.setBackground(new Color(255,255,255));
  panel_3.setBounds(20,80,516,422);
  frame.getContentPane().add(panel_3);
  panel_3.setLayout(null);
  taskList=new JList<String>();
  taskList.addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      selectedListIndex=taskList.getSelectedIndex();
      setTaskDetailView();
    }
  }
);
  taskList.setBackground(UIManager.getColor("TabbedPane.selectedTabTitlePressedColor"));
  taskList.setBorder(new EtchedBorder(EtchedBorder.LOWERED,null,null));
  taskList.setToolTipText("");
  taskList.setSelectionForeground(new Color(255,255,255));
  taskList.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
  taskList.setSelectionBackground(new Color(255,165,0));
  taskList.setForeground(new Color(255,165,0));
  taskList.setFont(new Font("Open Sans",Font.PLAIN,17));
  taskList.setModel(new AbstractListModel<String>(){
    private static final long serialVersionUID=1L;
    String[] values=taskManager.getTaskNames();
    public int getSize(){
      return values.length;
    }
    public String getElementAt(    int index){
      return values[index];
    }
  }
);
  taskList.setFixedCellHeight(25);
  taskList.setBounds(11,44,496,368);
  scrollPane=new JScrollPane();
  scrollPane.setBounds(11,44,496,368);
  scrollPane.setViewportView(taskList);
  panel_3.add(scrollPane);
  filterDropdown=new JComboBox();
  filterDropdown.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      String filterString;
switch (filterDropdown.getSelectedIndex()) {
case 0:
        filterString="filter all";
      break;
case 1:
    filterString="filter incomplete";
  break;
case 2:
filterString="filter complete";
break;
case 3:
filterString="filter short";
break;
case 4:
filterString="filter medium";
break;
case 5:
filterString="filter long";
break;
case 6:
filterString="filter soon";
break;
default :
filterString="";
break;
}
try {
taskManager.executeCommand(filterString,window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
refreshWindow();
}
}
);
filterDropdown.setBackground(new Color(255,255,255));
filterDropdown.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
filterDropdown.setForeground(new Color(60,179,113));
filterDropdown.setModel(new DefaultComboBoxModel(new String[]{"Filter by...","Incomplete Tasks","Complete Tasks","Short Tasks (<1 hour)","Medium Tasks (1 - 3 hours)","Long Tasks (3+ hours)","Tasks Ending Soon"}));
filterDropdown.setFont(new Font("Open Sans",Font.PLAIN,15));
filterDropdown.setBounds(6,6,258,36);
panel_3.add(filterDropdown);
sortDropdown=new JComboBox();
sortDropdown.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
String sortString;
switch (sortDropdown.getSelectedIndex()) {
case 0:
sortString="sort default";
break;
case 1:
sortString="sort name";
break;
case 2:
sortString="sort date";
break;
case 3:
sortString="sort start";
break;
case 4:
sortString="sort end";
break;
case 5:
sortString="sort duration";
break;
default :
sortString="";
break;
}
try {
taskManager.executeCommand(sortString,window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
}
}
);
sortDropdown.setOpaque(true);
sortDropdown.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
sortDropdown.setModel(new DefaultComboBoxModel(new String[]{"Sort By...","Name","Date","Starting Time","Ending Time","Duration"}));
sortDropdown.setForeground(new Color(60,179,113));
sortDropdown.setFont(new Font("Open Sans",Font.PLAIN,15));
sortDropdown.setBackground(Color.WHITE);
sortDropdown.setBounds(261,6,249,36);
panel_3.add(sortDropdown);
historyList=new JList();
historyList.setEnabled(false);
historyList.setForeground(new Color(60,179,113));
historyList.setFont(new Font("Open Sans",Font.PLAIN,13));
historyList.setBounds(6,6,501,406);
historyList.setModel(new AbstractListModel(){
List<String> history=taskManager.getHistoryList();
public int getSize(){
return history.size();
}
public Object getElementAt(int index){
return history.get(index);
}
}
);
panel_3.add(historyList);
table=new JTable();
table.setBounds(0,0,499,372);
panel_3.add(table);
String[] columns=new String[]{"Task Name","Task Duration","Task Date and Time","Task Completion"};
List<Task> tasks=taskManager.getTasks();
Object[][] data=new Object[taskManager.getNumberOfTasks()][4];
for (int i=0; i < taskManager.getNumberOfTasks(); i++) {
for (int j=0; j < 4; j++) {
switch (j) {
case 0:
data[i][j]=tasks.get(i).getName();
break;
case 1:
if (tasks.get(i).getDuration() != 0) {
data[i][j]=tasks.get(i).getDuration();
}
 else {
data[i][j]="N/A";
}
break;
case 2:
if (tasks.get(i).getTimeStart() != null) {
data[i][j]=tasks.get(i).getTimeStart();
}
 else {
data[i][j]="N/A";
}
break;
default :
data[i][j]=tasks.get(i).getDoneStatus();
break;
}
}
}
JPanel panel_1=new JPanel();
panel_1.setBackground(new Color(51,204,153));
panel_1.setBounds(0,0,828,64);
frame.getContentPane().add(panel_1);
panel_1.setLayout(null);
JLabel lblSnaptask=new JLabel("snaptask");
lblSnaptask.setFont(new Font("Open Sans",Font.PLAIN,48));
lblSnaptask.setForeground(new Color(255,255,255));
lblSnaptask.setBounds(16,0,216,58);
panel_1.add(lblSnaptask);
JPanel searchLine=new JPanel();
searchLine.setBackground(new Color(255,165,0));
searchLine.setBorder(null);
searchLine.setBounds(556,44,251,6);
searchLine.setEnabled(false);
panel_1.add(searchLine);
searchField=new JTextField();
searchField.addFocusListener(new FocusAdapter(){
@Override public void focusGained(FocusEvent e){
if (firstFocusSearchText) {
searchField.setText("");
firstFocusSearchText=false;
}
}
}
);
searchField.setFont(new Font("Open Sans",Font.PLAIN,15));
searchField.setForeground(new Color(169,169,169));
searchField.setToolTipText("Search for tasks!");
searchField.setText("Search for tasks!");
searchField.setBounds(552,15,258,36);
panel_1.add(searchField);
searchField.setColumns(10);
homeButton=new JButton("\n");
homeButton.setOpaque(true);
homeButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=0;
refreshButtons();
}
}
);
homeButton.setIcon(new ImageIcon("/Users/admin/Desktop/ListIcon.png"));
homeButton.setBorder(new EmptyBorder(0,0,0,0));
homeButton.setBackground(new Color(0,204,153));
homeButton.setBounds(237,0,66,64);
panel_1.add(homeButton);
historyButton=new JButton("\n");
historyButton.setOpaque(true);
historyButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=1;
refreshButtons();
}
}
);
historyButton.setIcon(new ImageIcon("/Users/admin/Desktop/HistoryIcon.png"));
historyButton.setBorder(new EmptyBorder(0,0,0,0));
historyButton.setBackground(new Color(0,204,153));
historyButton.setBounds(312,0,66,64);
panel_1.add(historyButton);
helpButton=new JButton("\n");
helpButton.setOpaque(true);
helpButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=2;
refreshButtons();
}
}
);
helpButton.setIcon(new ImageIcon("/Users/admin/Desktop/InfoImage.png"));
helpButton.setBorder(new EmptyBorder(0,0,0,0));
helpButton.setBackground(new Color(0,204,153));
helpButton.setBounds(391,0,66,64);
panel_1.add(helpButton);
JPanel panel=new JPanel();
panel.setBorder(new LineBorder(SystemColor.textHighlight));
panel.setBackground(new Color(255,255,255));
panel.setBounds(557,80,251,422);
frame.getContentPane().add(panel);
panel.setLayout(null);
warningBackground=new JPanel();
warningBackground.setEnabled(false);
warningBackground.setBorder(null);
warningBackground.setBackground(new Color(255,165,0));
warningBackground.setBounds(0,20,252,29);
panel.add(warningBackground);
warningBackground.setLayout(null);
txtLabelStatus=new JTextPane();
txtLabelStatus.setDisabledTextColor(SystemColor.text);
txtLabelStatus.setSelectionColor(SystemColor.activeCaption);
txtLabelStatus.setEnabled(false);
txtLabelStatus.setBounds(72,0,105,28);
txtLabelStatus.setFont(new Font("Open Sans",Font.PLAIN,20));
txtLabelStatus.setForeground(new Color(255,255,255));
txtLabelStatus.setBackground(new Color(255,165,0));
warningBackground.add(txtLabelStatus);
txtAreaDescription=new JTextPane();
txtAreaDescription.setFont(new Font("Open Sans",Font.PLAIN,14));
txtAreaDescription.setForeground(new Color(60,179,113));
txtAreaDescription.setBounds(10,232,208,159);
txtAreaDescription.setEnabled(false);
panel.add(txtAreaDescription);
txtAreaTaskDetails=new JTextArea();
txtAreaTaskDetails.setFont(new Font("Open Sans",Font.PLAIN,17));
txtAreaTaskDetails.setForeground(SystemColor.scrollbar);
txtAreaTaskDetails.setBounds(10,61,233,231);
txtAreaTaskDetails.setEnabled(false);
panel.add(txtAreaTaskDetails);
txtAreaHelp=new JTextPane();
txtAreaHelp.setForeground(new Color(102,205,170));
txtAreaHelp.setFont(new Font("Open Sans",Font.PLAIN,13));
txtAreaHelp.setBounds(30,100,499,372);
frame.getContentPane().add(txtAreaHelp);
txtAreaHelp.setText("add [NAME] || [DD/MM/YYYY] [HH:MM] [H:M]\nadd [NAME] || [DD/MM/YYYY] [HH:MM]\nadd [NAME] || [DD/MM/YYYY]\nadd [NAME]\ndelete [INDEX]\ndone [INDEX]\nedit [INDEX] name [STRING]\nedit [INDEX] duration [STRING]\nedit [INDEX] datetime [STRING]\nedit [INDEX] all [NAME] [DATE] [TIME] [DURATION]\nclear\ndisplay [INDEX]\nsearch name [STRING]\nsearch date [DD/MM/YYYY]\nundo\nhome\nhistory\nhelp\nsort [NAME/DATE/START/END/DURATION/DEFAULT]\nfilter [INCOMPLETE/COMPLETE/SHORT/MEDIUM/LONG/SOON/ALL]\n");
JPanel taskManageLine=new JPanel();
taskManageLine.setEnabled(false);
taskManageLine.setBorder(null);
taskManageLine.setBackground(new Color(255,165,0));
taskManageLine.setBounds(21,540,786,6);
taskManageLine.setEnabled(false);
frame.getContentPane().add(taskManageLine);
textFieldTaskManage=new JTextField();
textFieldTaskManage.addFocusListener(new FocusAdapter(){
@Override public void focusGained(FocusEvent e){
if (firstFocusManageText) {
textFieldTaskManage.setText("");
firstFocusManageText=false;
}
}
}
);
textFieldTaskManage.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
try {
taskManager.executeCommand(textFieldTaskManage.getText(),window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
refreshWindow();
textFieldTaskManage.setText("");
}
}
);
textFieldTaskManage.setDisabledTextColor(new Color(128,128,128));
textFieldTaskManage.setForeground(new Color(169,169,169));
textFieldTaskManage.setFont(new Font("Open Sans",Font.PLAIN,15));
textFieldTaskManage.setToolTipText("Manage your tasks here!");
textFieldTaskManage.setColumns(10);
textFieldTaskManage.setBounds(18,510,792,36);
textFieldTaskManage.setText("Manage your tasks here!");
frame.getContentPane().add(textFieldTaskManage);
refreshButtons();
}
 expected, but {
  initialize();
}
 found.
	at org.eclipse.wb.internal.core.utils.check.Assert.fail(Assert.java:225)
	at org.eclipse.wb.internal.core.utils.check.Assert.isTrue(Assert.java:291)
	at org.eclipse.wb.core.eval.ExecutionFlowDescription.leaveStatement(ExecutionFlowDescription.java:152)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:317)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.access$1(ExecutionFlowUtils.java:235)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:442)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:391)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$28c57345.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:241)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2759)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:145)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:421)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:389)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$28c57345.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:316)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2759)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:263)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2782)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:267)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2782)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:137)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2759)
	at org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:250)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2782)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:137)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2759)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:635)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2782)
	at org.eclipse.jdt.core.dom.AnonymousClassDeclaration.accept0(AnonymousClassDeclaration.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2759)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:314)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2782)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:239)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2759)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:145)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.core.model.JavaInfo.refresh_create(JavaInfo.java:1199)
	at org.eclipse.wb.core.model.ObjectInfo.refreshCreate0(ObjectInfo.java:550)
	at org.eclipse.wb.core.model.ObjectInfo.access$0(ObjectInfo.java:546)
	at org.eclipse.wb.core.model.ObjectInfo$5$1.run(ObjectInfo.java:486)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:145)
	at org.eclipse.wb.core.model.ObjectInfo$5.run(ObjectInfo.java:484)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$2.run(SwingUtils.java:76)
	at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:312)
	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:745)
	at java.awt.EventQueue.access$300(EventQueue.java:103)
	at java.awt.EventQueue$3.run(EventQueue.java:706)
	at java.awt.EventQueue$3.run(EventQueue.java:704)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.awt.EventQueue.dispatchEvent(EventQueue.java:715)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:242)
	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:161)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:150)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:146)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:138)
	at java.awt.EventDispatchThread.run(EventDispatchThread.java:91)

!ENTRY org.eclipse.ui 4 0 2016-04-08 20:17:01.738
!MESSAGE Unhandled event loop exception
!STACK 0
org.eclipse.core.runtime.AssertionFailedException: null argument:
	at org.eclipse.core.runtime.Assert.isNotNull(Assert.java:85)
	at org.eclipse.core.runtime.Assert.isNotNull(Assert.java:73)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.setSelection(AbstractEditPartViewer.java:249)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.resetSelectionFromModels(TreeDropListener.java:141)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.drop(TreeDropListener.java:107)
	at org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:91)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1491)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1514)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1499)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1299)
	at org.eclipse.swt.dnd.DropTarget.drop(DropTarget.java:728)
	at org.eclipse.swt.dnd.DropTarget.outlineView_acceptDrop_item_childIndex(DropTarget.java:746)
	at org.eclipse.swt.dnd.DropTarget.dropTargetProc(DropTarget.java:471)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.dnd.DropTarget.dndCallSuper(DropTarget.java:210)
	at org.eclipse.swt.dnd.DropTarget.performDragOperation(DropTarget.java:739)
	at org.eclipse.swt.dnd.DropTarget.dropTargetProc(DropTarget.java:456)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:227)
	at org.eclipse.swt.widgets.Widget.mouseDownSuper(Widget.java:1121)
	at org.eclipse.swt.widgets.Tree.mouseDownSuper(Tree.java:2047)
	at org.eclipse.swt.widgets.Widget.mouseDown(Widget.java:1113)
	at org.eclipse.swt.widgets.Control.mouseDown(Control.java:2569)
	at org.eclipse.swt.widgets.Tree.mouseDown(Tree.java:2015)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5692)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:227)
	at org.eclipse.swt.widgets.Widget.windowSendEvent(Widget.java:2130)
	at org.eclipse.swt.widgets.Shell.windowSendEvent(Shell.java:2337)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5756)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Display.applicationSendEvent(Display.java:5193)
	at org.eclipse.swt.widgets.Display.applicationProc(Display.java:5342)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSApplication.sendEvent(NSApplication.java:128)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3695)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:1127)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1018)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:156)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:654)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:598)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:139)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:380)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:235)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:669)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:608)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1515)

!ENTRY org.eclipse.wb.core 4 4 2016-04-08 20:19:01.667
!MESSAGE Designer [1.8.0.r45x201506110820.201604082003]: Execution flow problem. {
  EventQueue.invokeLater(new Runnable(){
    public void run(){
      try {
        taskManager=TaskManager.getInstance();
        ApplicationWindow window=new ApplicationWindow();
        window.frame.setVisible(true);
        window.frame.setResizable(false);
      }
 catch (      Exception e) {
        e.printStackTrace();
      }
    }
  }
);
}
 expected, but {
  frame=new JFrame();
  frame.setBounds(100,100,828,580);
  frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
  frame.getContentPane().setLayout(null);
  JPanel panel_3=new JPanel();
  panel_3.setBorder(new LineBorder(SystemColor.textHighlight));
  panel_3.setBackground(new Color(255,255,255));
  panel_3.setBounds(20,80,516,422);
  frame.getContentPane().add(panel_3);
  panel_3.setLayout(null);
  taskList=new JList<String>();
  taskList.addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      selectedListIndex=taskList.getSelectedIndex();
      setTaskDetailView();
    }
  }
);
  taskList.setBackground(UIManager.getColor("TabbedPane.selectedTabTitlePressedColor"));
  taskList.setBorder(new EtchedBorder(EtchedBorder.LOWERED,null,null));
  taskList.setToolTipText("");
  taskList.setSelectionForeground(new Color(255,255,255));
  taskList.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
  taskList.setSelectionBackground(new Color(255,165,0));
  taskList.setForeground(new Color(255,165,0));
  taskList.setFont(new Font("Open Sans",Font.PLAIN,17));
  taskList.setModel(new AbstractListModel<String>(){
    private static final long serialVersionUID=1L;
    String[] values=taskManager.getTaskNames();
    public int getSize(){
      return values.length;
    }
    public String getElementAt(    int index){
      return values[index];
    }
  }
);
  taskList.setFixedCellHeight(25);
  taskList.setBounds(11,44,496,368);
  scrollPane=new JScrollPane();
  scrollPane.setBounds(11,44,496,368);
  scrollPane.setViewportView(taskList);
  panel_3.add(scrollPane);
  filterDropdown=new JComboBox();
  filterDropdown.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      String filterString;
switch (filterDropdown.getSelectedIndex()) {
case 0:
        filterString="filter all";
      break;
case 1:
    filterString="filter incomplete";
  break;
case 2:
filterString="filter complete";
break;
case 3:
filterString="filter short";
break;
case 4:
filterString="filter medium";
break;
case 5:
filterString="filter long";
break;
case 6:
filterString="filter soon";
break;
default :
filterString="";
break;
}
try {
taskManager.executeCommand(filterString,window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
refreshWindow();
}
}
);
filterDropdown.setBackground(new Color(255,255,255));
filterDropdown.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
filterDropdown.setForeground(new Color(60,179,113));
filterDropdown.setModel(new DefaultComboBoxModel(new String[]{"Filter by...","Incomplete Tasks","Complete Tasks","Short Tasks (<1 hour)","Medium Tasks (1 - 3 hours)","Long Tasks (3+ hours)","Tasks Ending Soon"}));
filterDropdown.setFont(new Font("Open Sans",Font.PLAIN,15));
filterDropdown.setBounds(6,6,258,36);
panel_3.add(filterDropdown);
sortDropdown=new JComboBox();
sortDropdown.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
String sortString;
switch (sortDropdown.getSelectedIndex()) {
case 0:
sortString="sort default";
break;
case 1:
sortString="sort name";
break;
case 2:
sortString="sort date";
break;
case 3:
sortString="sort start";
break;
case 4:
sortString="sort end";
break;
case 5:
sortString="sort duration";
break;
default :
sortString="";
break;
}
try {
taskManager.executeCommand(sortString,window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
}
}
);
sortDropdown.setOpaque(true);
sortDropdown.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
sortDropdown.setModel(new DefaultComboBoxModel(new String[]{"Sort By...","Name","Date","Starting Time","Ending Time","Duration"}));
sortDropdown.setForeground(new Color(60,179,113));
sortDropdown.setFont(new Font("Open Sans",Font.PLAIN,15));
sortDropdown.setBackground(Color.WHITE);
sortDropdown.setBounds(261,6,249,36);
panel_3.add(sortDropdown);
historyList=new JList();
historyList.setEnabled(false);
historyList.setForeground(new Color(60,179,113));
historyList.setFont(new Font("Open Sans",Font.PLAIN,13));
historyList.setBounds(6,6,501,406);
historyList.setModel(new AbstractListModel(){
List<String> history=taskManager.getHistoryList();
public int getSize(){
return history.size();
}
public Object getElementAt(int index){
return history.get(index);
}
}
);
panel_3.add(historyList);
table=new JTable(data,columns);
table.setBounds(0,0,499,372);
panel_3.add(table);
String[] columns=new String[]{"Task Name","Task Duration","Task Date and Time","Task Completion"};
List<Task> tasks=taskManager.getTasks();
Object[][] data=new Object[taskManager.getNumberOfTasks()][4];
for (int i=0; i < taskManager.getNumberOfTasks(); i++) {
for (int j=0; j < 4; j++) {
switch (j) {
case 0:
data[i][j]=tasks.get(i).getName();
break;
case 1:
if (tasks.get(i).getDuration() != 0) {
data[i][j]=tasks.get(i).getDuration();
}
 else {
data[i][j]="N/A";
}
break;
case 2:
if (tasks.get(i).getTimeStart() != null) {
data[i][j]=tasks.get(i).getTimeStart();
}
 else {
data[i][j]="N/A";
}
break;
default :
data[i][j]=tasks.get(i).getDoneStatus();
break;
}
}
}
JPanel panel_1=new JPanel();
panel_1.setBackground(new Color(51,204,153));
panel_1.setBounds(0,0,828,64);
frame.getContentPane().add(panel_1);
panel_1.setLayout(null);
JLabel lblSnaptask=new JLabel("snaptask");
lblSnaptask.setFont(new Font("Open Sans",Font.PLAIN,48));
lblSnaptask.setForeground(new Color(255,255,255));
lblSnaptask.setBounds(16,0,216,58);
panel_1.add(lblSnaptask);
JPanel searchLine=new JPanel();
searchLine.setBackground(new Color(255,165,0));
searchLine.setBorder(null);
searchLine.setBounds(556,44,251,6);
searchLine.setEnabled(false);
panel_1.add(searchLine);
searchField=new JTextField();
searchField.addFocusListener(new FocusAdapter(){
@Override public void focusGained(FocusEvent e){
if (firstFocusSearchText) {
searchField.setText("");
firstFocusSearchText=false;
}
}
}
);
searchField.setFont(new Font("Open Sans",Font.PLAIN,15));
searchField.setForeground(new Color(169,169,169));
searchField.setToolTipText("Search for tasks!");
searchField.setText("Search for tasks!");
searchField.setBounds(552,15,258,36);
panel_1.add(searchField);
searchField.setColumns(10);
homeButton=new JButton("\n");
homeButton.setOpaque(true);
homeButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=0;
refreshButtons();
}
}
);
homeButton.setIcon(new ImageIcon("/Users/admin/Desktop/ListIcon.png"));
homeButton.setBorder(new EmptyBorder(0,0,0,0));
homeButton.setBackground(new Color(0,204,153));
homeButton.setBounds(237,0,66,64);
panel_1.add(homeButton);
historyButton=new JButton("\n");
historyButton.setOpaque(true);
historyButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=1;
refreshButtons();
}
}
);
historyButton.setIcon(new ImageIcon("/Users/admin/Desktop/HistoryIcon.png"));
historyButton.setBorder(new EmptyBorder(0,0,0,0));
historyButton.setBackground(new Color(0,204,153));
historyButton.setBounds(312,0,66,64);
panel_1.add(historyButton);
helpButton=new JButton("\n");
helpButton.setOpaque(true);
helpButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=2;
refreshButtons();
}
}
);
helpButton.setIcon(new ImageIcon("/Users/admin/Desktop/InfoImage.png"));
helpButton.setBorder(new EmptyBorder(0,0,0,0));
helpButton.setBackground(new Color(0,204,153));
helpButton.setBounds(391,0,66,64);
panel_1.add(helpButton);
JPanel panel=new JPanel();
panel.setBorder(new LineBorder(SystemColor.textHighlight));
panel.setBackground(new Color(255,255,255));
panel.setBounds(557,80,251,422);
frame.getContentPane().add(panel);
panel.setLayout(null);
warningBackground=new JPanel();
warningBackground.setEnabled(false);
warningBackground.setBorder(null);
warningBackground.setBackground(new Color(255,165,0));
warningBackground.setBounds(0,20,252,29);
panel.add(warningBackground);
warningBackground.setLayout(null);
txtLabelStatus=new JTextPane();
txtLabelStatus.setDisabledTextColor(SystemColor.text);
txtLabelStatus.setSelectionColor(SystemColor.activeCaption);
txtLabelStatus.setEnabled(false);
txtLabelStatus.setBounds(72,0,105,28);
txtLabelStatus.setFont(new Font("Open Sans",Font.PLAIN,20));
txtLabelStatus.setForeground(new Color(255,255,255));
txtLabelStatus.setBackground(new Color(255,165,0));
warningBackground.add(txtLabelStatus);
txtAreaDescription=new JTextPane();
txtAreaDescription.setFont(new Font("Open Sans",Font.PLAIN,14));
txtAreaDescription.setForeground(new Color(60,179,113));
txtAreaDescription.setBounds(10,232,208,159);
txtAreaDescription.setEnabled(false);
panel.add(txtAreaDescription);
txtAreaTaskDetails=new JTextArea();
txtAreaTaskDetails.setFont(new Font("Open Sans",Font.PLAIN,17));
txtAreaTaskDetails.setForeground(SystemColor.scrollbar);
txtAreaTaskDetails.setBounds(10,61,233,231);
txtAreaTaskDetails.setEnabled(false);
panel.add(txtAreaTaskDetails);
txtAreaHelp=new JTextPane();
txtAreaHelp.setForeground(new Color(102,205,170));
txtAreaHelp.setFont(new Font("Open Sans",Font.PLAIN,13));
txtAreaHelp.setBounds(30,100,499,372);
frame.getContentPane().add(txtAreaHelp);
txtAreaHelp.setText("add [NAME] || [DD/MM/YYYY] [HH:MM] [H:M]\nadd [NAME] || [DD/MM/YYYY] [HH:MM]\nadd [NAME] || [DD/MM/YYYY]\nadd [NAME]\ndelete [INDEX]\ndone [INDEX]\nedit [INDEX] name [STRING]\nedit [INDEX] duration [STRING]\nedit [INDEX] datetime [STRING]\nedit [INDEX] all [NAME] [DATE] [TIME] [DURATION]\nclear\ndisplay [INDEX]\nsearch name [STRING]\nsearch date [DD/MM/YYYY]\nundo\nhome\nhistory\nhelp\nsort [NAME/DATE/START/END/DURATION/DEFAULT]\nfilter [INCOMPLETE/COMPLETE/SHORT/MEDIUM/LONG/SOON/ALL]\n");
JPanel taskManageLine=new JPanel();
taskManageLine.setEnabled(false);
taskManageLine.setBorder(null);
taskManageLine.setBackground(new Color(255,165,0));
taskManageLine.setBounds(21,540,786,6);
taskManageLine.setEnabled(false);
frame.getContentPane().add(taskManageLine);
textFieldTaskManage=new JTextField();
textFieldTaskManage.addFocusListener(new FocusAdapter(){
@Override public void focusGained(FocusEvent e){
if (firstFocusManageText) {
textFieldTaskManage.setText("");
firstFocusManageText=false;
}
}
}
);
textFieldTaskManage.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
try {
taskManager.executeCommand(textFieldTaskManage.getText(),window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
refreshWindow();
textFieldTaskManage.setText("");
}
}
);
textFieldTaskManage.setDisabledTextColor(new Color(128,128,128));
textFieldTaskManage.setForeground(new Color(169,169,169));
textFieldTaskManage.setFont(new Font("Open Sans",Font.PLAIN,15));
textFieldTaskManage.setToolTipText("Manage your tasks here!");
textFieldTaskManage.setColumns(10);
textFieldTaskManage.setBounds(18,510,792,36);
textFieldTaskManage.setText("Manage your tasks here!");
frame.getContentPane().add(textFieldTaskManage);
refreshButtons();
}
 found.
!STACK 0
org.eclipse.wb.internal.core.utils.check.AssertionFailedException: Execution flow problem. {
  EventQueue.invokeLater(new Runnable(){
    public void run(){
      try {
        taskManager=TaskManager.getInstance();
        ApplicationWindow window=new ApplicationWindow();
        window.frame.setVisible(true);
        window.frame.setResizable(false);
      }
 catch (      Exception e) {
        e.printStackTrace();
      }
    }
  }
);
}
 expected, but {
  frame=new JFrame();
  frame.setBounds(100,100,828,580);
  frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
  frame.getContentPane().setLayout(null);
  JPanel panel_3=new JPanel();
  panel_3.setBorder(new LineBorder(SystemColor.textHighlight));
  panel_3.setBackground(new Color(255,255,255));
  panel_3.setBounds(20,80,516,422);
  frame.getContentPane().add(panel_3);
  panel_3.setLayout(null);
  taskList=new JList<String>();
  taskList.addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      selectedListIndex=taskList.getSelectedIndex();
      setTaskDetailView();
    }
  }
);
  taskList.setBackground(UIManager.getColor("TabbedPane.selectedTabTitlePressedColor"));
  taskList.setBorder(new EtchedBorder(EtchedBorder.LOWERED,null,null));
  taskList.setToolTipText("");
  taskList.setSelectionForeground(new Color(255,255,255));
  taskList.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
  taskList.setSelectionBackground(new Color(255,165,0));
  taskList.setForeground(new Color(255,165,0));
  taskList.setFont(new Font("Open Sans",Font.PLAIN,17));
  taskList.setModel(new AbstractListModel<String>(){
    private static final long serialVersionUID=1L;
    String[] values=taskManager.getTaskNames();
    public int getSize(){
      return values.length;
    }
    public String getElementAt(    int index){
      return values[index];
    }
  }
);
  taskList.setFixedCellHeight(25);
  taskList.setBounds(11,44,496,368);
  scrollPane=new JScrollPane();
  scrollPane.setBounds(11,44,496,368);
  scrollPane.setViewportView(taskList);
  panel_3.add(scrollPane);
  filterDropdown=new JComboBox();
  filterDropdown.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      String filterString;
switch (filterDropdown.getSelectedIndex()) {
case 0:
        filterString="filter all";
      break;
case 1:
    filterString="filter incomplete";
  break;
case 2:
filterString="filter complete";
break;
case 3:
filterString="filter short";
break;
case 4:
filterString="filter medium";
break;
case 5:
filterString="filter long";
break;
case 6:
filterString="filter soon";
break;
default :
filterString="";
break;
}
try {
taskManager.executeCommand(filterString,window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
refreshWindow();
}
}
);
filterDropdown.setBackground(new Color(255,255,255));
filterDropdown.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
filterDropdown.setForeground(new Color(60,179,113));
filterDropdown.setModel(new DefaultComboBoxModel(new String[]{"Filter by...","Incomplete Tasks","Complete Tasks","Short Tasks (<1 hour)","Medium Tasks (1 - 3 hours)","Long Tasks (3+ hours)","Tasks Ending Soon"}));
filterDropdown.setFont(new Font("Open Sans",Font.PLAIN,15));
filterDropdown.setBounds(6,6,258,36);
panel_3.add(filterDropdown);
sortDropdown=new JComboBox();
sortDropdown.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
String sortString;
switch (sortDropdown.getSelectedIndex()) {
case 0:
sortString="sort default";
break;
case 1:
sortString="sort name";
break;
case 2:
sortString="sort date";
break;
case 3:
sortString="sort start";
break;
case 4:
sortString="sort end";
break;
case 5:
sortString="sort duration";
break;
default :
sortString="";
break;
}
try {
taskManager.executeCommand(sortString,window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
}
}
);
sortDropdown.setOpaque(true);
sortDropdown.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
sortDropdown.setModel(new DefaultComboBoxModel(new String[]{"Sort By...","Name","Date","Starting Time","Ending Time","Duration"}));
sortDropdown.setForeground(new Color(60,179,113));
sortDropdown.setFont(new Font("Open Sans",Font.PLAIN,15));
sortDropdown.setBackground(Color.WHITE);
sortDropdown.setBounds(261,6,249,36);
panel_3.add(sortDropdown);
historyList=new JList();
historyList.setEnabled(false);
historyList.setForeground(new Color(60,179,113));
historyList.setFont(new Font("Open Sans",Font.PLAIN,13));
historyList.setBounds(6,6,501,406);
historyList.setModel(new AbstractListModel(){
List<String> history=taskManager.getHistoryList();
public int getSize(){
return history.size();
}
public Object getElementAt(int index){
return history.get(index);
}
}
);
panel_3.add(historyList);
table=new JTable(data,columns);
table.setBounds(0,0,499,372);
panel_3.add(table);
String[] columns=new String[]{"Task Name","Task Duration","Task Date and Time","Task Completion"};
List<Task> tasks=taskManager.getTasks();
Object[][] data=new Object[taskManager.getNumberOfTasks()][4];
for (int i=0; i < taskManager.getNumberOfTasks(); i++) {
for (int j=0; j < 4; j++) {
switch (j) {
case 0:
data[i][j]=tasks.get(i).getName();
break;
case 1:
if (tasks.get(i).getDuration() != 0) {
data[i][j]=tasks.get(i).getDuration();
}
 else {
data[i][j]="N/A";
}
break;
case 2:
if (tasks.get(i).getTimeStart() != null) {
data[i][j]=tasks.get(i).getTimeStart();
}
 else {
data[i][j]="N/A";
}
break;
default :
data[i][j]=tasks.get(i).getDoneStatus();
break;
}
}
}
JPanel panel_1=new JPanel();
panel_1.setBackground(new Color(51,204,153));
panel_1.setBounds(0,0,828,64);
frame.getContentPane().add(panel_1);
panel_1.setLayout(null);
JLabel lblSnaptask=new JLabel("snaptask");
lblSnaptask.setFont(new Font("Open Sans",Font.PLAIN,48));
lblSnaptask.setForeground(new Color(255,255,255));
lblSnaptask.setBounds(16,0,216,58);
panel_1.add(lblSnaptask);
JPanel searchLine=new JPanel();
searchLine.setBackground(new Color(255,165,0));
searchLine.setBorder(null);
searchLine.setBounds(556,44,251,6);
searchLine.setEnabled(false);
panel_1.add(searchLine);
searchField=new JTextField();
searchField.addFocusListener(new FocusAdapter(){
@Override public void focusGained(FocusEvent e){
if (firstFocusSearchText) {
searchField.setText("");
firstFocusSearchText=false;
}
}
}
);
searchField.setFont(new Font("Open Sans",Font.PLAIN,15));
searchField.setForeground(new Color(169,169,169));
searchField.setToolTipText("Search for tasks!");
searchField.setText("Search for tasks!");
searchField.setBounds(552,15,258,36);
panel_1.add(searchField);
searchField.setColumns(10);
homeButton=new JButton("\n");
homeButton.setOpaque(true);
homeButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=0;
refreshButtons();
}
}
);
homeButton.setIcon(new ImageIcon("/Users/admin/Desktop/ListIcon.png"));
homeButton.setBorder(new EmptyBorder(0,0,0,0));
homeButton.setBackground(new Color(0,204,153));
homeButton.setBounds(237,0,66,64);
panel_1.add(homeButton);
historyButton=new JButton("\n");
historyButton.setOpaque(true);
historyButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=1;
refreshButtons();
}
}
);
historyButton.setIcon(new ImageIcon("/Users/admin/Desktop/HistoryIcon.png"));
historyButton.setBorder(new EmptyBorder(0,0,0,0));
historyButton.setBackground(new Color(0,204,153));
historyButton.setBounds(312,0,66,64);
panel_1.add(historyButton);
helpButton=new JButton("\n");
helpButton.setOpaque(true);
helpButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=2;
refreshButtons();
}
}
);
helpButton.setIcon(new ImageIcon("/Users/admin/Desktop/InfoImage.png"));
helpButton.setBorder(new EmptyBorder(0,0,0,0));
helpButton.setBackground(new Color(0,204,153));
helpButton.setBounds(391,0,66,64);
panel_1.add(helpButton);
JPanel panel=new JPanel();
panel.setBorder(new LineBorder(SystemColor.textHighlight));
panel.setBackground(new Color(255,255,255));
panel.setBounds(557,80,251,422);
frame.getContentPane().add(panel);
panel.setLayout(null);
warningBackground=new JPanel();
warningBackground.setEnabled(false);
warningBackground.setBorder(null);
warningBackground.setBackground(new Color(255,165,0));
warningBackground.setBounds(0,20,252,29);
panel.add(warningBackground);
warningBackground.setLayout(null);
txtLabelStatus=new JTextPane();
txtLabelStatus.setDisabledTextColor(SystemColor.text);
txtLabelStatus.setSelectionColor(SystemColor.activeCaption);
txtLabelStatus.setEnabled(false);
txtLabelStatus.setBounds(72,0,105,28);
txtLabelStatus.setFont(new Font("Open Sans",Font.PLAIN,20));
txtLabelStatus.setForeground(new Color(255,255,255));
txtLabelStatus.setBackground(new Color(255,165,0));
warningBackground.add(txtLabelStatus);
txtAreaDescription=new JTextPane();
txtAreaDescription.setFont(new Font("Open Sans",Font.PLAIN,14));
txtAreaDescription.setForeground(new Color(60,179,113));
txtAreaDescription.setBounds(10,232,208,159);
txtAreaDescription.setEnabled(false);
panel.add(txtAreaDescription);
txtAreaTaskDetails=new JTextArea();
txtAreaTaskDetails.setFont(new Font("Open Sans",Font.PLAIN,17));
txtAreaTaskDetails.setForeground(SystemColor.scrollbar);
txtAreaTaskDetails.setBounds(10,61,233,231);
txtAreaTaskDetails.setEnabled(false);
panel.add(txtAreaTaskDetails);
txtAreaHelp=new JTextPane();
txtAreaHelp.setForeground(new Color(102,205,170));
txtAreaHelp.setFont(new Font("Open Sans",Font.PLAIN,13));
txtAreaHelp.setBounds(30,100,499,372);
frame.getContentPane().add(txtAreaHelp);
txtAreaHelp.setText("add [NAME] || [DD/MM/YYYY] [HH:MM] [H:M]\nadd [NAME] || [DD/MM/YYYY] [HH:MM]\nadd [NAME] || [DD/MM/YYYY]\nadd [NAME]\ndelete [INDEX]\ndone [INDEX]\nedit [INDEX] name [STRING]\nedit [INDEX] duration [STRING]\nedit [INDEX] datetime [STRING]\nedit [INDEX] all [NAME] [DATE] [TIME] [DURATION]\nclear\ndisplay [INDEX]\nsearch name [STRING]\nsearch date [DD/MM/YYYY]\nundo\nhome\nhistory\nhelp\nsort [NAME/DATE/START/END/DURATION/DEFAULT]\nfilter [INCOMPLETE/COMPLETE/SHORT/MEDIUM/LONG/SOON/ALL]\n");
JPanel taskManageLine=new JPanel();
taskManageLine.setEnabled(false);
taskManageLine.setBorder(null);
taskManageLine.setBackground(new Color(255,165,0));
taskManageLine.setBounds(21,540,786,6);
taskManageLine.setEnabled(false);
frame.getContentPane().add(taskManageLine);
textFieldTaskManage=new JTextField();
textFieldTaskManage.addFocusListener(new FocusAdapter(){
@Override public void focusGained(FocusEvent e){
if (firstFocusManageText) {
textFieldTaskManage.setText("");
firstFocusManageText=false;
}
}
}
);
textFieldTaskManage.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
try {
taskManager.executeCommand(textFieldTaskManage.getText(),window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
refreshWindow();
textFieldTaskManage.setText("");
}
}
);
textFieldTaskManage.setDisabledTextColor(new Color(128,128,128));
textFieldTaskManage.setForeground(new Color(169,169,169));
textFieldTaskManage.setFont(new Font("Open Sans",Font.PLAIN,15));
textFieldTaskManage.setToolTipText("Manage your tasks here!");
textFieldTaskManage.setColumns(10);
textFieldTaskManage.setBounds(18,510,792,36);
textFieldTaskManage.setText("Manage your tasks here!");
frame.getContentPane().add(textFieldTaskManage);
refreshButtons();
}
 found.
	at org.eclipse.wb.internal.core.utils.check.Assert.fail(Assert.java:225)
	at org.eclipse.wb.internal.core.utils.check.Assert.isTrue(Assert.java:291)
	at org.eclipse.wb.core.eval.ExecutionFlowDescription.leaveStatement(ExecutionFlowDescription.java:152)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:317)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.prepareAssignmentInformation(ExecutionFlowUtils.java:784)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.getVariableCachedValue(ExecutionFlowUtils.java:753)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.getVariableCachedList_notNull(ExecutionFlowUtils.java:707)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.getReferences(ExecutionFlowUtils.java:669)
	at org.eclipse.wb.internal.core.model.variable.AbstractNamedVariableSupport.getReferences(AbstractNamedVariableSupport.java:184)
	at org.eclipse.wb.internal.core.model.variable.FieldUniqueVariableSupport.canConvertFieldToLocal(FieldUniqueVariableSupport.java:97)
	at org.eclipse.wb.internal.core.editor.structure.property.JavaPropertiesToolBarContributor.addVariableConvertAction(JavaPropertiesToolBarContributor.java:101)
	at org.eclipse.wb.internal.core.editor.structure.property.JavaPropertiesToolBarContributor.contributeToolBar(JavaPropertiesToolBarContributor.java:54)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage$2$1.run(ComponentsPropertiesPage.java:186)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runLog(ExecutionUtils.java:106)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage$2.run(ComponentsPropertiesPage.java:184)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runLog(ExecutionUtils.java:106)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage.updateActions(ComponentsPropertiesPage.java:160)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage.access$22(ComponentsPropertiesPage.java:159)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage$12.run(ComponentsPropertiesPage.java:538)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runLog(ExecutionUtils.java:106)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage.refreshProperties(ComponentsPropertiesPage.java:530)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage.setSelection(ComponentsPropertiesPage.java:321)
	at org.eclipse.wb.internal.core.editor.structure.DesignComponentsComposite$1.selectionChanged(DesignComponentsComposite.java:72)
	at org.eclipse.wb.internal.core.utils.gef.EditPartsSelectionProvider.fireSelectionChanged(EditPartsSelectionProvider.java:111)
	at org.eclipse.wb.internal.core.utils.gef.EditPartsSelectionProvider.access$0(EditPartsSelectionProvider.java:102)
	at org.eclipse.wb.internal.core.utils.gef.EditPartsSelectionProvider$1.selectionChanged(EditPartsSelectionProvider.java:40)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.fireSelectionChanged(AbstractEditPartViewer.java:202)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.setSelection(AbstractEditPartViewer.java:262)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.setSelection(AbstractEditPartViewer.java:193)
	at org.eclipse.wb.internal.gef.tree.TreeViewer$1.widgetSelected(TreeViewer.java:180)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:248)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1491)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1514)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1499)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1299)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4072)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3698)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.waitEventLoop(ExecutionUtils.java:71)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:168)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runLaterAndWait(SwingUtils.java:73)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.execRefreshOperation(ComponentInfo.java:119)
	at org.eclipse.wb.core.model.ObjectInfo.refresh(ObjectInfo.java:482)
	at org.eclipse.wb.core.model.ObjectInfo.endEdit(ObjectInfo.java:446)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:325)
	at org.eclipse.wb.core.gef.command.EditCommand.execute(EditCommand.java:50)
	at org.eclipse.wb.internal.gef.core.EditDomain.executeCommand(EditDomain.java:59)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.executeCommand(TreeDropListener.java:265)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.drop(TreeDropListener.java:103)
	at org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:91)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1491)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1514)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1499)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1299)
	at org.eclipse.swt.dnd.DropTarget.drop(DropTarget.java:728)
	at org.eclipse.swt.dnd.DropTarget.outlineView_acceptDrop_item_childIndex(DropTarget.java:746)
	at org.eclipse.swt.dnd.DropTarget.dropTargetProc(DropTarget.java:471)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.dnd.DropTarget.dndCallSuper(DropTarget.java:210)
	at org.eclipse.swt.dnd.DropTarget.performDragOperation(DropTarget.java:739)
	at org.eclipse.swt.dnd.DropTarget.dropTargetProc(DropTarget.java:456)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:227)
	at org.eclipse.swt.widgets.Widget.mouseDownSuper(Widget.java:1121)
	at org.eclipse.swt.widgets.Tree.mouseDownSuper(Tree.java:2047)
	at org.eclipse.swt.widgets.Widget.mouseDown(Widget.java:1113)
	at org.eclipse.swt.widgets.Control.mouseDown(Control.java:2569)
	at org.eclipse.swt.widgets.Tree.mouseDown(Tree.java:2015)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5692)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:227)
	at org.eclipse.swt.widgets.Widget.windowSendEvent(Widget.java:2130)
	at org.eclipse.swt.widgets.Shell.windowSendEvent(Shell.java:2337)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5756)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Display.applicationSendEvent(Display.java:5193)
	at org.eclipse.swt.widgets.Display.applicationProc(Display.java:5342)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSApplication.sendEvent(NSApplication.java:128)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3695)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:1127)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1018)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:156)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:654)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:598)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:139)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:380)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:235)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:669)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:608)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1515)

!ENTRY org.eclipse.wb.core 4 4 2016-04-08 20:19:02.245
!MESSAGE Designer [1.8.0.r45x201506110820.201604082003]: Index: 0, Size: 0
!STACK 0
java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.ArrayList.rangeCheck(ArrayList.java:635)
	at java.util.ArrayList.get(ArrayList.java:411)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.updateTargetRequestAfter(TreeDropListener.java:176)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.dragOperationChanged(TreeDropListener.java:76)
	at org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:111)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1491)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1514)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1499)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1299)
	at org.eclipse.swt.dnd.DropTarget.draggingUpdated(DropTarget.java:319)
	at org.eclipse.swt.dnd.DropTarget.dropTargetProc(DropTarget.java:452)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Display.applicationNextEventMatchingMask(Display.java:5051)
	at org.eclipse.swt.widgets.Display.applicationProc(Display.java:5432)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSApplication.nextEventMatchingMask(NSApplication.java:94)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3692)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.waitEventLoop(ExecutionUtils.java:71)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:168)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runLaterAndWait(SwingUtils.java:73)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils.disposeWindow(SwingImageUtils.java:313)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_dispose(ComponentInfo.java:125)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.refresh_dispose(ContainerInfo.java:237)
	at org.eclipse.wb.internal.core.editor.DesignPage$5.run(DesignPage.java:348)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runLog(ExecutionUtils.java:106)
	at org.eclipse.wb.internal.core.editor.DesignPage.disposeAll(DesignPage.java:346)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleDesignException(DesignPage.java:641)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$8(DesignPage.java:632)
	at org.eclipse.wb.internal.core.editor.DesignPage$9.handleException(DesignPage.java:564)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:330)
	at org.eclipse.wb.core.gef.command.EditCommand.execute(EditCommand.java:50)
	at org.eclipse.wb.internal.gef.core.EditDomain.executeCommand(EditDomain.java:59)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.executeCommand(TreeDropListener.java:265)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.drop(TreeDropListener.java:103)
	at org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:91)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1491)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1514)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1499)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1299)
	at org.eclipse.swt.dnd.DropTarget.drop(DropTarget.java:728)
	at org.eclipse.swt.dnd.DropTarget.outlineView_acceptDrop_item_childIndex(DropTarget.java:746)
	at org.eclipse.swt.dnd.DropTarget.dropTargetProc(DropTarget.java:471)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.dnd.DropTarget.dndCallSuper(DropTarget.java:210)
	at org.eclipse.swt.dnd.DropTarget.performDragOperation(DropTarget.java:739)
	at org.eclipse.swt.dnd.DropTarget.dropTargetProc(DropTarget.java:456)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:227)
	at org.eclipse.swt.widgets.Widget.mouseDownSuper(Widget.java:1121)
	at org.eclipse.swt.widgets.Tree.mouseDownSuper(Tree.java:2047)
	at org.eclipse.swt.widgets.Widget.mouseDown(Widget.java:1113)
	at org.eclipse.swt.widgets.Control.mouseDown(Control.java:2569)
	at org.eclipse.swt.widgets.Tree.mouseDown(Tree.java:2015)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5692)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:227)
	at org.eclipse.swt.widgets.Widget.windowSendEvent(Widget.java:2130)
	at org.eclipse.swt.widgets.Shell.windowSendEvent(Shell.java:2337)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5756)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Display.applicationSendEvent(Display.java:5193)
	at org.eclipse.swt.widgets.Display.applicationProc(Display.java:5342)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSApplication.sendEvent(NSApplication.java:128)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3695)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:1127)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1018)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:156)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:654)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:598)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:139)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:380)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:235)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:669)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:608)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1515)

!ENTRY org.eclipse.wb.core 4 4 2016-04-08 20:19:02.251
!MESSAGE Designer [1.8.0.r45x201506110820.201604082003]: Execution flow problem. {
  frame=new JFrame();
  frame.setBounds(100,100,828,580);
  frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
  frame.getContentPane().setLayout(null);
  JPanel panel_3=new JPanel();
  panel_3.setBorder(new LineBorder(SystemColor.textHighlight));
  panel_3.setBackground(new Color(255,255,255));
  panel_3.setBounds(20,80,516,422);
  frame.getContentPane().add(panel_3);
  panel_3.setLayout(null);
  taskList=new JList<String>();
  taskList.addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      selectedListIndex=taskList.getSelectedIndex();
      setTaskDetailView();
    }
  }
);
  taskList.setBackground(UIManager.getColor("TabbedPane.selectedTabTitlePressedColor"));
  taskList.setBorder(new EtchedBorder(EtchedBorder.LOWERED,null,null));
  taskList.setToolTipText("");
  taskList.setSelectionForeground(new Color(255,255,255));
  taskList.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
  taskList.setSelectionBackground(new Color(255,165,0));
  taskList.setForeground(new Color(255,165,0));
  taskList.setFont(new Font("Open Sans",Font.PLAIN,17));
  taskList.setModel(new AbstractListModel<String>(){
    private static final long serialVersionUID=1L;
    String[] values=taskManager.getTaskNames();
    public int getSize(){
      return values.length;
    }
    public String getElementAt(    int index){
      return values[index];
    }
  }
);
  taskList.setFixedCellHeight(25);
  taskList.setBounds(11,44,496,368);
  scrollPane=new JScrollPane();
  scrollPane.setBounds(11,44,496,368);
  scrollPane.setViewportView(taskList);
  panel_3.add(scrollPane);
  filterDropdown=new JComboBox();
  filterDropdown.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      String filterString;
switch (filterDropdown.getSelectedIndex()) {
case 0:
        filterString="filter all";
      break;
case 1:
    filterString="filter incomplete";
  break;
case 2:
filterString="filter complete";
break;
case 3:
filterString="filter short";
break;
case 4:
filterString="filter medium";
break;
case 5:
filterString="filter long";
break;
case 6:
filterString="filter soon";
break;
default :
filterString="";
break;
}
try {
taskManager.executeCommand(filterString,window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
refreshWindow();
}
}
);
filterDropdown.setBackground(new Color(255,255,255));
filterDropdown.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
filterDropdown.setForeground(new Color(60,179,113));
filterDropdown.setModel(new DefaultComboBoxModel(new String[]{"Filter by...","Incomplete Tasks","Complete Tasks","Short Tasks (<1 hour)","Medium Tasks (1 - 3 hours)","Long Tasks (3+ hours)","Tasks Ending Soon"}));
filterDropdown.setFont(new Font("Open Sans",Font.PLAIN,15));
filterDropdown.setBounds(6,6,258,36);
panel_3.add(filterDropdown);
sortDropdown=new JComboBox();
sortDropdown.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
String sortString;
switch (sortDropdown.getSelectedIndex()) {
case 0:
sortString="sort default";
break;
case 1:
sortString="sort name";
break;
case 2:
sortString="sort date";
break;
case 3:
sortString="sort start";
break;
case 4:
sortString="sort end";
break;
case 5:
sortString="sort duration";
break;
default :
sortString="";
break;
}
try {
taskManager.executeCommand(sortString,window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
}
}
);
sortDropdown.setOpaque(true);
sortDropdown.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
sortDropdown.setModel(new DefaultComboBoxModel(new String[]{"Sort By...","Name","Date","Starting Time","Ending Time","Duration"}));
sortDropdown.setForeground(new Color(60,179,113));
sortDropdown.setFont(new Font("Open Sans",Font.PLAIN,15));
sortDropdown.setBackground(Color.WHITE);
sortDropdown.setBounds(261,6,249,36);
panel_3.add(sortDropdown);
historyList=new JList();
historyList.setEnabled(false);
historyList.setForeground(new Color(60,179,113));
historyList.setFont(new Font("Open Sans",Font.PLAIN,13));
historyList.setBounds(6,6,501,406);
historyList.setModel(new AbstractListModel(){
List<String> history=taskManager.getHistoryList();
public int getSize(){
return history.size();
}
public Object getElementAt(int index){
return history.get(index);
}
}
);
panel_3.add(historyList);
table=new JTable(data,columns);
table.setBounds(0,0,499,372);
panel_3.add(table);
String[] columns=new String[]{"Task Name","Task Duration","Task Date and Time","Task Completion"};
List<Task> tasks=taskManager.getTasks();
Object[][] data=new Object[taskManager.getNumberOfTasks()][4];
for (int i=0; i < taskManager.getNumberOfTasks(); i++) {
for (int j=0; j < 4; j++) {
switch (j) {
case 0:
data[i][j]=tasks.get(i).getName();
break;
case 1:
if (tasks.get(i).getDuration() != 0) {
data[i][j]=tasks.get(i).getDuration();
}
 else {
data[i][j]="N/A";
}
break;
case 2:
if (tasks.get(i).getTimeStart() != null) {
data[i][j]=tasks.get(i).getTimeStart();
}
 else {
data[i][j]="N/A";
}
break;
default :
data[i][j]=tasks.get(i).getDoneStatus();
break;
}
}
}
JPanel panel_1=new JPanel();
panel_1.setBackground(new Color(51,204,153));
panel_1.setBounds(0,0,828,64);
frame.getContentPane().add(panel_1);
panel_1.setLayout(null);
JLabel lblSnaptask=new JLabel("snaptask");
lblSnaptask.setFont(new Font("Open Sans",Font.PLAIN,48));
lblSnaptask.setForeground(new Color(255,255,255));
lblSnaptask.setBounds(16,0,216,58);
panel_1.add(lblSnaptask);
JPanel searchLine=new JPanel();
searchLine.setBackground(new Color(255,165,0));
searchLine.setBorder(null);
searchLine.setBounds(556,44,251,6);
searchLine.setEnabled(false);
panel_1.add(searchLine);
searchField=new JTextField();
searchField.addFocusListener(new FocusAdapter(){
@Override public void focusGained(FocusEvent e){
if (firstFocusSearchText) {
searchField.setText("");
firstFocusSearchText=false;
}
}
}
);
searchField.setFont(new Font("Open Sans",Font.PLAIN,15));
searchField.setForeground(new Color(169,169,169));
searchField.setToolTipText("Search for tasks!");
searchField.setText("Search for tasks!");
searchField.setBounds(552,15,258,36);
panel_1.add(searchField);
searchField.setColumns(10);
homeButton=new JButton("\n");
homeButton.setOpaque(true);
homeButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=0;
refreshButtons();
}
}
);
homeButton.setIcon(new ImageIcon("/Users/admin/Desktop/ListIcon.png"));
homeButton.setBorder(new EmptyBorder(0,0,0,0));
homeButton.setBackground(new Color(0,204,153));
homeButton.setBounds(237,0,66,64);
panel_1.add(homeButton);
historyButton=new JButton("\n");
historyButton.setOpaque(true);
historyButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=1;
refreshButtons();
}
}
);
historyButton.setIcon(new ImageIcon("/Users/admin/Desktop/HistoryIcon.png"));
historyButton.setBorder(new EmptyBorder(0,0,0,0));
historyButton.setBackground(new Color(0,204,153));
historyButton.setBounds(312,0,66,64);
panel_1.add(historyButton);
helpButton=new JButton("\n");
helpButton.setOpaque(true);
helpButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=2;
refreshButtons();
}
}
);
helpButton.setIcon(new ImageIcon("/Users/admin/Desktop/InfoImage.png"));
helpButton.setBorder(new EmptyBorder(0,0,0,0));
helpButton.setBackground(new Color(0,204,153));
helpButton.setBounds(391,0,66,64);
panel_1.add(helpButton);
JPanel panel=new JPanel();
panel.setBorder(new LineBorder(SystemColor.textHighlight));
panel.setBackground(new Color(255,255,255));
panel.setBounds(557,80,251,422);
frame.getContentPane().add(panel);
panel.setLayout(null);
warningBackground=new JPanel();
warningBackground.setEnabled(false);
warningBackground.setBorder(null);
warningBackground.setBackground(new Color(255,165,0));
warningBackground.setBounds(0,20,252,29);
panel.add(warningBackground);
warningBackground.setLayout(null);
txtLabelStatus=new JTextPane();
txtLabelStatus.setDisabledTextColor(SystemColor.text);
txtLabelStatus.setSelectionColor(SystemColor.activeCaption);
txtLabelStatus.setEnabled(false);
txtLabelStatus.setBounds(72,0,105,28);
txtLabelStatus.setFont(new Font("Open Sans",Font.PLAIN,20));
txtLabelStatus.setForeground(new Color(255,255,255));
txtLabelStatus.setBackground(new Color(255,165,0));
warningBackground.add(txtLabelStatus);
txtAreaDescription=new JTextPane();
txtAreaDescription.setFont(new Font("Open Sans",Font.PLAIN,14));
txtAreaDescription.setForeground(new Color(60,179,113));
txtAreaDescription.setBounds(10,232,208,159);
txtAreaDescription.setEnabled(false);
panel.add(txtAreaDescription);
txtAreaTaskDetails=new JTextArea();
txtAreaTaskDetails.setFont(new Font("Open Sans",Font.PLAIN,17));
txtAreaTaskDetails.setForeground(SystemColor.scrollbar);
txtAreaTaskDetails.setBounds(10,61,233,231);
txtAreaTaskDetails.setEnabled(false);
panel.add(txtAreaTaskDetails);
txtAreaHelp=new JTextPane();
txtAreaHelp.setForeground(new Color(102,205,170));
txtAreaHelp.setFont(new Font("Open Sans",Font.PLAIN,13));
txtAreaHelp.setBounds(30,100,499,372);
frame.getContentPane().add(txtAreaHelp);
txtAreaHelp.setText("add [NAME] || [DD/MM/YYYY] [HH:MM] [H:M]\nadd [NAME] || [DD/MM/YYYY] [HH:MM]\nadd [NAME] || [DD/MM/YYYY]\nadd [NAME]\ndelete [INDEX]\ndone [INDEX]\nedit [INDEX] name [STRING]\nedit [INDEX] duration [STRING]\nedit [INDEX] datetime [STRING]\nedit [INDEX] all [NAME] [DATE] [TIME] [DURATION]\nclear\ndisplay [INDEX]\nsearch name [STRING]\nsearch date [DD/MM/YYYY]\nundo\nhome\nhistory\nhelp\nsort [NAME/DATE/START/END/DURATION/DEFAULT]\nfilter [INCOMPLETE/COMPLETE/SHORT/MEDIUM/LONG/SOON/ALL]\n");
JPanel taskManageLine=new JPanel();
taskManageLine.setEnabled(false);
taskManageLine.setBorder(null);
taskManageLine.setBackground(new Color(255,165,0));
taskManageLine.setBounds(21,540,786,6);
taskManageLine.setEnabled(false);
frame.getContentPane().add(taskManageLine);
textFieldTaskManage=new JTextField();
textFieldTaskManage.addFocusListener(new FocusAdapter(){
@Override public void focusGained(FocusEvent e){
if (firstFocusManageText) {
textFieldTaskManage.setText("");
firstFocusManageText=false;
}
}
}
);
textFieldTaskManage.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
try {
taskManager.executeCommand(textFieldTaskManage.getText(),window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
refreshWindow();
textFieldTaskManage.setText("");
}
}
);
textFieldTaskManage.setDisabledTextColor(new Color(128,128,128));
textFieldTaskManage.setForeground(new Color(169,169,169));
textFieldTaskManage.setFont(new Font("Open Sans",Font.PLAIN,15));
textFieldTaskManage.setToolTipText("Manage your tasks here!");
textFieldTaskManage.setColumns(10);
textFieldTaskManage.setBounds(18,510,792,36);
textFieldTaskManage.setText("Manage your tasks here!");
frame.getContentPane().add(textFieldTaskManage);
refreshButtons();
}
 expected, but {
  initialize();
}
 found.
!STACK 0
org.eclipse.wb.internal.core.utils.check.AssertionFailedException: Execution flow problem. {
  frame=new JFrame();
  frame.setBounds(100,100,828,580);
  frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
  frame.getContentPane().setLayout(null);
  JPanel panel_3=new JPanel();
  panel_3.setBorder(new LineBorder(SystemColor.textHighlight));
  panel_3.setBackground(new Color(255,255,255));
  panel_3.setBounds(20,80,516,422);
  frame.getContentPane().add(panel_3);
  panel_3.setLayout(null);
  taskList=new JList<String>();
  taskList.addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      selectedListIndex=taskList.getSelectedIndex();
      setTaskDetailView();
    }
  }
);
  taskList.setBackground(UIManager.getColor("TabbedPane.selectedTabTitlePressedColor"));
  taskList.setBorder(new EtchedBorder(EtchedBorder.LOWERED,null,null));
  taskList.setToolTipText("");
  taskList.setSelectionForeground(new Color(255,255,255));
  taskList.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
  taskList.setSelectionBackground(new Color(255,165,0));
  taskList.setForeground(new Color(255,165,0));
  taskList.setFont(new Font("Open Sans",Font.PLAIN,17));
  taskList.setModel(new AbstractListModel<String>(){
    private static final long serialVersionUID=1L;
    String[] values=taskManager.getTaskNames();
    public int getSize(){
      return values.length;
    }
    public String getElementAt(    int index){
      return values[index];
    }
  }
);
  taskList.setFixedCellHeight(25);
  taskList.setBounds(11,44,496,368);
  scrollPane=new JScrollPane();
  scrollPane.setBounds(11,44,496,368);
  scrollPane.setViewportView(taskList);
  panel_3.add(scrollPane);
  filterDropdown=new JComboBox();
  filterDropdown.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      String filterString;
switch (filterDropdown.getSelectedIndex()) {
case 0:
        filterString="filter all";
      break;
case 1:
    filterString="filter incomplete";
  break;
case 2:
filterString="filter complete";
break;
case 3:
filterString="filter short";
break;
case 4:
filterString="filter medium";
break;
case 5:
filterString="filter long";
break;
case 6:
filterString="filter soon";
break;
default :
filterString="";
break;
}
try {
taskManager.executeCommand(filterString,window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
refreshWindow();
}
}
);
filterDropdown.setBackground(new Color(255,255,255));
filterDropdown.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
filterDropdown.setForeground(new Color(60,179,113));
filterDropdown.setModel(new DefaultComboBoxModel(new String[]{"Filter by...","Incomplete Tasks","Complete Tasks","Short Tasks (<1 hour)","Medium Tasks (1 - 3 hours)","Long Tasks (3+ hours)","Tasks Ending Soon"}));
filterDropdown.setFont(new Font("Open Sans",Font.PLAIN,15));
filterDropdown.setBounds(6,6,258,36);
panel_3.add(filterDropdown);
sortDropdown=new JComboBox();
sortDropdown.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
String sortString;
switch (sortDropdown.getSelectedIndex()) {
case 0:
sortString="sort default";
break;
case 1:
sortString="sort name";
break;
case 2:
sortString="sort date";
break;
case 3:
sortString="sort start";
break;
case 4:
sortString="sort end";
break;
case 5:
sortString="sort duration";
break;
default :
sortString="";
break;
}
try {
taskManager.executeCommand(sortString,window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
}
}
);
sortDropdown.setOpaque(true);
sortDropdown.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
sortDropdown.setModel(new DefaultComboBoxModel(new String[]{"Sort By...","Name","Date","Starting Time","Ending Time","Duration"}));
sortDropdown.setForeground(new Color(60,179,113));
sortDropdown.setFont(new Font("Open Sans",Font.PLAIN,15));
sortDropdown.setBackground(Color.WHITE);
sortDropdown.setBounds(261,6,249,36);
panel_3.add(sortDropdown);
historyList=new JList();
historyList.setEnabled(false);
historyList.setForeground(new Color(60,179,113));
historyList.setFont(new Font("Open Sans",Font.PLAIN,13));
historyList.setBounds(6,6,501,406);
historyList.setModel(new AbstractListModel(){
List<String> history=taskManager.getHistoryList();
public int getSize(){
return history.size();
}
public Object getElementAt(int index){
return history.get(index);
}
}
);
panel_3.add(historyList);
table=new JTable(data,columns);
table.setBounds(0,0,499,372);
panel_3.add(table);
String[] columns=new String[]{"Task Name","Task Duration","Task Date and Time","Task Completion"};
List<Task> tasks=taskManager.getTasks();
Object[][] data=new Object[taskManager.getNumberOfTasks()][4];
for (int i=0; i < taskManager.getNumberOfTasks(); i++) {
for (int j=0; j < 4; j++) {
switch (j) {
case 0:
data[i][j]=tasks.get(i).getName();
break;
case 1:
if (tasks.get(i).getDuration() != 0) {
data[i][j]=tasks.get(i).getDuration();
}
 else {
data[i][j]="N/A";
}
break;
case 2:
if (tasks.get(i).getTimeStart() != null) {
data[i][j]=tasks.get(i).getTimeStart();
}
 else {
data[i][j]="N/A";
}
break;
default :
data[i][j]=tasks.get(i).getDoneStatus();
break;
}
}
}
JPanel panel_1=new JPanel();
panel_1.setBackground(new Color(51,204,153));
panel_1.setBounds(0,0,828,64);
frame.getContentPane().add(panel_1);
panel_1.setLayout(null);
JLabel lblSnaptask=new JLabel("snaptask");
lblSnaptask.setFont(new Font("Open Sans",Font.PLAIN,48));
lblSnaptask.setForeground(new Color(255,255,255));
lblSnaptask.setBounds(16,0,216,58);
panel_1.add(lblSnaptask);
JPanel searchLine=new JPanel();
searchLine.setBackground(new Color(255,165,0));
searchLine.setBorder(null);
searchLine.setBounds(556,44,251,6);
searchLine.setEnabled(false);
panel_1.add(searchLine);
searchField=new JTextField();
searchField.addFocusListener(new FocusAdapter(){
@Override public void focusGained(FocusEvent e){
if (firstFocusSearchText) {
searchField.setText("");
firstFocusSearchText=false;
}
}
}
);
searchField.setFont(new Font("Open Sans",Font.PLAIN,15));
searchField.setForeground(new Color(169,169,169));
searchField.setToolTipText("Search for tasks!");
searchField.setText("Search for tasks!");
searchField.setBounds(552,15,258,36);
panel_1.add(searchField);
searchField.setColumns(10);
homeButton=new JButton("\n");
homeButton.setOpaque(true);
homeButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=0;
refreshButtons();
}
}
);
homeButton.setIcon(new ImageIcon("/Users/admin/Desktop/ListIcon.png"));
homeButton.setBorder(new EmptyBorder(0,0,0,0));
homeButton.setBackground(new Color(0,204,153));
homeButton.setBounds(237,0,66,64);
panel_1.add(homeButton);
historyButton=new JButton("\n");
historyButton.setOpaque(true);
historyButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=1;
refreshButtons();
}
}
);
historyButton.setIcon(new ImageIcon("/Users/admin/Desktop/HistoryIcon.png"));
historyButton.setBorder(new EmptyBorder(0,0,0,0));
historyButton.setBackground(new Color(0,204,153));
historyButton.setBounds(312,0,66,64);
panel_1.add(historyButton);
helpButton=new JButton("\n");
helpButton.setOpaque(true);
helpButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=2;
refreshButtons();
}
}
);
helpButton.setIcon(new ImageIcon("/Users/admin/Desktop/InfoImage.png"));
helpButton.setBorder(new EmptyBorder(0,0,0,0));
helpButton.setBackground(new Color(0,204,153));
helpButton.setBounds(391,0,66,64);
panel_1.add(helpButton);
JPanel panel=new JPanel();
panel.setBorder(new LineBorder(SystemColor.textHighlight));
panel.setBackground(new Color(255,255,255));
panel.setBounds(557,80,251,422);
frame.getContentPane().add(panel);
panel.setLayout(null);
warningBackground=new JPanel();
warningBackground.setEnabled(false);
warningBackground.setBorder(null);
warningBackground.setBackground(new Color(255,165,0));
warningBackground.setBounds(0,20,252,29);
panel.add(warningBackground);
warningBackground.setLayout(null);
txtLabelStatus=new JTextPane();
txtLabelStatus.setDisabledTextColor(SystemColor.text);
txtLabelStatus.setSelectionColor(SystemColor.activeCaption);
txtLabelStatus.setEnabled(false);
txtLabelStatus.setBounds(72,0,105,28);
txtLabelStatus.setFont(new Font("Open Sans",Font.PLAIN,20));
txtLabelStatus.setForeground(new Color(255,255,255));
txtLabelStatus.setBackground(new Color(255,165,0));
warningBackground.add(txtLabelStatus);
txtAreaDescription=new JTextPane();
txtAreaDescription.setFont(new Font("Open Sans",Font.PLAIN,14));
txtAreaDescription.setForeground(new Color(60,179,113));
txtAreaDescription.setBounds(10,232,208,159);
txtAreaDescription.setEnabled(false);
panel.add(txtAreaDescription);
txtAreaTaskDetails=new JTextArea();
txtAreaTaskDetails.setFont(new Font("Open Sans",Font.PLAIN,17));
txtAreaTaskDetails.setForeground(SystemColor.scrollbar);
txtAreaTaskDetails.setBounds(10,61,233,231);
txtAreaTaskDetails.setEnabled(false);
panel.add(txtAreaTaskDetails);
txtAreaHelp=new JTextPane();
txtAreaHelp.setForeground(new Color(102,205,170));
txtAreaHelp.setFont(new Font("Open Sans",Font.PLAIN,13));
txtAreaHelp.setBounds(30,100,499,372);
frame.getContentPane().add(txtAreaHelp);
txtAreaHelp.setText("add [NAME] || [DD/MM/YYYY] [HH:MM] [H:M]\nadd [NAME] || [DD/MM/YYYY] [HH:MM]\nadd [NAME] || [DD/MM/YYYY]\nadd [NAME]\ndelete [INDEX]\ndone [INDEX]\nedit [INDEX] name [STRING]\nedit [INDEX] duration [STRING]\nedit [INDEX] datetime [STRING]\nedit [INDEX] all [NAME] [DATE] [TIME] [DURATION]\nclear\ndisplay [INDEX]\nsearch name [STRING]\nsearch date [DD/MM/YYYY]\nundo\nhome\nhistory\nhelp\nsort [NAME/DATE/START/END/DURATION/DEFAULT]\nfilter [INCOMPLETE/COMPLETE/SHORT/MEDIUM/LONG/SOON/ALL]\n");
JPanel taskManageLine=new JPanel();
taskManageLine.setEnabled(false);
taskManageLine.setBorder(null);
taskManageLine.setBackground(new Color(255,165,0));
taskManageLine.setBounds(21,540,786,6);
taskManageLine.setEnabled(false);
frame.getContentPane().add(taskManageLine);
textFieldTaskManage=new JTextField();
textFieldTaskManage.addFocusListener(new FocusAdapter(){
@Override public void focusGained(FocusEvent e){
if (firstFocusManageText) {
textFieldTaskManage.setText("");
firstFocusManageText=false;
}
}
}
);
textFieldTaskManage.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
try {
taskManager.executeCommand(textFieldTaskManage.getText(),window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
refreshWindow();
textFieldTaskManage.setText("");
}
}
);
textFieldTaskManage.setDisabledTextColor(new Color(128,128,128));
textFieldTaskManage.setForeground(new Color(169,169,169));
textFieldTaskManage.setFont(new Font("Open Sans",Font.PLAIN,15));
textFieldTaskManage.setToolTipText("Manage your tasks here!");
textFieldTaskManage.setColumns(10);
textFieldTaskManage.setBounds(18,510,792,36);
textFieldTaskManage.setText("Manage your tasks here!");
frame.getContentPane().add(textFieldTaskManage);
refreshButtons();
}
 expected, but {
  initialize();
}
 found.
	at org.eclipse.wb.internal.core.utils.check.Assert.fail(Assert.java:225)
	at org.eclipse.wb.internal.core.utils.check.Assert.isTrue(Assert.java:291)
	at org.eclipse.wb.core.eval.ExecutionFlowDescription.leaveStatement(ExecutionFlowDescription.java:152)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:317)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.access$1(ExecutionFlowUtils.java:235)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:442)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:391)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$28c57345.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:241)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2759)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:145)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:421)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:389)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$28c57345.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:316)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2759)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:263)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2782)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:267)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2782)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:137)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2759)
	at org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:250)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2782)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:137)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2759)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:635)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2782)
	at org.eclipse.jdt.core.dom.AnonymousClassDeclaration.accept0(AnonymousClassDeclaration.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2759)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:314)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2782)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:239)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2759)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:145)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.core.model.JavaInfo.refresh_create(JavaInfo.java:1199)
	at org.eclipse.wb.core.model.ObjectInfo.refreshCreate0(ObjectInfo.java:550)
	at org.eclipse.wb.core.model.ObjectInfo.access$0(ObjectInfo.java:546)
	at org.eclipse.wb.core.model.ObjectInfo$5$1.run(ObjectInfo.java:486)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:145)
	at org.eclipse.wb.core.model.ObjectInfo$5.run(ObjectInfo.java:484)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$2.run(SwingUtils.java:76)
	at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:312)
	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:745)
	at java.awt.EventQueue.access$300(EventQueue.java:103)
	at java.awt.EventQueue$3.run(EventQueue.java:706)
	at java.awt.EventQueue$3.run(EventQueue.java:704)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.awt.EventQueue.dispatchEvent(EventQueue.java:715)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:242)
	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:161)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:150)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:146)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:138)
	at java.awt.EventDispatchThread.run(EventDispatchThread.java:91)

!ENTRY org.eclipse.ui 4 0 2016-04-08 20:19:02.602
!MESSAGE Unhandled event loop exception
!STACK 0
org.eclipse.core.runtime.AssertionFailedException: null argument:
	at org.eclipse.core.runtime.Assert.isNotNull(Assert.java:85)
	at org.eclipse.core.runtime.Assert.isNotNull(Assert.java:73)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.setSelection(AbstractEditPartViewer.java:249)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.resetSelectionFromModels(TreeDropListener.java:141)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.drop(TreeDropListener.java:107)
	at org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:91)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1491)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1514)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1499)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1299)
	at org.eclipse.swt.dnd.DropTarget.drop(DropTarget.java:728)
	at org.eclipse.swt.dnd.DropTarget.outlineView_acceptDrop_item_childIndex(DropTarget.java:746)
	at org.eclipse.swt.dnd.DropTarget.dropTargetProc(DropTarget.java:471)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.dnd.DropTarget.dndCallSuper(DropTarget.java:210)
	at org.eclipse.swt.dnd.DropTarget.performDragOperation(DropTarget.java:739)
	at org.eclipse.swt.dnd.DropTarget.dropTargetProc(DropTarget.java:456)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:227)
	at org.eclipse.swt.widgets.Widget.mouseDownSuper(Widget.java:1121)
	at org.eclipse.swt.widgets.Tree.mouseDownSuper(Tree.java:2047)
	at org.eclipse.swt.widgets.Widget.mouseDown(Widget.java:1113)
	at org.eclipse.swt.widgets.Control.mouseDown(Control.java:2569)
	at org.eclipse.swt.widgets.Tree.mouseDown(Tree.java:2015)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5692)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:227)
	at org.eclipse.swt.widgets.Widget.windowSendEvent(Widget.java:2130)
	at org.eclipse.swt.widgets.Shell.windowSendEvent(Shell.java:2337)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5756)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Display.applicationSendEvent(Display.java:5193)
	at org.eclipse.swt.widgets.Display.applicationProc(Display.java:5342)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSApplication.sendEvent(NSApplication.java:128)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3695)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:1127)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1018)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:156)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:654)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:598)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:139)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:380)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:235)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:669)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:608)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1515)

!ENTRY org.eclipse.ui.workbench 4 2 2016-04-08 21:14:36.055
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.ui.workbench".
!STACK 0
java.lang.IllegalStateException: Expected the service to be TERMINATED, but the service has FAILED
	at com.google.common.util.concurrent.AbstractService.checkCurrentState(AbstractService.java:334)
	at com.google.common.util.concurrent.AbstractService.awaitTerminated(AbstractService.java:303)
	at com.google.common.util.concurrent.AbstractIdleService.awaitTerminated(AbstractIdleService.java:191)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.close(ProjectTypesIndex.java:221)
	at org.eclipse.recommenders.internal.types.rcp.IndexProvider.close(IndexProvider.java:59)
	at org.eclipse.recommenders.internal.types.rcp.TypesIndexService$ShutdownListener.postShutdown(TypesIndexService.java:142)
	at org.eclipse.ui.internal.Workbench$8.run(Workbench.java:971)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:50)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:173)
	at org.eclipse.ui.internal.Workbench.firePostShutdown(Workbench.java:968)
	at org.eclipse.ui.internal.Workbench.shutdown(Workbench.java:3152)
	at org.eclipse.ui.internal.Workbench.busyClose(Workbench.java:1161)
	at org.eclipse.ui.internal.Workbench.access$21(Workbench.java:1073)
	at org.eclipse.ui.internal.Workbench$19.run(Workbench.java:1414)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.ui.internal.Workbench.close(Workbench.java:1411)
	at org.eclipse.ui.internal.Workbench.close(Workbench.java:1384)
	at org.eclipse.ui.internal.Workbench$58.handleEvent(Workbench.java:2906)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4219)
	at org.eclipse.swt.widgets.Display.applicationProc(Display.java:5349)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Display.applicationNextEventMatchingMask(Display.java:5051)
	at org.eclipse.swt.widgets.Display.applicationProc(Display.java:5432)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSApplication.nextEventMatchingMask(NSApplication.java:94)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3692)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:1127)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1018)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:156)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:654)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:598)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:139)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:380)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:235)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:669)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:608)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1515)
Caused by: java.io.FileNotFoundException: /Users/admin/Desktop/main/.metadata/.plugins/org.eclipse.recommenders.types.rcp/indexes/TaskScheduler/_2h.fnm (No such file or directory)
	at java.io.RandomAccessFile.open(Native Method)
	at java.io.RandomAccessFile.<init>(RandomAccessFile.java:241)
	at org.apache.lucene.store.SimpleFSDirectory$SimpleFSIndexInput$Descriptor.<init>(SimpleFSDirectory.java:70)
	at org.apache.lucene.store.SimpleFSDirectory$SimpleFSIndexInput.<init>(SimpleFSDirectory.java:97)
	at org.apache.lucene.store.NIOFSDirectory$NIOFSIndexInput.<init>(NIOFSDirectory.java:92)
	at org.apache.lucene.store.NIOFSDirectory.openInput(NIOFSDirectory.java:79)
	at org.apache.lucene.store.FSDirectory.openInput(FSDirectory.java:345)
	at org.apache.lucene.index.FieldInfos.<init>(FieldInfos.java:74)
	at org.apache.lucene.index.IndexWriter.getFieldInfos(IndexWriter.java:1222)
	at org.apache.lucene.index.IndexWriter.getCurrentFieldInfos(IndexWriter.java:1238)
	at org.apache.lucene.index.IndexWriter.<init>(IndexWriter.java:1171)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.initialize(ProjectTypesIndex.java:138)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.startUp(ProjectTypesIndex.java:125)
	at com.google.common.util.concurrent.AbstractIdleService$2$1.run(AbstractIdleService.java:54)
	at com.google.common.util.concurrent.Callables$3.run(Callables.java:93)
	at java.lang.Thread.run(Thread.java:745)
!SESSION 2016-04-09 15:19:40.524 -----------------------------------------------
eclipse.buildId=4.5.1.M20150904-0015
java.version=1.7.0_79
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/admin/.eclipse_keyring -showlocation
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/admin/.eclipse_keyring -showlocation

!ENTRY org.eclipse.core.net 1 0 2016-04-09 15:19:41.904
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences
!SESSION 2016-04-11 08:12:35.486 -----------------------------------------------
eclipse.buildId=4.5.1.M20150904-0015
java.version=1.7.0_79
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/admin/.eclipse_keyring -showlocation
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/admin/.eclipse_keyring -showlocation

!ENTRY org.eclipse.core.net 1 0 2016-04-11 08:12:36.867
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences

!ENTRY org.eclipse.jdt.core 4 2 2016-04-11 08:51:08.581
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core".
!STACK 0
java.lang.RuntimeException: java.io.FileNotFoundException: /Users/admin/Desktop/main/.metadata/.plugins/org.eclipse.recommenders.types.rcp/indexes/TaskScheduler/_2h.fnm (No such file or directory)
	at com.google.common.base.Throwables.propagate(Throwables.java:160)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.createReader(ProjectTypesIndex.java:303)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.getSearcher(ProjectTypesIndex.java:282)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.getIndexedRoots(ProjectTypesIndex.java:192)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.needsRebuild(ProjectTypesIndex.java:147)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.suggestRebuild(ProjectTypesIndex.java:464)
	at org.eclipse.recommenders.internal.types.rcp.TypesIndexService.rebuildIndex(TypesIndexService.java:120)
	at org.eclipse.recommenders.internal.types.rcp.TypesIndexService.process(TypesIndexService.java:57)
	at org.eclipse.recommenders.internal.types.rcp.TypesIndexService.process(TypesIndexService.java:63)
	at org.eclipse.recommenders.internal.types.rcp.TypesIndexService.elementChanged(TypesIndexService.java:49)
	at org.eclipse.jdt.internal.core.DeltaProcessor$3.run(DeltaProcessor.java:1662)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.core.DeltaProcessor.notifyListeners(DeltaProcessor.java:1652)
	at org.eclipse.jdt.internal.core.DeltaProcessor.firePostChangeDelta(DeltaProcessor.java:1486)
	at org.eclipse.jdt.internal.core.DeltaProcessor.fire(DeltaProcessor.java:1462)
	at org.eclipse.jdt.internal.core.DeltaProcessor.resourceChanged(DeltaProcessor.java:2074)
	at org.eclipse.jdt.internal.core.DeltaProcessingState.resourceChanged(DeltaProcessingState.java:477)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:299)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:289)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:152)
	at org.eclipse.core.internal.resources.Workspace.broadcastPostChange(Workspace.java:373)
	at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:1470)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:46)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
Caused by: java.io.FileNotFoundException: /Users/admin/Desktop/main/.metadata/.plugins/org.eclipse.recommenders.types.rcp/indexes/TaskScheduler/_2h.fnm (No such file or directory)
	at java.io.RandomAccessFile.open(Native Method)
	at java.io.RandomAccessFile.<init>(RandomAccessFile.java:241)
	at org.apache.lucene.store.SimpleFSDirectory$SimpleFSIndexInput$Descriptor.<init>(SimpleFSDirectory.java:70)
	at org.apache.lucene.store.SimpleFSDirectory$SimpleFSIndexInput.<init>(SimpleFSDirectory.java:97)
	at org.apache.lucene.store.NIOFSDirectory$NIOFSIndexInput.<init>(NIOFSDirectory.java:92)
	at org.apache.lucene.store.NIOFSDirectory.openInput(NIOFSDirectory.java:79)
	at org.apache.lucene.store.FSDirectory.openInput(FSDirectory.java:345)
	at org.apache.lucene.index.FieldInfos.<init>(FieldInfos.java:74)
	at org.apache.lucene.index.SegmentCoreReaders.<init>(SegmentCoreReaders.java:73)
	at org.apache.lucene.index.SegmentReader.get(SegmentReader.java:115)
	at org.apache.lucene.index.SegmentReader.get(SegmentReader.java:93)
	at org.apache.lucene.index.DirectoryReader.<init>(DirectoryReader.java:113)
	at org.apache.lucene.index.ReadOnlyDirectoryReader.<init>(ReadOnlyDirectoryReader.java:29)
	at org.apache.lucene.index.DirectoryReader$1.doBody(DirectoryReader.java:81)
	at org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:754)
	at org.apache.lucene.index.DirectoryReader.open(DirectoryReader.java:75)
	at org.apache.lucene.index.IndexReader.open(IndexReader.java:462)
	at org.apache.lucene.index.IndexReader.open(IndexReader.java:308)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.createReader(ProjectTypesIndex.java:301)
	... 23 more

!ENTRY org.eclipse.jdt.core 4 4 2016-04-11 08:51:08.643
!MESSAGE Exception occurred in listener of Java element change notification
!STACK 0
java.lang.RuntimeException: java.io.FileNotFoundException: /Users/admin/Desktop/main/.metadata/.plugins/org.eclipse.recommenders.types.rcp/indexes/TaskScheduler/_2h.fnm (No such file or directory)
	at com.google.common.base.Throwables.propagate(Throwables.java:160)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.createReader(ProjectTypesIndex.java:303)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.getSearcher(ProjectTypesIndex.java:282)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.getIndexedRoots(ProjectTypesIndex.java:192)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.needsRebuild(ProjectTypesIndex.java:147)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.suggestRebuild(ProjectTypesIndex.java:464)
	at org.eclipse.recommenders.internal.types.rcp.TypesIndexService.rebuildIndex(TypesIndexService.java:120)
	at org.eclipse.recommenders.internal.types.rcp.TypesIndexService.process(TypesIndexService.java:57)
	at org.eclipse.recommenders.internal.types.rcp.TypesIndexService.process(TypesIndexService.java:63)
	at org.eclipse.recommenders.internal.types.rcp.TypesIndexService.elementChanged(TypesIndexService.java:49)
	at org.eclipse.jdt.internal.core.DeltaProcessor$3.run(DeltaProcessor.java:1662)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.core.DeltaProcessor.notifyListeners(DeltaProcessor.java:1652)
	at org.eclipse.jdt.internal.core.DeltaProcessor.firePostChangeDelta(DeltaProcessor.java:1486)
	at org.eclipse.jdt.internal.core.DeltaProcessor.fire(DeltaProcessor.java:1462)
	at org.eclipse.jdt.internal.core.DeltaProcessor.resourceChanged(DeltaProcessor.java:2074)
	at org.eclipse.jdt.internal.core.DeltaProcessingState.resourceChanged(DeltaProcessingState.java:477)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:299)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:289)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:152)
	at org.eclipse.core.internal.resources.Workspace.broadcastPostChange(Workspace.java:373)
	at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:1470)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:46)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
Caused by: java.io.FileNotFoundException: /Users/admin/Desktop/main/.metadata/.plugins/org.eclipse.recommenders.types.rcp/indexes/TaskScheduler/_2h.fnm (No such file or directory)
	at java.io.RandomAccessFile.open(Native Method)
	at java.io.RandomAccessFile.<init>(RandomAccessFile.java:241)
	at org.apache.lucene.store.SimpleFSDirectory$SimpleFSIndexInput$Descriptor.<init>(SimpleFSDirectory.java:70)
	at org.apache.lucene.store.SimpleFSDirectory$SimpleFSIndexInput.<init>(SimpleFSDirectory.java:97)
	at org.apache.lucene.store.NIOFSDirectory$NIOFSIndexInput.<init>(NIOFSDirectory.java:92)
	at org.apache.lucene.store.NIOFSDirectory.openInput(NIOFSDirectory.java:79)
	at org.apache.lucene.store.FSDirectory.openInput(FSDirectory.java:345)
	at org.apache.lucene.index.FieldInfos.<init>(FieldInfos.java:74)
	at org.apache.lucene.index.SegmentCoreReaders.<init>(SegmentCoreReaders.java:73)
	at org.apache.lucene.index.SegmentReader.get(SegmentReader.java:115)
	at org.apache.lucene.index.SegmentReader.get(SegmentReader.java:93)
	at org.apache.lucene.index.DirectoryReader.<init>(DirectoryReader.java:113)
	at org.apache.lucene.index.ReadOnlyDirectoryReader.<init>(ReadOnlyDirectoryReader.java:29)
	at org.apache.lucene.index.DirectoryReader$1.doBody(DirectoryReader.java:81)
	at org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:754)
	at org.apache.lucene.index.DirectoryReader.open(DirectoryReader.java:75)
	at org.apache.lucene.index.IndexReader.open(IndexReader.java:462)
	at org.apache.lucene.index.IndexReader.open(IndexReader.java:308)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.createReader(ProjectTypesIndex.java:301)
	... 23 more

!ENTRY org.eclipse.jdt.core 4 2 2016-04-11 08:51:14.079
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core".
!STACK 0
java.lang.RuntimeException: java.io.FileNotFoundException: /Users/admin/Desktop/main/.metadata/.plugins/org.eclipse.recommenders.types.rcp/indexes/TaskScheduler/_2h.fnm (No such file or directory)
	at com.google.common.base.Throwables.propagate(Throwables.java:160)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.createReader(ProjectTypesIndex.java:303)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.getSearcher(ProjectTypesIndex.java:282)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.getIndexedRoots(ProjectTypesIndex.java:192)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.needsRebuild(ProjectTypesIndex.java:147)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.suggestRebuild(ProjectTypesIndex.java:464)
	at org.eclipse.recommenders.internal.types.rcp.TypesIndexService.rebuildIndex(TypesIndexService.java:120)
	at org.eclipse.recommenders.internal.types.rcp.TypesIndexService.processElementAdded(TypesIndexService.java:89)
	at org.eclipse.recommenders.internal.types.rcp.TypesIndexService.process(TypesIndexService.java:70)
	at org.eclipse.recommenders.internal.types.rcp.TypesIndexService.process(TypesIndexService.java:63)
	at org.eclipse.recommenders.internal.types.rcp.TypesIndexService.process(TypesIndexService.java:63)
	at org.eclipse.recommenders.internal.types.rcp.TypesIndexService.elementChanged(TypesIndexService.java:49)
	at org.eclipse.jdt.internal.core.DeltaProcessor$3.run(DeltaProcessor.java:1662)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.core.DeltaProcessor.notifyListeners(DeltaProcessor.java:1652)
	at org.eclipse.jdt.internal.core.DeltaProcessor.firePostChangeDelta(DeltaProcessor.java:1486)
	at org.eclipse.jdt.internal.core.DeltaProcessor.fire(DeltaProcessor.java:1462)
	at org.eclipse.jdt.internal.core.DeltaProcessor.resourceChanged(DeltaProcessor.java:2074)
	at org.eclipse.jdt.internal.core.DeltaProcessingState.resourceChanged(DeltaProcessingState.java:477)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:299)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:289)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:152)
	at org.eclipse.core.internal.resources.Workspace.broadcastPostChange(Workspace.java:373)
	at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:1470)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:46)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
Caused by: java.io.FileNotFoundException: /Users/admin/Desktop/main/.metadata/.plugins/org.eclipse.recommenders.types.rcp/indexes/TaskScheduler/_2h.fnm (No such file or directory)
	at java.io.RandomAccessFile.open(Native Method)
	at java.io.RandomAccessFile.<init>(RandomAccessFile.java:241)
	at org.apache.lucene.store.SimpleFSDirectory$SimpleFSIndexInput$Descriptor.<init>(SimpleFSDirectory.java:70)
	at org.apache.lucene.store.SimpleFSDirectory$SimpleFSIndexInput.<init>(SimpleFSDirectory.java:97)
	at org.apache.lucene.store.NIOFSDirectory$NIOFSIndexInput.<init>(NIOFSDirectory.java:92)
	at org.apache.lucene.store.NIOFSDirectory.openInput(NIOFSDirectory.java:79)
	at org.apache.lucene.store.FSDirectory.openInput(FSDirectory.java:345)
	at org.apache.lucene.index.FieldInfos.<init>(FieldInfos.java:74)
	at org.apache.lucene.index.SegmentCoreReaders.<init>(SegmentCoreReaders.java:73)
	at org.apache.lucene.index.SegmentReader.get(SegmentReader.java:115)
	at org.apache.lucene.index.SegmentReader.get(SegmentReader.java:93)
	at org.apache.lucene.index.DirectoryReader.<init>(DirectoryReader.java:113)
	at org.apache.lucene.index.ReadOnlyDirectoryReader.<init>(ReadOnlyDirectoryReader.java:29)
	at org.apache.lucene.index.DirectoryReader$1.doBody(DirectoryReader.java:81)
	at org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:754)
	at org.apache.lucene.index.DirectoryReader.open(DirectoryReader.java:75)
	at org.apache.lucene.index.IndexReader.open(IndexReader.java:462)
	at org.apache.lucene.index.IndexReader.open(IndexReader.java:308)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.createReader(ProjectTypesIndex.java:301)
	... 25 more

!ENTRY org.eclipse.jdt.core 4 4 2016-04-11 08:51:14.095
!MESSAGE Exception occurred in listener of Java element change notification
!STACK 0
java.lang.RuntimeException: java.io.FileNotFoundException: /Users/admin/Desktop/main/.metadata/.plugins/org.eclipse.recommenders.types.rcp/indexes/TaskScheduler/_2h.fnm (No such file or directory)
	at com.google.common.base.Throwables.propagate(Throwables.java:160)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.createReader(ProjectTypesIndex.java:303)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.getSearcher(ProjectTypesIndex.java:282)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.getIndexedRoots(ProjectTypesIndex.java:192)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.needsRebuild(ProjectTypesIndex.java:147)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.suggestRebuild(ProjectTypesIndex.java:464)
	at org.eclipse.recommenders.internal.types.rcp.TypesIndexService.rebuildIndex(TypesIndexService.java:120)
	at org.eclipse.recommenders.internal.types.rcp.TypesIndexService.processElementAdded(TypesIndexService.java:89)
	at org.eclipse.recommenders.internal.types.rcp.TypesIndexService.process(TypesIndexService.java:70)
	at org.eclipse.recommenders.internal.types.rcp.TypesIndexService.process(TypesIndexService.java:63)
	at org.eclipse.recommenders.internal.types.rcp.TypesIndexService.process(TypesIndexService.java:63)
	at org.eclipse.recommenders.internal.types.rcp.TypesIndexService.elementChanged(TypesIndexService.java:49)
	at org.eclipse.jdt.internal.core.DeltaProcessor$3.run(DeltaProcessor.java:1662)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.core.DeltaProcessor.notifyListeners(DeltaProcessor.java:1652)
	at org.eclipse.jdt.internal.core.DeltaProcessor.firePostChangeDelta(DeltaProcessor.java:1486)
	at org.eclipse.jdt.internal.core.DeltaProcessor.fire(DeltaProcessor.java:1462)
	at org.eclipse.jdt.internal.core.DeltaProcessor.resourceChanged(DeltaProcessor.java:2074)
	at org.eclipse.jdt.internal.core.DeltaProcessingState.resourceChanged(DeltaProcessingState.java:477)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:299)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:289)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:152)
	at org.eclipse.core.internal.resources.Workspace.broadcastPostChange(Workspace.java:373)
	at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:1470)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:46)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
Caused by: java.io.FileNotFoundException: /Users/admin/Desktop/main/.metadata/.plugins/org.eclipse.recommenders.types.rcp/indexes/TaskScheduler/_2h.fnm (No such file or directory)
	at java.io.RandomAccessFile.open(Native Method)
	at java.io.RandomAccessFile.<init>(RandomAccessFile.java:241)
	at org.apache.lucene.store.SimpleFSDirectory$SimpleFSIndexInput$Descriptor.<init>(SimpleFSDirectory.java:70)
	at org.apache.lucene.store.SimpleFSDirectory$SimpleFSIndexInput.<init>(SimpleFSDirectory.java:97)
	at org.apache.lucene.store.NIOFSDirectory$NIOFSIndexInput.<init>(NIOFSDirectory.java:92)
	at org.apache.lucene.store.NIOFSDirectory.openInput(NIOFSDirectory.java:79)
	at org.apache.lucene.store.FSDirectory.openInput(FSDirectory.java:345)
	at org.apache.lucene.index.FieldInfos.<init>(FieldInfos.java:74)
	at org.apache.lucene.index.SegmentCoreReaders.<init>(SegmentCoreReaders.java:73)
	at org.apache.lucene.index.SegmentReader.get(SegmentReader.java:115)
	at org.apache.lucene.index.SegmentReader.get(SegmentReader.java:93)
	at org.apache.lucene.index.DirectoryReader.<init>(DirectoryReader.java:113)
	at org.apache.lucene.index.ReadOnlyDirectoryReader.<init>(ReadOnlyDirectoryReader.java:29)
	at org.apache.lucene.index.DirectoryReader$1.doBody(DirectoryReader.java:81)
	at org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:754)
	at org.apache.lucene.index.DirectoryReader.open(DirectoryReader.java:75)
	at org.apache.lucene.index.IndexReader.open(IndexReader.java:462)
	at org.apache.lucene.index.IndexReader.open(IndexReader.java:308)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.createReader(ProjectTypesIndex.java:301)
	... 25 more

!ENTRY org.eclipse.wb.core 4 4 2016-04-11 10:29:45.655
!MESSAGE Designer [1.8.0.r45x201506110820.201604111029]: Execution flow problem. {
  EventQueue.invokeLater(new Runnable(){
    public void run(){
      try {
        taskManager=TaskManager.getInstance();
        ApplicationWindow window=new ApplicationWindow();
        window.frame.setVisible(true);
        window.frame.setResizable(false);
      }
 catch (      Exception e) {
        e.printStackTrace();
      }
    }
  }
);
}
 expected, but {
  frame=new JFrame();
  frame.setBounds(100,100,828,580);
  frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
  frame.getContentPane().setLayout(null);
  txtAreaHelp=new JTextPane();
  txtAreaHelp.setForeground(new Color(102,205,170));
  txtAreaHelp.setFont(new Font("Open Sans",Font.PLAIN,13));
  txtAreaHelp.setBounds(30,100,499,372);
  frame.getContentPane().add(txtAreaHelp);
  txtAreaHelp.setText("add [NAME] || [DD/MM/YYYY] [HH:MM] [H:M]\nadd [NAME] || [DD/MM/YYYY] [HH:MM]\nadd [NAME] || [DD/MM/YYYY]\nadd [NAME]\ndelete [INDEX]\ndone [INDEX]\nedit [INDEX] name [STRING]\nedit [INDEX] duration [STRING]\nedit [INDEX] datetime [STRING]\nedit [INDEX] all [NAME] [DATE] [TIME] [DURATION]\nclear\ndisplay [INDEX]\nsearch name [STRING]\nsearch date [DD/MM/YYYY]\nundo\nhome\nhistory\nhelp\nsort [NAME/DATE/START/END/DURATION/DEFAULT]\nfilter [INCOMPLETE/COMPLETE/SHORT/MEDIUM/LONG/SOON/ALL]\n");
  JPanel panel_3=new JPanel();
  panel_3.setBorder(new LineBorder(SystemColor.textHighlight));
  panel_3.setBackground(new Color(255,255,255));
  panel_3.setBounds(20,80,516,422);
  frame.getContentPane().add(panel_3);
  panel_3.setLayout(null);
  columns=new String[]{"Number","Task Name","Task Duration","Task Date and Time","Task Completion"};
  data=new ArrayList<Object[]>();
  Object[][] dataArray=toArray(data);
  table=new JTable(dataArray,columns){
    private static final long serialVersionUID=1L;
    public boolean isCellEditable(    int row,    int column){
      return false;
    }
  }
;
  table.addMouseListener(new MouseAdapter(){
    @Override public void mousePressed(    MouseEvent e){
      selectedListIndex=table.getSelectedRow();
      setTaskDetailView();
    }
    @Override public void mouseClicked(    MouseEvent e){
      selectedListIndex=table.getSelectedRow();
      setTaskDetailView();
    }
  }
);
  refreshTableValues();
  selectedListIndex=0;
  table.setRowHeight(25);
  table.setSelectionBackground(new Color(102,205,170));
  table.setForeground(Color.GRAY);
  table.setFont(new Font("Open Sans",Font.PLAIN,13));
  table.setSize(496,368);
  table.setLocation(11,44);
  table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  scrollPane2=new JScrollPane(table);
  table.setFillsViewportHeight(true);
  scrollPane2.setBounds(11,44,496,368);
  scrollPane2.setViewportView(table);
  panel_3.add(scrollPane2);
  filterDropdown=new JComboBox<String>();
  filterDropdown.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      String filterString;
switch (filterDropdown.getSelectedIndex()) {
case 0:
        filterString="filter all";
      break;
case 1:
    filterString="filter incomplete";
  break;
case 2:
filterString="filter complete";
break;
case 3:
filterString="filter short";
break;
case 4:
filterString="filter medium";
break;
case 5:
filterString="filter long";
break;
case 6:
filterString="filter soon";
break;
default :
filterString="";
break;
}
try {
taskManager.executeCommand(filterString,window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
refreshWindow();
}
}
);
filterDropdown.setBackground(new Color(255,255,255));
filterDropdown.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
filterDropdown.setForeground(new Color(60,179,113));
filterDropdown.setModel(new DefaultComboBoxModel<String>(new String[]{"Filter by...","Incomplete Tasks","Complete Tasks","Short Tasks (<1 hour)","Medium Tasks (1 - 3 hours)","Long Tasks (3+ hours)","Tasks Ending Soon"}));
filterDropdown.setFont(new Font("Open Sans",Font.PLAIN,15));
filterDropdown.setBounds(6,6,258,36);
panel_3.add(filterDropdown);
sortDropdown=new JComboBox<String>();
sortDropdown.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
String sortString;
switch (sortDropdown.getSelectedIndex()) {
case 0:
sortString="sort default";
break;
case 1:
sortString="sort name";
break;
case 2:
sortString="sort date";
break;
case 3:
sortString="sort start";
break;
case 4:
sortString="sort end";
break;
case 5:
sortString="sort duration";
break;
default :
sortString="";
break;
}
try {
taskManager.executeCommand(sortString,window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
}
}
);
sortDropdown.setOpaque(true);
sortDropdown.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
sortDropdown.setModel(new DefaultComboBoxModel<String>(new String[]{"Sort By...","Name","Date","Starting Time","Ending Time","Duration"}));
sortDropdown.setForeground(new Color(60,179,113));
sortDropdown.setFont(new Font("Open Sans",Font.PLAIN,15));
sortDropdown.setBackground(Color.WHITE);
sortDropdown.setBounds(261,6,249,36);
panel_3.add(sortDropdown);
historyList=new JList<String>();
historyList.setEnabled(false);
historyList.setForeground(new Color(60,179,113));
historyList.setFont(new Font("Open Sans",Font.PLAIN,13));
historyList.setBounds(6,6,501,406);
historyList.setModel(new AbstractListModel<String>(){
private static final long serialVersionUID=1L;
List<String> history=taskManager.getHistoryList();
public int getSize(){
return history.size();
}
public String getElementAt(int index){
return history.get(index);
}
}
);
panel_3.add(historyList);
JPanel panel_1=new JPanel();
panel_1.setBackground(new Color(51,204,153));
panel_1.setBounds(0,0,828,64);
frame.getContentPane().add(panel_1);
panel_1.setLayout(null);
JLabel lblSnaptask=new JLabel("snaptask");
lblSnaptask.setFont(new Font("Open Sans",Font.PLAIN,48));
lblSnaptask.setForeground(new Color(255,255,255));
lblSnaptask.setBounds(16,0,216,58);
panel_1.add(lblSnaptask);
JPanel searchLine=new JPanel();
searchLine.setBackground(new Color(255,165,0));
searchLine.setBorder(null);
searchLine.setBounds(556,44,251,6);
searchLine.setEnabled(false);
panel_1.add(searchLine);
searchField=new JTextField();
searchField.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
String searchString=searchField.getText();
try {
taskManager.executeCommand(searchString,window);
}
 catch (FileNotFoundException e1) {
warnInvalid("Search unable to be performed");
e1.printStackTrace();
}
}
}
);
searchField.addFocusListener(new FocusAdapter(){
@Override public void focusGained(FocusEvent e){
if (firstFocusSearchText) {
searchField.setText("");
firstFocusSearchText=false;
}
}
}
);
searchField.setFont(new Font("Open Sans",Font.PLAIN,15));
searchField.setForeground(new Color(169,169,169));
searchField.setToolTipText("Search for tasks!");
searchField.setText("Search for tasks!");
searchField.setBounds(552,15,258,36);
panel_1.add(searchField);
searchField.setColumns(10);
homeButton=new JButton("\n");
homeButton.setOpaque(true);
homeButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=0;
refreshButtons();
}
}
);
homeButton.setIcon(new ImageIcon("/Users/admin/Desktop/ListIcon.png"));
homeButton.setBorder(new EmptyBorder(0,0,0,0));
homeButton.setBackground(new Color(0,204,153));
homeButton.setBounds(237,0,66,64);
panel_1.add(homeButton);
historyButton=new JButton("\n");
historyButton.setOpaque(true);
historyButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=1;
refreshButtons();
}
}
);
historyButton.setIcon(new ImageIcon("/Users/admin/Desktop/HistoryIcon.png"));
historyButton.setBorder(new EmptyBorder(0,0,0,0));
historyButton.setBackground(new Color(0,204,153));
historyButton.setBounds(312,0,66,64);
panel_1.add(historyButton);
helpButton=new JButton("\n");
helpButton.setOpaque(true);
helpButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=2;
refreshButtons();
}
}
);
helpButton.setIcon(new ImageIcon("/Users/admin/Desktop/InfoImage.png"));
helpButton.setBorder(new EmptyBorder(0,0,0,0));
helpButton.setBackground(new Color(0,204,153));
helpButton.setBounds(391,0,66,64);
panel_1.add(helpButton);
JPanel panel=new JPanel();
panel.setBorder(new LineBorder(SystemColor.textHighlight));
panel.setBackground(new Color(255,255,255));
panel.setBounds(557,80,251,422);
frame.getContentPane().add(panel);
panel.setLayout(null);
warningBackground=new JPanel();
warningBackground.setEnabled(false);
warningBackground.setBorder(null);
warningBackground.setBackground(new Color(255,165,0));
warningBackground.setBounds(0,20,252,29);
panel.add(warningBackground);
warningBackground.setLayout(null);
txtLabelStatus=new JTextPane();
txtLabelStatus.setDisabledTextColor(SystemColor.text);
txtLabelStatus.setSelectionColor(SystemColor.activeCaption);
txtLabelStatus.setEnabled(false);
txtLabelStatus.setBounds(72,0,105,28);
txtLabelStatus.setFont(new Font("Open Sans",Font.PLAIN,20));
txtLabelStatus.setForeground(new Color(255,255,255));
txtLabelStatus.setBackground(new Color(255,165,0));
warningBackground.add(txtLabelStatus);
txtAreaDescription=new JTextPane();
txtAreaDescription.setFont(new Font("Open Sans",Font.PLAIN,14));
txtAreaDescription.setForeground(new Color(60,179,113));
txtAreaDescription.setBounds(10,232,208,159);
txtAreaDescription.setEnabled(false);
panel.add(txtAreaDescription);
txtAreaTaskDetails=new JTextArea();
txtAreaTaskDetails.setFont(new Font("Open Sans",Font.PLAIN,17));
txtAreaTaskDetails.setForeground(SystemColor.scrollbar);
txtAreaTaskDetails.setBounds(10,61,233,231);
txtAreaTaskDetails.setEnabled(false);
panel.add(txtAreaTaskDetails);
setTaskDetailView();
JPanel taskManageLine=new JPanel();
taskManageLine.setEnabled(false);
taskManageLine.setBorder(null);
taskManageLine.setBackground(new Color(255,165,0));
taskManageLine.setBounds(21,540,786,6);
taskManageLine.setEnabled(false);
frame.getContentPane().add(taskManageLine);
textFieldTaskManage=new JTextField();
textFieldTaskManage.addFocusListener(new FocusAdapter(){
@Override public void focusGained(FocusEvent e){
if (firstFocusManageText) {
textFieldTaskManage.setText("");
firstFocusManageText=false;
}
}
}
);
textFieldTaskManage.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
try {
taskManager.executeCommand(textFieldTaskManage.getText(),window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
refreshWindow();
textFieldTaskManage.setText("");
}
}
);
textFieldTaskManage.setDisabledTextColor(new Color(128,128,128));
textFieldTaskManage.setForeground(new Color(169,169,169));
textFieldTaskManage.setFont(new Font("Open Sans",Font.PLAIN,15));
textFieldTaskManage.setToolTipText("Manage your tasks here!");
textFieldTaskManage.setColumns(10);
textFieldTaskManage.setBounds(18,510,792,36);
textFieldTaskManage.setText("Manage your tasks here!");
frame.getContentPane().add(textFieldTaskManage);
refreshButtons();
}
 found.
!STACK 0
org.eclipse.wb.internal.core.utils.check.AssertionFailedException: Execution flow problem. {
  EventQueue.invokeLater(new Runnable(){
    public void run(){
      try {
        taskManager=TaskManager.getInstance();
        ApplicationWindow window=new ApplicationWindow();
        window.frame.setVisible(true);
        window.frame.setResizable(false);
      }
 catch (      Exception e) {
        e.printStackTrace();
      }
    }
  }
);
}
 expected, but {
  frame=new JFrame();
  frame.setBounds(100,100,828,580);
  frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
  frame.getContentPane().setLayout(null);
  txtAreaHelp=new JTextPane();
  txtAreaHelp.setForeground(new Color(102,205,170));
  txtAreaHelp.setFont(new Font("Open Sans",Font.PLAIN,13));
  txtAreaHelp.setBounds(30,100,499,372);
  frame.getContentPane().add(txtAreaHelp);
  txtAreaHelp.setText("add [NAME] || [DD/MM/YYYY] [HH:MM] [H:M]\nadd [NAME] || [DD/MM/YYYY] [HH:MM]\nadd [NAME] || [DD/MM/YYYY]\nadd [NAME]\ndelete [INDEX]\ndone [INDEX]\nedit [INDEX] name [STRING]\nedit [INDEX] duration [STRING]\nedit [INDEX] datetime [STRING]\nedit [INDEX] all [NAME] [DATE] [TIME] [DURATION]\nclear\ndisplay [INDEX]\nsearch name [STRING]\nsearch date [DD/MM/YYYY]\nundo\nhome\nhistory\nhelp\nsort [NAME/DATE/START/END/DURATION/DEFAULT]\nfilter [INCOMPLETE/COMPLETE/SHORT/MEDIUM/LONG/SOON/ALL]\n");
  JPanel panel_3=new JPanel();
  panel_3.setBorder(new LineBorder(SystemColor.textHighlight));
  panel_3.setBackground(new Color(255,255,255));
  panel_3.setBounds(20,80,516,422);
  frame.getContentPane().add(panel_3);
  panel_3.setLayout(null);
  columns=new String[]{"Number","Task Name","Task Duration","Task Date and Time","Task Completion"};
  data=new ArrayList<Object[]>();
  Object[][] dataArray=toArray(data);
  table=new JTable(dataArray,columns){
    private static final long serialVersionUID=1L;
    public boolean isCellEditable(    int row,    int column){
      return false;
    }
  }
;
  table.addMouseListener(new MouseAdapter(){
    @Override public void mousePressed(    MouseEvent e){
      selectedListIndex=table.getSelectedRow();
      setTaskDetailView();
    }
    @Override public void mouseClicked(    MouseEvent e){
      selectedListIndex=table.getSelectedRow();
      setTaskDetailView();
    }
  }
);
  refreshTableValues();
  selectedListIndex=0;
  table.setRowHeight(25);
  table.setSelectionBackground(new Color(102,205,170));
  table.setForeground(Color.GRAY);
  table.setFont(new Font("Open Sans",Font.PLAIN,13));
  table.setSize(496,368);
  table.setLocation(11,44);
  table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  scrollPane2=new JScrollPane(table);
  table.setFillsViewportHeight(true);
  scrollPane2.setBounds(11,44,496,368);
  scrollPane2.setViewportView(table);
  panel_3.add(scrollPane2);
  filterDropdown=new JComboBox<String>();
  filterDropdown.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      String filterString;
switch (filterDropdown.getSelectedIndex()) {
case 0:
        filterString="filter all";
      break;
case 1:
    filterString="filter incomplete";
  break;
case 2:
filterString="filter complete";
break;
case 3:
filterString="filter short";
break;
case 4:
filterString="filter medium";
break;
case 5:
filterString="filter long";
break;
case 6:
filterString="filter soon";
break;
default :
filterString="";
break;
}
try {
taskManager.executeCommand(filterString,window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
refreshWindow();
}
}
);
filterDropdown.setBackground(new Color(255,255,255));
filterDropdown.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
filterDropdown.setForeground(new Color(60,179,113));
filterDropdown.setModel(new DefaultComboBoxModel<String>(new String[]{"Filter by...","Incomplete Tasks","Complete Tasks","Short Tasks (<1 hour)","Medium Tasks (1 - 3 hours)","Long Tasks (3+ hours)","Tasks Ending Soon"}));
filterDropdown.setFont(new Font("Open Sans",Font.PLAIN,15));
filterDropdown.setBounds(6,6,258,36);
panel_3.add(filterDropdown);
sortDropdown=new JComboBox<String>();
sortDropdown.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
String sortString;
switch (sortDropdown.getSelectedIndex()) {
case 0:
sortString="sort default";
break;
case 1:
sortString="sort name";
break;
case 2:
sortString="sort date";
break;
case 3:
sortString="sort start";
break;
case 4:
sortString="sort end";
break;
case 5:
sortString="sort duration";
break;
default :
sortString="";
break;
}
try {
taskManager.executeCommand(sortString,window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
}
}
);
sortDropdown.setOpaque(true);
sortDropdown.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
sortDropdown.setModel(new DefaultComboBoxModel<String>(new String[]{"Sort By...","Name","Date","Starting Time","Ending Time","Duration"}));
sortDropdown.setForeground(new Color(60,179,113));
sortDropdown.setFont(new Font("Open Sans",Font.PLAIN,15));
sortDropdown.setBackground(Color.WHITE);
sortDropdown.setBounds(261,6,249,36);
panel_3.add(sortDropdown);
historyList=new JList<String>();
historyList.setEnabled(false);
historyList.setForeground(new Color(60,179,113));
historyList.setFont(new Font("Open Sans",Font.PLAIN,13));
historyList.setBounds(6,6,501,406);
historyList.setModel(new AbstractListModel<String>(){
private static final long serialVersionUID=1L;
List<String> history=taskManager.getHistoryList();
public int getSize(){
return history.size();
}
public String getElementAt(int index){
return history.get(index);
}
}
);
panel_3.add(historyList);
JPanel panel_1=new JPanel();
panel_1.setBackground(new Color(51,204,153));
panel_1.setBounds(0,0,828,64);
frame.getContentPane().add(panel_1);
panel_1.setLayout(null);
JLabel lblSnaptask=new JLabel("snaptask");
lblSnaptask.setFont(new Font("Open Sans",Font.PLAIN,48));
lblSnaptask.setForeground(new Color(255,255,255));
lblSnaptask.setBounds(16,0,216,58);
panel_1.add(lblSnaptask);
JPanel searchLine=new JPanel();
searchLine.setBackground(new Color(255,165,0));
searchLine.setBorder(null);
searchLine.setBounds(556,44,251,6);
searchLine.setEnabled(false);
panel_1.add(searchLine);
searchField=new JTextField();
searchField.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
String searchString=searchField.getText();
try {
taskManager.executeCommand(searchString,window);
}
 catch (FileNotFoundException e1) {
warnInvalid("Search unable to be performed");
e1.printStackTrace();
}
}
}
);
searchField.addFocusListener(new FocusAdapter(){
@Override public void focusGained(FocusEvent e){
if (firstFocusSearchText) {
searchField.setText("");
firstFocusSearchText=false;
}
}
}
);
searchField.setFont(new Font("Open Sans",Font.PLAIN,15));
searchField.setForeground(new Color(169,169,169));
searchField.setToolTipText("Search for tasks!");
searchField.setText("Search for tasks!");
searchField.setBounds(552,15,258,36);
panel_1.add(searchField);
searchField.setColumns(10);
homeButton=new JButton("\n");
homeButton.setOpaque(true);
homeButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=0;
refreshButtons();
}
}
);
homeButton.setIcon(new ImageIcon("/Users/admin/Desktop/ListIcon.png"));
homeButton.setBorder(new EmptyBorder(0,0,0,0));
homeButton.setBackground(new Color(0,204,153));
homeButton.setBounds(237,0,66,64);
panel_1.add(homeButton);
historyButton=new JButton("\n");
historyButton.setOpaque(true);
historyButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=1;
refreshButtons();
}
}
);
historyButton.setIcon(new ImageIcon("/Users/admin/Desktop/HistoryIcon.png"));
historyButton.setBorder(new EmptyBorder(0,0,0,0));
historyButton.setBackground(new Color(0,204,153));
historyButton.setBounds(312,0,66,64);
panel_1.add(historyButton);
helpButton=new JButton("\n");
helpButton.setOpaque(true);
helpButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=2;
refreshButtons();
}
}
);
helpButton.setIcon(new ImageIcon("/Users/admin/Desktop/InfoImage.png"));
helpButton.setBorder(new EmptyBorder(0,0,0,0));
helpButton.setBackground(new Color(0,204,153));
helpButton.setBounds(391,0,66,64);
panel_1.add(helpButton);
JPanel panel=new JPanel();
panel.setBorder(new LineBorder(SystemColor.textHighlight));
panel.setBackground(new Color(255,255,255));
panel.setBounds(557,80,251,422);
frame.getContentPane().add(panel);
panel.setLayout(null);
warningBackground=new JPanel();
warningBackground.setEnabled(false);
warningBackground.setBorder(null);
warningBackground.setBackground(new Color(255,165,0));
warningBackground.setBounds(0,20,252,29);
panel.add(warningBackground);
warningBackground.setLayout(null);
txtLabelStatus=new JTextPane();
txtLabelStatus.setDisabledTextColor(SystemColor.text);
txtLabelStatus.setSelectionColor(SystemColor.activeCaption);
txtLabelStatus.setEnabled(false);
txtLabelStatus.setBounds(72,0,105,28);
txtLabelStatus.setFont(new Font("Open Sans",Font.PLAIN,20));
txtLabelStatus.setForeground(new Color(255,255,255));
txtLabelStatus.setBackground(new Color(255,165,0));
warningBackground.add(txtLabelStatus);
txtAreaDescription=new JTextPane();
txtAreaDescription.setFont(new Font("Open Sans",Font.PLAIN,14));
txtAreaDescription.setForeground(new Color(60,179,113));
txtAreaDescription.setBounds(10,232,208,159);
txtAreaDescription.setEnabled(false);
panel.add(txtAreaDescription);
txtAreaTaskDetails=new JTextArea();
txtAreaTaskDetails.setFont(new Font("Open Sans",Font.PLAIN,17));
txtAreaTaskDetails.setForeground(SystemColor.scrollbar);
txtAreaTaskDetails.setBounds(10,61,233,231);
txtAreaTaskDetails.setEnabled(false);
panel.add(txtAreaTaskDetails);
setTaskDetailView();
JPanel taskManageLine=new JPanel();
taskManageLine.setEnabled(false);
taskManageLine.setBorder(null);
taskManageLine.setBackground(new Color(255,165,0));
taskManageLine.setBounds(21,540,786,6);
taskManageLine.setEnabled(false);
frame.getContentPane().add(taskManageLine);
textFieldTaskManage=new JTextField();
textFieldTaskManage.addFocusListener(new FocusAdapter(){
@Override public void focusGained(FocusEvent e){
if (firstFocusManageText) {
textFieldTaskManage.setText("");
firstFocusManageText=false;
}
}
}
);
textFieldTaskManage.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
try {
taskManager.executeCommand(textFieldTaskManage.getText(),window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
refreshWindow();
textFieldTaskManage.setText("");
}
}
);
textFieldTaskManage.setDisabledTextColor(new Color(128,128,128));
textFieldTaskManage.setForeground(new Color(169,169,169));
textFieldTaskManage.setFont(new Font("Open Sans",Font.PLAIN,15));
textFieldTaskManage.setToolTipText("Manage your tasks here!");
textFieldTaskManage.setColumns(10);
textFieldTaskManage.setBounds(18,510,792,36);
textFieldTaskManage.setText("Manage your tasks here!");
frame.getContentPane().add(textFieldTaskManage);
refreshButtons();
}
 found.
	at org.eclipse.wb.internal.core.utils.check.Assert.fail(Assert.java:225)
	at org.eclipse.wb.internal.core.utils.check.Assert.isTrue(Assert.java:291)
	at org.eclipse.wb.core.eval.ExecutionFlowDescription.leaveStatement(ExecutionFlowDescription.java:152)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:317)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.prepareAssignmentInformation(ExecutionFlowUtils.java:784)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.getVariableCachedValue(ExecutionFlowUtils.java:753)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.getVariableCachedList_notNull(ExecutionFlowUtils.java:707)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.getReferences(ExecutionFlowUtils.java:669)
	at org.eclipse.wb.internal.core.model.variable.AbstractNamedVariableSupport.getReferences(AbstractNamedVariableSupport.java:184)
	at org.eclipse.wb.internal.core.model.variable.FieldUniqueVariableSupport.canConvertFieldToLocal(FieldUniqueVariableSupport.java:97)
	at org.eclipse.wb.internal.core.editor.structure.property.JavaPropertiesToolBarContributor.addVariableConvertAction(JavaPropertiesToolBarContributor.java:101)
	at org.eclipse.wb.internal.core.editor.structure.property.JavaPropertiesToolBarContributor.contributeToolBar(JavaPropertiesToolBarContributor.java:54)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage$2$1.run(ComponentsPropertiesPage.java:186)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runLog(ExecutionUtils.java:106)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage$2.run(ComponentsPropertiesPage.java:184)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runLog(ExecutionUtils.java:106)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage.updateActions(ComponentsPropertiesPage.java:160)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage.access$22(ComponentsPropertiesPage.java:159)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage$12.run(ComponentsPropertiesPage.java:538)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runLog(ExecutionUtils.java:106)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage.refreshProperties(ComponentsPropertiesPage.java:530)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage.setSelection(ComponentsPropertiesPage.java:321)
	at org.eclipse.wb.internal.core.editor.structure.DesignComponentsComposite$1.selectionChanged(DesignComponentsComposite.java:72)
	at org.eclipse.wb.internal.core.utils.gef.EditPartsSelectionProvider.fireSelectionChanged(EditPartsSelectionProvider.java:111)
	at org.eclipse.wb.internal.core.utils.gef.EditPartsSelectionProvider.access$0(EditPartsSelectionProvider.java:102)
	at org.eclipse.wb.internal.core.utils.gef.EditPartsSelectionProvider$1.selectionChanged(EditPartsSelectionProvider.java:40)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.fireSelectionChanged(AbstractEditPartViewer.java:202)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.setSelection(AbstractEditPartViewer.java:262)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.setSelection(AbstractEditPartViewer.java:193)
	at org.eclipse.wb.internal.gef.tree.TreeViewer$1.widgetSelected(TreeViewer.java:180)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:248)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1491)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1514)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1499)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1299)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4072)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3698)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.waitEventLoop(ExecutionUtils.java:71)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:168)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runLaterAndWait(SwingUtils.java:73)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.execRefreshOperation(ComponentInfo.java:119)
	at org.eclipse.wb.core.model.ObjectInfo.refresh(ObjectInfo.java:482)
	at org.eclipse.wb.core.model.ObjectInfo.endEdit(ObjectInfo.java:446)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:325)
	at org.eclipse.wb.core.gef.command.EditCommand.execute(EditCommand.java:50)
	at org.eclipse.wb.internal.gef.core.EditDomain.executeCommand(EditDomain.java:59)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.executeCommand(TreeDropListener.java:265)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.drop(TreeDropListener.java:103)
	at org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:91)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1491)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1514)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1499)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1299)
	at org.eclipse.swt.dnd.DropTarget.drop(DropTarget.java:728)
	at org.eclipse.swt.dnd.DropTarget.outlineView_acceptDrop_item_childIndex(DropTarget.java:746)
	at org.eclipse.swt.dnd.DropTarget.dropTargetProc(DropTarget.java:471)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.dnd.DropTarget.dndCallSuper(DropTarget.java:210)
	at org.eclipse.swt.dnd.DropTarget.performDragOperation(DropTarget.java:739)
	at org.eclipse.swt.dnd.DropTarget.dropTargetProc(DropTarget.java:456)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:227)
	at org.eclipse.swt.widgets.Widget.mouseDownSuper(Widget.java:1121)
	at org.eclipse.swt.widgets.Tree.mouseDownSuper(Tree.java:2047)
	at org.eclipse.swt.widgets.Widget.mouseDown(Widget.java:1113)
	at org.eclipse.swt.widgets.Control.mouseDown(Control.java:2569)
	at org.eclipse.swt.widgets.Tree.mouseDown(Tree.java:2015)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5692)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:227)
	at org.eclipse.swt.widgets.Widget.windowSendEvent(Widget.java:2130)
	at org.eclipse.swt.widgets.Shell.windowSendEvent(Shell.java:2337)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5756)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Display.applicationSendEvent(Display.java:5193)
	at org.eclipse.swt.widgets.Display.applicationProc(Display.java:5342)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSApplication.sendEvent(NSApplication.java:128)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3695)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:1127)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1018)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:156)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:654)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:598)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:139)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:380)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:235)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:669)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:608)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1515)

!ENTRY org.eclipse.wb.core 4 4 2016-04-11 10:29:57.901
!MESSAGE Designer [1.8.0.r45x201506110820.201604111029]: Execution flow problem. {
  EventQueue.invokeLater(new Runnable(){
    public void run(){
      try {
        taskManager=TaskManager.getInstance();
        ApplicationWindow window=new ApplicationWindow();
        window.frame.setVisible(true);
        window.frame.setResizable(false);
      }
 catch (      Exception e) {
        e.printStackTrace();
      }
    }
  }
);
}
 expected, but {
  frame=new JFrame();
  frame.setBounds(100,100,828,580);
  frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
  frame.getContentPane().setLayout(null);
  txtAreaHelp=new JTextPane();
  txtAreaHelp.setForeground(new Color(102,205,170));
  txtAreaHelp.setFont(new Font("Open Sans",Font.PLAIN,13));
  txtAreaHelp.setBounds(30,100,499,372);
  frame.getContentPane().add(txtAreaHelp);
  txtAreaHelp.setText("add [NAME] || [DD/MM/YYYY] [HH:MM] [H:M]\nadd [NAME] || [DD/MM/YYYY] [HH:MM]\nadd [NAME] || [DD/MM/YYYY]\nadd [NAME]\ndelete [INDEX]\ndone [INDEX]\nedit [INDEX] name [STRING]\nedit [INDEX] duration [STRING]\nedit [INDEX] datetime [STRING]\nedit [INDEX] all [NAME] [DATE] [TIME] [DURATION]\nclear\ndisplay [INDEX]\nsearch name [STRING]\nsearch date [DD/MM/YYYY]\nundo\nhome\nhistory\nhelp\nsort [NAME/DATE/START/END/DURATION/DEFAULT]\nfilter [INCOMPLETE/COMPLETE/SHORT/MEDIUM/LONG/SOON/ALL]\n");
  JPanel panel_3=new JPanel();
  panel_3.setBorder(new LineBorder(SystemColor.textHighlight));
  panel_3.setBackground(new Color(255,255,255));
  panel_3.setBounds(20,80,516,422);
  frame.getContentPane().add(panel_3);
  panel_3.setLayout(null);
  columns=new String[]{"Number","Task Name","Task Duration","Task Date and Time","Task Completion"};
  data=new ArrayList<Object[]>();
  Object[][] dataArray=toArray(data);
  table=new JTable(dataArray,columns){
    private static final long serialVersionUID=1L;
    public boolean isCellEditable(    int row,    int column){
      return false;
    }
  }
;
  table.addMouseListener(new MouseAdapter(){
    @Override public void mousePressed(    MouseEvent e){
      selectedListIndex=table.getSelectedRow();
      setTaskDetailView();
    }
    @Override public void mouseClicked(    MouseEvent e){
      selectedListIndex=table.getSelectedRow();
      setTaskDetailView();
    }
  }
);
  refreshTableValues();
  selectedListIndex=0;
  table.setRowHeight(25);
  table.setSelectionBackground(new Color(102,205,170));
  table.setForeground(Color.GRAY);
  table.setFont(new Font("Open Sans",Font.PLAIN,13));
  table.setSize(496,368);
  table.setLocation(11,44);
  table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  scrollPane2=new JScrollPane(table);
  table.setFillsViewportHeight(true);
  scrollPane2.setBounds(11,44,496,368);
  scrollPane2.setViewportView(table);
  panel_3.add(scrollPane2);
  filterDropdown=new JComboBox<String>();
  filterDropdown.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      String filterString;
switch (filterDropdown.getSelectedIndex()) {
case 0:
        filterString="filter all";
      break;
case 1:
    filterString="filter incomplete";
  break;
case 2:
filterString="filter complete";
break;
case 3:
filterString="filter short";
break;
case 4:
filterString="filter medium";
break;
case 5:
filterString="filter long";
break;
case 6:
filterString="filter soon";
break;
default :
filterString="";
break;
}
try {
taskManager.executeCommand(filterString,window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
refreshWindow();
}
}
);
filterDropdown.setBackground(new Color(255,255,255));
filterDropdown.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
filterDropdown.setForeground(new Color(60,179,113));
filterDropdown.setModel(new DefaultComboBoxModel<String>(new String[]{"Filter by...","Incomplete Tasks","Complete Tasks","Short Tasks (<1 hour)","Medium Tasks (1 - 3 hours)","Long Tasks (3+ hours)","Tasks Ending Soon"}));
filterDropdown.setFont(new Font("Open Sans",Font.PLAIN,15));
filterDropdown.setBounds(6,6,258,36);
panel_3.add(filterDropdown);
sortDropdown=new JComboBox<String>();
sortDropdown.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
String sortString;
switch (sortDropdown.getSelectedIndex()) {
case 0:
sortString="sort default";
break;
case 1:
sortString="sort name";
break;
case 2:
sortString="sort date";
break;
case 3:
sortString="sort start";
break;
case 4:
sortString="sort end";
break;
case 5:
sortString="sort duration";
break;
default :
sortString="";
break;
}
try {
taskManager.executeCommand(sortString,window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
}
}
);
sortDropdown.setOpaque(true);
sortDropdown.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
sortDropdown.setModel(new DefaultComboBoxModel<String>(new String[]{"Sort By...","Name","Date","Starting Time","Ending Time","Duration"}));
sortDropdown.setForeground(new Color(60,179,113));
sortDropdown.setFont(new Font("Open Sans",Font.PLAIN,15));
sortDropdown.setBackground(Color.WHITE);
sortDropdown.setBounds(261,6,249,36);
panel_3.add(sortDropdown);
historyList=new JList<String>();
historyList.setBounds(0,0,501,406);
frame.getContentPane().add(historyList);
historyList.setEnabled(false);
historyList.setForeground(new Color(60,179,113));
historyList.setFont(new Font("Open Sans",Font.PLAIN,13));
historyList.setModel(new AbstractListModel<String>(){
private static final long serialVersionUID=1L;
List<String> history=taskManager.getHistoryList();
public int getSize(){
return history.size();
}
public String getElementAt(int index){
return history.get(index);
}
}
);
JPanel panel_1=new JPanel();
panel_1.setBackground(new Color(51,204,153));
panel_1.setBounds(0,0,828,64);
frame.getContentPane().add(panel_1);
panel_1.setLayout(null);
JLabel lblSnaptask=new JLabel("snaptask");
lblSnaptask.setFont(new Font("Open Sans",Font.PLAIN,48));
lblSnaptask.setForeground(new Color(255,255,255));
lblSnaptask.setBounds(16,0,216,58);
panel_1.add(lblSnaptask);
JPanel searchLine=new JPanel();
searchLine.setBackground(new Color(255,165,0));
searchLine.setBorder(null);
searchLine.setBounds(556,44,251,6);
searchLine.setEnabled(false);
panel_1.add(searchLine);
searchField=new JTextField();
searchField.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
String searchString=searchField.getText();
try {
taskManager.executeCommand(searchString,window);
}
 catch (FileNotFoundException e1) {
warnInvalid("Search unable to be performed");
e1.printStackTrace();
}
}
}
);
searchField.addFocusListener(new FocusAdapter(){
@Override public void focusGained(FocusEvent e){
if (firstFocusSearchText) {
searchField.setText("");
firstFocusSearchText=false;
}
}
}
);
searchField.setFont(new Font("Open Sans",Font.PLAIN,15));
searchField.setForeground(new Color(169,169,169));
searchField.setToolTipText("Search for tasks!");
searchField.setText("Search for tasks!");
searchField.setBounds(552,15,258,36);
panel_1.add(searchField);
searchField.setColumns(10);
homeButton=new JButton("\n");
homeButton.setOpaque(true);
homeButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=0;
refreshButtons();
}
}
);
homeButton.setIcon(new ImageIcon("/Users/admin/Desktop/ListIcon.png"));
homeButton.setBorder(new EmptyBorder(0,0,0,0));
homeButton.setBackground(new Color(0,204,153));
homeButton.setBounds(237,0,66,64);
panel_1.add(homeButton);
historyButton=new JButton("\n");
historyButton.setOpaque(true);
historyButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=1;
refreshButtons();
}
}
);
historyButton.setIcon(new ImageIcon("/Users/admin/Desktop/HistoryIcon.png"));
historyButton.setBorder(new EmptyBorder(0,0,0,0));
historyButton.setBackground(new Color(0,204,153));
historyButton.setBounds(312,0,66,64);
panel_1.add(historyButton);
helpButton=new JButton("\n");
helpButton.setOpaque(true);
helpButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=2;
refreshButtons();
}
}
);
helpButton.setIcon(new ImageIcon("/Users/admin/Desktop/InfoImage.png"));
helpButton.setBorder(new EmptyBorder(0,0,0,0));
helpButton.setBackground(new Color(0,204,153));
helpButton.setBounds(391,0,66,64);
panel_1.add(helpButton);
JPanel panel=new JPanel();
panel.setBorder(new LineBorder(SystemColor.textHighlight));
panel.setBackground(new Color(255,255,255));
panel.setBounds(557,80,251,422);
frame.getContentPane().add(panel);
panel.setLayout(null);
warningBackground=new JPanel();
warningBackground.setEnabled(false);
warningBackground.setBorder(null);
warningBackground.setBackground(new Color(255,165,0));
warningBackground.setBounds(0,20,252,29);
panel.add(warningBackground);
warningBackground.setLayout(null);
txtLabelStatus=new JTextPane();
txtLabelStatus.setDisabledTextColor(SystemColor.text);
txtLabelStatus.setSelectionColor(SystemColor.activeCaption);
txtLabelStatus.setEnabled(false);
txtLabelStatus.setBounds(72,0,105,28);
txtLabelStatus.setFont(new Font("Open Sans",Font.PLAIN,20));
txtLabelStatus.setForeground(new Color(255,255,255));
txtLabelStatus.setBackground(new Color(255,165,0));
warningBackground.add(txtLabelStatus);
txtAreaDescription=new JTextPane();
txtAreaDescription.setFont(new Font("Open Sans",Font.PLAIN,14));
txtAreaDescription.setForeground(new Color(60,179,113));
txtAreaDescription.setBounds(10,232,208,159);
txtAreaDescription.setEnabled(false);
panel.add(txtAreaDescription);
txtAreaTaskDetails=new JTextArea();
txtAreaTaskDetails.setFont(new Font("Open Sans",Font.PLAIN,17));
txtAreaTaskDetails.setForeground(SystemColor.scrollbar);
txtAreaTaskDetails.setBounds(10,61,233,231);
txtAreaTaskDetails.setEnabled(false);
panel.add(txtAreaTaskDetails);
setTaskDetailView();
JPanel taskManageLine=new JPanel();
taskManageLine.setEnabled(false);
taskManageLine.setBorder(null);
taskManageLine.setBackground(new Color(255,165,0));
taskManageLine.setBounds(21,540,786,6);
taskManageLine.setEnabled(false);
frame.getContentPane().add(taskManageLine);
textFieldTaskManage=new JTextField();
textFieldTaskManage.addFocusListener(new FocusAdapter(){
@Override public void focusGained(FocusEvent e){
if (firstFocusManageText) {
textFieldTaskManage.setText("");
firstFocusManageText=false;
}
}
}
);
textFieldTaskManage.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
try {
taskManager.executeCommand(textFieldTaskManage.getText(),window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
refreshWindow();
textFieldTaskManage.setText("");
}
}
);
textFieldTaskManage.setDisabledTextColor(new Color(128,128,128));
textFieldTaskManage.setForeground(new Color(169,169,169));
textFieldTaskManage.setFont(new Font("Open Sans",Font.PLAIN,15));
textFieldTaskManage.setToolTipText("Manage your tasks here!");
textFieldTaskManage.setColumns(10);
textFieldTaskManage.setBounds(18,510,792,36);
textFieldTaskManage.setText("Manage your tasks here!");
frame.getContentPane().add(textFieldTaskManage);
refreshButtons();
}
 found.
!STACK 0
org.eclipse.wb.internal.core.utils.check.AssertionFailedException: Execution flow problem. {
  EventQueue.invokeLater(new Runnable(){
    public void run(){
      try {
        taskManager=TaskManager.getInstance();
        ApplicationWindow window=new ApplicationWindow();
        window.frame.setVisible(true);
        window.frame.setResizable(false);
      }
 catch (      Exception e) {
        e.printStackTrace();
      }
    }
  }
);
}
 expected, but {
  frame=new JFrame();
  frame.setBounds(100,100,828,580);
  frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
  frame.getContentPane().setLayout(null);
  txtAreaHelp=new JTextPane();
  txtAreaHelp.setForeground(new Color(102,205,170));
  txtAreaHelp.setFont(new Font("Open Sans",Font.PLAIN,13));
  txtAreaHelp.setBounds(30,100,499,372);
  frame.getContentPane().add(txtAreaHelp);
  txtAreaHelp.setText("add [NAME] || [DD/MM/YYYY] [HH:MM] [H:M]\nadd [NAME] || [DD/MM/YYYY] [HH:MM]\nadd [NAME] || [DD/MM/YYYY]\nadd [NAME]\ndelete [INDEX]\ndone [INDEX]\nedit [INDEX] name [STRING]\nedit [INDEX] duration [STRING]\nedit [INDEX] datetime [STRING]\nedit [INDEX] all [NAME] [DATE] [TIME] [DURATION]\nclear\ndisplay [INDEX]\nsearch name [STRING]\nsearch date [DD/MM/YYYY]\nundo\nhome\nhistory\nhelp\nsort [NAME/DATE/START/END/DURATION/DEFAULT]\nfilter [INCOMPLETE/COMPLETE/SHORT/MEDIUM/LONG/SOON/ALL]\n");
  JPanel panel_3=new JPanel();
  panel_3.setBorder(new LineBorder(SystemColor.textHighlight));
  panel_3.setBackground(new Color(255,255,255));
  panel_3.setBounds(20,80,516,422);
  frame.getContentPane().add(panel_3);
  panel_3.setLayout(null);
  columns=new String[]{"Number","Task Name","Task Duration","Task Date and Time","Task Completion"};
  data=new ArrayList<Object[]>();
  Object[][] dataArray=toArray(data);
  table=new JTable(dataArray,columns){
    private static final long serialVersionUID=1L;
    public boolean isCellEditable(    int row,    int column){
      return false;
    }
  }
;
  table.addMouseListener(new MouseAdapter(){
    @Override public void mousePressed(    MouseEvent e){
      selectedListIndex=table.getSelectedRow();
      setTaskDetailView();
    }
    @Override public void mouseClicked(    MouseEvent e){
      selectedListIndex=table.getSelectedRow();
      setTaskDetailView();
    }
  }
);
  refreshTableValues();
  selectedListIndex=0;
  table.setRowHeight(25);
  table.setSelectionBackground(new Color(102,205,170));
  table.setForeground(Color.GRAY);
  table.setFont(new Font("Open Sans",Font.PLAIN,13));
  table.setSize(496,368);
  table.setLocation(11,44);
  table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  scrollPane2=new JScrollPane(table);
  table.setFillsViewportHeight(true);
  scrollPane2.setBounds(11,44,496,368);
  scrollPane2.setViewportView(table);
  panel_3.add(scrollPane2);
  filterDropdown=new JComboBox<String>();
  filterDropdown.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      String filterString;
switch (filterDropdown.getSelectedIndex()) {
case 0:
        filterString="filter all";
      break;
case 1:
    filterString="filter incomplete";
  break;
case 2:
filterString="filter complete";
break;
case 3:
filterString="filter short";
break;
case 4:
filterString="filter medium";
break;
case 5:
filterString="filter long";
break;
case 6:
filterString="filter soon";
break;
default :
filterString="";
break;
}
try {
taskManager.executeCommand(filterString,window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
refreshWindow();
}
}
);
filterDropdown.setBackground(new Color(255,255,255));
filterDropdown.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
filterDropdown.setForeground(new Color(60,179,113));
filterDropdown.setModel(new DefaultComboBoxModel<String>(new String[]{"Filter by...","Incomplete Tasks","Complete Tasks","Short Tasks (<1 hour)","Medium Tasks (1 - 3 hours)","Long Tasks (3+ hours)","Tasks Ending Soon"}));
filterDropdown.setFont(new Font("Open Sans",Font.PLAIN,15));
filterDropdown.setBounds(6,6,258,36);
panel_3.add(filterDropdown);
sortDropdown=new JComboBox<String>();
sortDropdown.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
String sortString;
switch (sortDropdown.getSelectedIndex()) {
case 0:
sortString="sort default";
break;
case 1:
sortString="sort name";
break;
case 2:
sortString="sort date";
break;
case 3:
sortString="sort start";
break;
case 4:
sortString="sort end";
break;
case 5:
sortString="sort duration";
break;
default :
sortString="";
break;
}
try {
taskManager.executeCommand(sortString,window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
}
}
);
sortDropdown.setOpaque(true);
sortDropdown.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
sortDropdown.setModel(new DefaultComboBoxModel<String>(new String[]{"Sort By...","Name","Date","Starting Time","Ending Time","Duration"}));
sortDropdown.setForeground(new Color(60,179,113));
sortDropdown.setFont(new Font("Open Sans",Font.PLAIN,15));
sortDropdown.setBackground(Color.WHITE);
sortDropdown.setBounds(261,6,249,36);
panel_3.add(sortDropdown);
historyList=new JList<String>();
historyList.setBounds(0,0,501,406);
frame.getContentPane().add(historyList);
historyList.setEnabled(false);
historyList.setForeground(new Color(60,179,113));
historyList.setFont(new Font("Open Sans",Font.PLAIN,13));
historyList.setModel(new AbstractListModel<String>(){
private static final long serialVersionUID=1L;
List<String> history=taskManager.getHistoryList();
public int getSize(){
return history.size();
}
public String getElementAt(int index){
return history.get(index);
}
}
);
JPanel panel_1=new JPanel();
panel_1.setBackground(new Color(51,204,153));
panel_1.setBounds(0,0,828,64);
frame.getContentPane().add(panel_1);
panel_1.setLayout(null);
JLabel lblSnaptask=new JLabel("snaptask");
lblSnaptask.setFont(new Font("Open Sans",Font.PLAIN,48));
lblSnaptask.setForeground(new Color(255,255,255));
lblSnaptask.setBounds(16,0,216,58);
panel_1.add(lblSnaptask);
JPanel searchLine=new JPanel();
searchLine.setBackground(new Color(255,165,0));
searchLine.setBorder(null);
searchLine.setBounds(556,44,251,6);
searchLine.setEnabled(false);
panel_1.add(searchLine);
searchField=new JTextField();
searchField.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
String searchString=searchField.getText();
try {
taskManager.executeCommand(searchString,window);
}
 catch (FileNotFoundException e1) {
warnInvalid("Search unable to be performed");
e1.printStackTrace();
}
}
}
);
searchField.addFocusListener(new FocusAdapter(){
@Override public void focusGained(FocusEvent e){
if (firstFocusSearchText) {
searchField.setText("");
firstFocusSearchText=false;
}
}
}
);
searchField.setFont(new Font("Open Sans",Font.PLAIN,15));
searchField.setForeground(new Color(169,169,169));
searchField.setToolTipText("Search for tasks!");
searchField.setText("Search for tasks!");
searchField.setBounds(552,15,258,36);
panel_1.add(searchField);
searchField.setColumns(10);
homeButton=new JButton("\n");
homeButton.setOpaque(true);
homeButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=0;
refreshButtons();
}
}
);
homeButton.setIcon(new ImageIcon("/Users/admin/Desktop/ListIcon.png"));
homeButton.setBorder(new EmptyBorder(0,0,0,0));
homeButton.setBackground(new Color(0,204,153));
homeButton.setBounds(237,0,66,64);
panel_1.add(homeButton);
historyButton=new JButton("\n");
historyButton.setOpaque(true);
historyButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=1;
refreshButtons();
}
}
);
historyButton.setIcon(new ImageIcon("/Users/admin/Desktop/HistoryIcon.png"));
historyButton.setBorder(new EmptyBorder(0,0,0,0));
historyButton.setBackground(new Color(0,204,153));
historyButton.setBounds(312,0,66,64);
panel_1.add(historyButton);
helpButton=new JButton("\n");
helpButton.setOpaque(true);
helpButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=2;
refreshButtons();
}
}
);
helpButton.setIcon(new ImageIcon("/Users/admin/Desktop/InfoImage.png"));
helpButton.setBorder(new EmptyBorder(0,0,0,0));
helpButton.setBackground(new Color(0,204,153));
helpButton.setBounds(391,0,66,64);
panel_1.add(helpButton);
JPanel panel=new JPanel();
panel.setBorder(new LineBorder(SystemColor.textHighlight));
panel.setBackground(new Color(255,255,255));
panel.setBounds(557,80,251,422);
frame.getContentPane().add(panel);
panel.setLayout(null);
warningBackground=new JPanel();
warningBackground.setEnabled(false);
warningBackground.setBorder(null);
warningBackground.setBackground(new Color(255,165,0));
warningBackground.setBounds(0,20,252,29);
panel.add(warningBackground);
warningBackground.setLayout(null);
txtLabelStatus=new JTextPane();
txtLabelStatus.setDisabledTextColor(SystemColor.text);
txtLabelStatus.setSelectionColor(SystemColor.activeCaption);
txtLabelStatus.setEnabled(false);
txtLabelStatus.setBounds(72,0,105,28);
txtLabelStatus.setFont(new Font("Open Sans",Font.PLAIN,20));
txtLabelStatus.setForeground(new Color(255,255,255));
txtLabelStatus.setBackground(new Color(255,165,0));
warningBackground.add(txtLabelStatus);
txtAreaDescription=new JTextPane();
txtAreaDescription.setFont(new Font("Open Sans",Font.PLAIN,14));
txtAreaDescription.setForeground(new Color(60,179,113));
txtAreaDescription.setBounds(10,232,208,159);
txtAreaDescription.setEnabled(false);
panel.add(txtAreaDescription);
txtAreaTaskDetails=new JTextArea();
txtAreaTaskDetails.setFont(new Font("Open Sans",Font.PLAIN,17));
txtAreaTaskDetails.setForeground(SystemColor.scrollbar);
txtAreaTaskDetails.setBounds(10,61,233,231);
txtAreaTaskDetails.setEnabled(false);
panel.add(txtAreaTaskDetails);
setTaskDetailView();
JPanel taskManageLine=new JPanel();
taskManageLine.setEnabled(false);
taskManageLine.setBorder(null);
taskManageLine.setBackground(new Color(255,165,0));
taskManageLine.setBounds(21,540,786,6);
taskManageLine.setEnabled(false);
frame.getContentPane().add(taskManageLine);
textFieldTaskManage=new JTextField();
textFieldTaskManage.addFocusListener(new FocusAdapter(){
@Override public void focusGained(FocusEvent e){
if (firstFocusManageText) {
textFieldTaskManage.setText("");
firstFocusManageText=false;
}
}
}
);
textFieldTaskManage.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
try {
taskManager.executeCommand(textFieldTaskManage.getText(),window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
refreshWindow();
textFieldTaskManage.setText("");
}
}
);
textFieldTaskManage.setDisabledTextColor(new Color(128,128,128));
textFieldTaskManage.setForeground(new Color(169,169,169));
textFieldTaskManage.setFont(new Font("Open Sans",Font.PLAIN,15));
textFieldTaskManage.setToolTipText("Manage your tasks here!");
textFieldTaskManage.setColumns(10);
textFieldTaskManage.setBounds(18,510,792,36);
textFieldTaskManage.setText("Manage your tasks here!");
frame.getContentPane().add(textFieldTaskManage);
refreshButtons();
}
 found.
	at org.eclipse.wb.internal.core.utils.check.Assert.fail(Assert.java:225)
	at org.eclipse.wb.internal.core.utils.check.Assert.isTrue(Assert.java:291)
	at org.eclipse.wb.core.eval.ExecutionFlowDescription.leaveStatement(ExecutionFlowDescription.java:152)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:317)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.prepareAssignmentInformation(ExecutionFlowUtils.java:784)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.getVariableCachedValue(ExecutionFlowUtils.java:753)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.getVariableCachedList_notNull(ExecutionFlowUtils.java:707)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.getReferences(ExecutionFlowUtils.java:669)
	at org.eclipse.wb.internal.core.model.variable.AbstractNamedVariableSupport.getReferences(AbstractNamedVariableSupport.java:184)
	at org.eclipse.wb.internal.core.model.variable.FieldUniqueVariableSupport.canConvertFieldToLocal(FieldUniqueVariableSupport.java:97)
	at org.eclipse.wb.internal.core.editor.structure.property.JavaPropertiesToolBarContributor.addVariableConvertAction(JavaPropertiesToolBarContributor.java:101)
	at org.eclipse.wb.internal.core.editor.structure.property.JavaPropertiesToolBarContributor.contributeToolBar(JavaPropertiesToolBarContributor.java:54)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage$2$1.run(ComponentsPropertiesPage.java:186)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runLog(ExecutionUtils.java:106)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage$2.run(ComponentsPropertiesPage.java:184)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runLog(ExecutionUtils.java:106)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage.updateActions(ComponentsPropertiesPage.java:160)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage.access$22(ComponentsPropertiesPage.java:159)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage$12.run(ComponentsPropertiesPage.java:538)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runLog(ExecutionUtils.java:106)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage.refreshProperties(ComponentsPropertiesPage.java:530)
	at org.eclipse.wb.internal.core.editor.structure.property.ComponentsPropertiesPage.setSelection(ComponentsPropertiesPage.java:321)
	at org.eclipse.wb.internal.core.editor.structure.DesignComponentsComposite$1.selectionChanged(DesignComponentsComposite.java:72)
	at org.eclipse.wb.internal.core.utils.gef.EditPartsSelectionProvider.fireSelectionChanged(EditPartsSelectionProvider.java:111)
	at org.eclipse.wb.internal.core.utils.gef.EditPartsSelectionProvider.access$0(EditPartsSelectionProvider.java:102)
	at org.eclipse.wb.internal.core.utils.gef.EditPartsSelectionProvider$1.selectionChanged(EditPartsSelectionProvider.java:40)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.fireSelectionChanged(AbstractEditPartViewer.java:202)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.setSelection(AbstractEditPartViewer.java:262)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.setSelection(AbstractEditPartViewer.java:193)
	at org.eclipse.wb.internal.gef.tree.TreeViewer$1.widgetSelected(TreeViewer.java:180)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:248)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1491)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1514)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1499)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1299)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4072)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3698)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.waitEventLoop(ExecutionUtils.java:71)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:168)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runLaterAndWait(SwingUtils.java:73)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.execRefreshOperation(ComponentInfo.java:119)
	at org.eclipse.wb.core.model.ObjectInfo.refresh(ObjectInfo.java:482)
	at org.eclipse.wb.core.model.ObjectInfo.endEdit(ObjectInfo.java:446)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:325)
	at org.eclipse.wb.core.gef.command.EditCommand.execute(EditCommand.java:50)
	at org.eclipse.wb.internal.gef.core.EditDomain.executeCommand(EditDomain.java:59)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.executeCommand(TreeDropListener.java:265)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.drop(TreeDropListener.java:103)
	at org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:91)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1491)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1514)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1499)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1299)
	at org.eclipse.swt.dnd.DropTarget.drop(DropTarget.java:728)
	at org.eclipse.swt.dnd.DropTarget.outlineView_acceptDrop_item_childIndex(DropTarget.java:746)
	at org.eclipse.swt.dnd.DropTarget.dropTargetProc(DropTarget.java:471)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.dnd.DropTarget.dndCallSuper(DropTarget.java:210)
	at org.eclipse.swt.dnd.DropTarget.performDragOperation(DropTarget.java:739)
	at org.eclipse.swt.dnd.DropTarget.dropTargetProc(DropTarget.java:456)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:227)
	at org.eclipse.swt.widgets.Widget.mouseDownSuper(Widget.java:1121)
	at org.eclipse.swt.widgets.Tree.mouseDownSuper(Tree.java:2047)
	at org.eclipse.swt.widgets.Widget.mouseDown(Widget.java:1113)
	at org.eclipse.swt.widgets.Control.mouseDown(Control.java:2569)
	at org.eclipse.swt.widgets.Tree.mouseDown(Tree.java:2015)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5692)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:227)
	at org.eclipse.swt.widgets.Widget.windowSendEvent(Widget.java:2130)
	at org.eclipse.swt.widgets.Shell.windowSendEvent(Shell.java:2337)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5756)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Display.applicationSendEvent(Display.java:5193)
	at org.eclipse.swt.widgets.Display.applicationProc(Display.java:5342)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSApplication.sendEvent(NSApplication.java:128)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3695)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:1127)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1018)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:156)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:654)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:598)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:139)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:380)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:235)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:669)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:608)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1515)

!ENTRY org.eclipse.wb.core 4 4 2016-04-11 10:29:58.622
!MESSAGE Designer [1.8.0.r45x201506110820.201604111029]: Execution flow problem. {
  frame=new JFrame();
  frame.setBounds(100,100,828,580);
  frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
  frame.getContentPane().setLayout(null);
  txtAreaHelp=new JTextPane();
  txtAreaHelp.setForeground(new Color(102,205,170));
  txtAreaHelp.setFont(new Font("Open Sans",Font.PLAIN,13));
  txtAreaHelp.setBounds(30,100,499,372);
  frame.getContentPane().add(txtAreaHelp);
  txtAreaHelp.setText("add [NAME] || [DD/MM/YYYY] [HH:MM] [H:M]\nadd [NAME] || [DD/MM/YYYY] [HH:MM]\nadd [NAME] || [DD/MM/YYYY]\nadd [NAME]\ndelete [INDEX]\ndone [INDEX]\nedit [INDEX] name [STRING]\nedit [INDEX] duration [STRING]\nedit [INDEX] datetime [STRING]\nedit [INDEX] all [NAME] [DATE] [TIME] [DURATION]\nclear\ndisplay [INDEX]\nsearch name [STRING]\nsearch date [DD/MM/YYYY]\nundo\nhome\nhistory\nhelp\nsort [NAME/DATE/START/END/DURATION/DEFAULT]\nfilter [INCOMPLETE/COMPLETE/SHORT/MEDIUM/LONG/SOON/ALL]\n");
  JPanel panel_3=new JPanel();
  panel_3.setBorder(new LineBorder(SystemColor.textHighlight));
  panel_3.setBackground(new Color(255,255,255));
  panel_3.setBounds(20,80,516,422);
  frame.getContentPane().add(panel_3);
  panel_3.setLayout(null);
  columns=new String[]{"Number","Task Name","Task Duration","Task Date and Time","Task Completion"};
  data=new ArrayList<Object[]>();
  Object[][] dataArray=toArray(data);
  table=new JTable(dataArray,columns){
    private static final long serialVersionUID=1L;
    public boolean isCellEditable(    int row,    int column){
      return false;
    }
  }
;
  table.addMouseListener(new MouseAdapter(){
    @Override public void mousePressed(    MouseEvent e){
      selectedListIndex=table.getSelectedRow();
      setTaskDetailView();
    }
    @Override public void mouseClicked(    MouseEvent e){
      selectedListIndex=table.getSelectedRow();
      setTaskDetailView();
    }
  }
);
  refreshTableValues();
  selectedListIndex=0;
  table.setRowHeight(25);
  table.setSelectionBackground(new Color(102,205,170));
  table.setForeground(Color.GRAY);
  table.setFont(new Font("Open Sans",Font.PLAIN,13));
  table.setSize(496,368);
  table.setLocation(11,44);
  table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  scrollPane2=new JScrollPane(table);
  table.setFillsViewportHeight(true);
  scrollPane2.setBounds(11,44,496,368);
  scrollPane2.setViewportView(table);
  panel_3.add(scrollPane2);
  filterDropdown=new JComboBox<String>();
  filterDropdown.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      String filterString;
switch (filterDropdown.getSelectedIndex()) {
case 0:
        filterString="filter all";
      break;
case 1:
    filterString="filter incomplete";
  break;
case 2:
filterString="filter complete";
break;
case 3:
filterString="filter short";
break;
case 4:
filterString="filter medium";
break;
case 5:
filterString="filter long";
break;
case 6:
filterString="filter soon";
break;
default :
filterString="";
break;
}
try {
taskManager.executeCommand(filterString,window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
refreshWindow();
}
}
);
filterDropdown.setBackground(new Color(255,255,255));
filterDropdown.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
filterDropdown.setForeground(new Color(60,179,113));
filterDropdown.setModel(new DefaultComboBoxModel<String>(new String[]{"Filter by...","Incomplete Tasks","Complete Tasks","Short Tasks (<1 hour)","Medium Tasks (1 - 3 hours)","Long Tasks (3+ hours)","Tasks Ending Soon"}));
filterDropdown.setFont(new Font("Open Sans",Font.PLAIN,15));
filterDropdown.setBounds(6,6,258,36);
panel_3.add(filterDropdown);
sortDropdown=new JComboBox<String>();
sortDropdown.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
String sortString;
switch (sortDropdown.getSelectedIndex()) {
case 0:
sortString="sort default";
break;
case 1:
sortString="sort name";
break;
case 2:
sortString="sort date";
break;
case 3:
sortString="sort start";
break;
case 4:
sortString="sort end";
break;
case 5:
sortString="sort duration";
break;
default :
sortString="";
break;
}
try {
taskManager.executeCommand(sortString,window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
}
}
);
sortDropdown.setOpaque(true);
sortDropdown.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
sortDropdown.setModel(new DefaultComboBoxModel<String>(new String[]{"Sort By...","Name","Date","Starting Time","Ending Time","Duration"}));
sortDropdown.setForeground(new Color(60,179,113));
sortDropdown.setFont(new Font("Open Sans",Font.PLAIN,15));
sortDropdown.setBackground(Color.WHITE);
sortDropdown.setBounds(261,6,249,36);
panel_3.add(sortDropdown);
historyList=new JList<String>();
historyList.setBounds(0,0,501,406);
frame.getContentPane().add(historyList);
historyList.setEnabled(false);
historyList.setForeground(new Color(60,179,113));
historyList.setFont(new Font("Open Sans",Font.PLAIN,13));
historyList.setModel(new AbstractListModel<String>(){
private static final long serialVersionUID=1L;
List<String> history=taskManager.getHistoryList();
public int getSize(){
return history.size();
}
public String getElementAt(int index){
return history.get(index);
}
}
);
JPanel panel_1=new JPanel();
panel_1.setBackground(new Color(51,204,153));
panel_1.setBounds(0,0,828,64);
frame.getContentPane().add(panel_1);
panel_1.setLayout(null);
JLabel lblSnaptask=new JLabel("snaptask");
lblSnaptask.setFont(new Font("Open Sans",Font.PLAIN,48));
lblSnaptask.setForeground(new Color(255,255,255));
lblSnaptask.setBounds(16,0,216,58);
panel_1.add(lblSnaptask);
JPanel searchLine=new JPanel();
searchLine.setBackground(new Color(255,165,0));
searchLine.setBorder(null);
searchLine.setBounds(556,44,251,6);
searchLine.setEnabled(false);
panel_1.add(searchLine);
searchField=new JTextField();
searchField.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
String searchString=searchField.getText();
try {
taskManager.executeCommand(searchString,window);
}
 catch (FileNotFoundException e1) {
warnInvalid("Search unable to be performed");
e1.printStackTrace();
}
}
}
);
searchField.addFocusListener(new FocusAdapter(){
@Override public void focusGained(FocusEvent e){
if (firstFocusSearchText) {
searchField.setText("");
firstFocusSearchText=false;
}
}
}
);
searchField.setFont(new Font("Open Sans",Font.PLAIN,15));
searchField.setForeground(new Color(169,169,169));
searchField.setToolTipText("Search for tasks!");
searchField.setText("Search for tasks!");
searchField.setBounds(552,15,258,36);
panel_1.add(searchField);
searchField.setColumns(10);
homeButton=new JButton("\n");
homeButton.setOpaque(true);
homeButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=0;
refreshButtons();
}
}
);
homeButton.setIcon(new ImageIcon("/Users/admin/Desktop/ListIcon.png"));
homeButton.setBorder(new EmptyBorder(0,0,0,0));
homeButton.setBackground(new Color(0,204,153));
homeButton.setBounds(237,0,66,64);
panel_1.add(homeButton);
historyButton=new JButton("\n");
historyButton.setOpaque(true);
historyButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=1;
refreshButtons();
}
}
);
historyButton.setIcon(new ImageIcon("/Users/admin/Desktop/HistoryIcon.png"));
historyButton.setBorder(new EmptyBorder(0,0,0,0));
historyButton.setBackground(new Color(0,204,153));
historyButton.setBounds(312,0,66,64);
panel_1.add(historyButton);
helpButton=new JButton("\n");
helpButton.setOpaque(true);
helpButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=2;
refreshButtons();
}
}
);
helpButton.setIcon(new ImageIcon("/Users/admin/Desktop/InfoImage.png"));
helpButton.setBorder(new EmptyBorder(0,0,0,0));
helpButton.setBackground(new Color(0,204,153));
helpButton.setBounds(391,0,66,64);
panel_1.add(helpButton);
JPanel panel=new JPanel();
panel.setBorder(new LineBorder(SystemColor.textHighlight));
panel.setBackground(new Color(255,255,255));
panel.setBounds(557,80,251,422);
frame.getContentPane().add(panel);
panel.setLayout(null);
warningBackground=new JPanel();
warningBackground.setEnabled(false);
warningBackground.setBorder(null);
warningBackground.setBackground(new Color(255,165,0));
warningBackground.setBounds(0,20,252,29);
panel.add(warningBackground);
warningBackground.setLayout(null);
txtLabelStatus=new JTextPane();
txtLabelStatus.setDisabledTextColor(SystemColor.text);
txtLabelStatus.setSelectionColor(SystemColor.activeCaption);
txtLabelStatus.setEnabled(false);
txtLabelStatus.setBounds(72,0,105,28);
txtLabelStatus.setFont(new Font("Open Sans",Font.PLAIN,20));
txtLabelStatus.setForeground(new Color(255,255,255));
txtLabelStatus.setBackground(new Color(255,165,0));
warningBackground.add(txtLabelStatus);
txtAreaDescription=new JTextPane();
txtAreaDescription.setFont(new Font("Open Sans",Font.PLAIN,14));
txtAreaDescription.setForeground(new Color(60,179,113));
txtAreaDescription.setBounds(10,232,208,159);
txtAreaDescription.setEnabled(false);
panel.add(txtAreaDescription);
txtAreaTaskDetails=new JTextArea();
txtAreaTaskDetails.setFont(new Font("Open Sans",Font.PLAIN,17));
txtAreaTaskDetails.setForeground(SystemColor.scrollbar);
txtAreaTaskDetails.setBounds(10,61,233,231);
txtAreaTaskDetails.setEnabled(false);
panel.add(txtAreaTaskDetails);
setTaskDetailView();
JPanel taskManageLine=new JPanel();
taskManageLine.setEnabled(false);
taskManageLine.setBorder(null);
taskManageLine.setBackground(new Color(255,165,0));
taskManageLine.setBounds(21,540,786,6);
taskManageLine.setEnabled(false);
frame.getContentPane().add(taskManageLine);
textFieldTaskManage=new JTextField();
textFieldTaskManage.addFocusListener(new FocusAdapter(){
@Override public void focusGained(FocusEvent e){
if (firstFocusManageText) {
textFieldTaskManage.setText("");
firstFocusManageText=false;
}
}
}
);
textFieldTaskManage.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
try {
taskManager.executeCommand(textFieldTaskManage.getText(),window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
refreshWindow();
textFieldTaskManage.setText("");
}
}
);
textFieldTaskManage.setDisabledTextColor(new Color(128,128,128));
textFieldTaskManage.setForeground(new Color(169,169,169));
textFieldTaskManage.setFont(new Font("Open Sans",Font.PLAIN,15));
textFieldTaskManage.setToolTipText("Manage your tasks here!");
textFieldTaskManage.setColumns(10);
textFieldTaskManage.setBounds(18,510,792,36);
textFieldTaskManage.setText("Manage your tasks here!");
frame.getContentPane().add(textFieldTaskManage);
refreshButtons();
}
 expected, but {
  initialize();
}
 found.
!STACK 0
org.eclipse.wb.internal.core.utils.check.AssertionFailedException: Execution flow problem. {
  frame=new JFrame();
  frame.setBounds(100,100,828,580);
  frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
  frame.getContentPane().setLayout(null);
  txtAreaHelp=new JTextPane();
  txtAreaHelp.setForeground(new Color(102,205,170));
  txtAreaHelp.setFont(new Font("Open Sans",Font.PLAIN,13));
  txtAreaHelp.setBounds(30,100,499,372);
  frame.getContentPane().add(txtAreaHelp);
  txtAreaHelp.setText("add [NAME] || [DD/MM/YYYY] [HH:MM] [H:M]\nadd [NAME] || [DD/MM/YYYY] [HH:MM]\nadd [NAME] || [DD/MM/YYYY]\nadd [NAME]\ndelete [INDEX]\ndone [INDEX]\nedit [INDEX] name [STRING]\nedit [INDEX] duration [STRING]\nedit [INDEX] datetime [STRING]\nedit [INDEX] all [NAME] [DATE] [TIME] [DURATION]\nclear\ndisplay [INDEX]\nsearch name [STRING]\nsearch date [DD/MM/YYYY]\nundo\nhome\nhistory\nhelp\nsort [NAME/DATE/START/END/DURATION/DEFAULT]\nfilter [INCOMPLETE/COMPLETE/SHORT/MEDIUM/LONG/SOON/ALL]\n");
  JPanel panel_3=new JPanel();
  panel_3.setBorder(new LineBorder(SystemColor.textHighlight));
  panel_3.setBackground(new Color(255,255,255));
  panel_3.setBounds(20,80,516,422);
  frame.getContentPane().add(panel_3);
  panel_3.setLayout(null);
  columns=new String[]{"Number","Task Name","Task Duration","Task Date and Time","Task Completion"};
  data=new ArrayList<Object[]>();
  Object[][] dataArray=toArray(data);
  table=new JTable(dataArray,columns){
    private static final long serialVersionUID=1L;
    public boolean isCellEditable(    int row,    int column){
      return false;
    }
  }
;
  table.addMouseListener(new MouseAdapter(){
    @Override public void mousePressed(    MouseEvent e){
      selectedListIndex=table.getSelectedRow();
      setTaskDetailView();
    }
    @Override public void mouseClicked(    MouseEvent e){
      selectedListIndex=table.getSelectedRow();
      setTaskDetailView();
    }
  }
);
  refreshTableValues();
  selectedListIndex=0;
  table.setRowHeight(25);
  table.setSelectionBackground(new Color(102,205,170));
  table.setForeground(Color.GRAY);
  table.setFont(new Font("Open Sans",Font.PLAIN,13));
  table.setSize(496,368);
  table.setLocation(11,44);
  table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  scrollPane2=new JScrollPane(table);
  table.setFillsViewportHeight(true);
  scrollPane2.setBounds(11,44,496,368);
  scrollPane2.setViewportView(table);
  panel_3.add(scrollPane2);
  filterDropdown=new JComboBox<String>();
  filterDropdown.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      String filterString;
switch (filterDropdown.getSelectedIndex()) {
case 0:
        filterString="filter all";
      break;
case 1:
    filterString="filter incomplete";
  break;
case 2:
filterString="filter complete";
break;
case 3:
filterString="filter short";
break;
case 4:
filterString="filter medium";
break;
case 5:
filterString="filter long";
break;
case 6:
filterString="filter soon";
break;
default :
filterString="";
break;
}
try {
taskManager.executeCommand(filterString,window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
refreshWindow();
}
}
);
filterDropdown.setBackground(new Color(255,255,255));
filterDropdown.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
filterDropdown.setForeground(new Color(60,179,113));
filterDropdown.setModel(new DefaultComboBoxModel<String>(new String[]{"Filter by...","Incomplete Tasks","Complete Tasks","Short Tasks (<1 hour)","Medium Tasks (1 - 3 hours)","Long Tasks (3+ hours)","Tasks Ending Soon"}));
filterDropdown.setFont(new Font("Open Sans",Font.PLAIN,15));
filterDropdown.setBounds(6,6,258,36);
panel_3.add(filterDropdown);
sortDropdown=new JComboBox<String>();
sortDropdown.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
String sortString;
switch (sortDropdown.getSelectedIndex()) {
case 0:
sortString="sort default";
break;
case 1:
sortString="sort name";
break;
case 2:
sortString="sort date";
break;
case 3:
sortString="sort start";
break;
case 4:
sortString="sort end";
break;
case 5:
sortString="sort duration";
break;
default :
sortString="";
break;
}
try {
taskManager.executeCommand(sortString,window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
}
}
);
sortDropdown.setOpaque(true);
sortDropdown.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
sortDropdown.setModel(new DefaultComboBoxModel<String>(new String[]{"Sort By...","Name","Date","Starting Time","Ending Time","Duration"}));
sortDropdown.setForeground(new Color(60,179,113));
sortDropdown.setFont(new Font("Open Sans",Font.PLAIN,15));
sortDropdown.setBackground(Color.WHITE);
sortDropdown.setBounds(261,6,249,36);
panel_3.add(sortDropdown);
historyList=new JList<String>();
historyList.setBounds(0,0,501,406);
frame.getContentPane().add(historyList);
historyList.setEnabled(false);
historyList.setForeground(new Color(60,179,113));
historyList.setFont(new Font("Open Sans",Font.PLAIN,13));
historyList.setModel(new AbstractListModel<String>(){
private static final long serialVersionUID=1L;
List<String> history=taskManager.getHistoryList();
public int getSize(){
return history.size();
}
public String getElementAt(int index){
return history.get(index);
}
}
);
JPanel panel_1=new JPanel();
panel_1.setBackground(new Color(51,204,153));
panel_1.setBounds(0,0,828,64);
frame.getContentPane().add(panel_1);
panel_1.setLayout(null);
JLabel lblSnaptask=new JLabel("snaptask");
lblSnaptask.setFont(new Font("Open Sans",Font.PLAIN,48));
lblSnaptask.setForeground(new Color(255,255,255));
lblSnaptask.setBounds(16,0,216,58);
panel_1.add(lblSnaptask);
JPanel searchLine=new JPanel();
searchLine.setBackground(new Color(255,165,0));
searchLine.setBorder(null);
searchLine.setBounds(556,44,251,6);
searchLine.setEnabled(false);
panel_1.add(searchLine);
searchField=new JTextField();
searchField.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
String searchString=searchField.getText();
try {
taskManager.executeCommand(searchString,window);
}
 catch (FileNotFoundException e1) {
warnInvalid("Search unable to be performed");
e1.printStackTrace();
}
}
}
);
searchField.addFocusListener(new FocusAdapter(){
@Override public void focusGained(FocusEvent e){
if (firstFocusSearchText) {
searchField.setText("");
firstFocusSearchText=false;
}
}
}
);
searchField.setFont(new Font("Open Sans",Font.PLAIN,15));
searchField.setForeground(new Color(169,169,169));
searchField.setToolTipText("Search for tasks!");
searchField.setText("Search for tasks!");
searchField.setBounds(552,15,258,36);
panel_1.add(searchField);
searchField.setColumns(10);
homeButton=new JButton("\n");
homeButton.setOpaque(true);
homeButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=0;
refreshButtons();
}
}
);
homeButton.setIcon(new ImageIcon("/Users/admin/Desktop/ListIcon.png"));
homeButton.setBorder(new EmptyBorder(0,0,0,0));
homeButton.setBackground(new Color(0,204,153));
homeButton.setBounds(237,0,66,64);
panel_1.add(homeButton);
historyButton=new JButton("\n");
historyButton.setOpaque(true);
historyButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=1;
refreshButtons();
}
}
);
historyButton.setIcon(new ImageIcon("/Users/admin/Desktop/HistoryIcon.png"));
historyButton.setBorder(new EmptyBorder(0,0,0,0));
historyButton.setBackground(new Color(0,204,153));
historyButton.setBounds(312,0,66,64);
panel_1.add(historyButton);
helpButton=new JButton("\n");
helpButton.setOpaque(true);
helpButton.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
selectedButtonIndex=2;
refreshButtons();
}
}
);
helpButton.setIcon(new ImageIcon("/Users/admin/Desktop/InfoImage.png"));
helpButton.setBorder(new EmptyBorder(0,0,0,0));
helpButton.setBackground(new Color(0,204,153));
helpButton.setBounds(391,0,66,64);
panel_1.add(helpButton);
JPanel panel=new JPanel();
panel.setBorder(new LineBorder(SystemColor.textHighlight));
panel.setBackground(new Color(255,255,255));
panel.setBounds(557,80,251,422);
frame.getContentPane().add(panel);
panel.setLayout(null);
warningBackground=new JPanel();
warningBackground.setEnabled(false);
warningBackground.setBorder(null);
warningBackground.setBackground(new Color(255,165,0));
warningBackground.setBounds(0,20,252,29);
panel.add(warningBackground);
warningBackground.setLayout(null);
txtLabelStatus=new JTextPane();
txtLabelStatus.setDisabledTextColor(SystemColor.text);
txtLabelStatus.setSelectionColor(SystemColor.activeCaption);
txtLabelStatus.setEnabled(false);
txtLabelStatus.setBounds(72,0,105,28);
txtLabelStatus.setFont(new Font("Open Sans",Font.PLAIN,20));
txtLabelStatus.setForeground(new Color(255,255,255));
txtLabelStatus.setBackground(new Color(255,165,0));
warningBackground.add(txtLabelStatus);
txtAreaDescription=new JTextPane();
txtAreaDescription.setFont(new Font("Open Sans",Font.PLAIN,14));
txtAreaDescription.setForeground(new Color(60,179,113));
txtAreaDescription.setBounds(10,232,208,159);
txtAreaDescription.setEnabled(false);
panel.add(txtAreaDescription);
txtAreaTaskDetails=new JTextArea();
txtAreaTaskDetails.setFont(new Font("Open Sans",Font.PLAIN,17));
txtAreaTaskDetails.setForeground(SystemColor.scrollbar);
txtAreaTaskDetails.setBounds(10,61,233,231);
txtAreaTaskDetails.setEnabled(false);
panel.add(txtAreaTaskDetails);
setTaskDetailView();
JPanel taskManageLine=new JPanel();
taskManageLine.setEnabled(false);
taskManageLine.setBorder(null);
taskManageLine.setBackground(new Color(255,165,0));
taskManageLine.setBounds(21,540,786,6);
taskManageLine.setEnabled(false);
frame.getContentPane().add(taskManageLine);
textFieldTaskManage=new JTextField();
textFieldTaskManage.addFocusListener(new FocusAdapter(){
@Override public void focusGained(FocusEvent e){
if (firstFocusManageText) {
textFieldTaskManage.setText("");
firstFocusManageText=false;
}
}
}
);
textFieldTaskManage.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
try {
taskManager.executeCommand(textFieldTaskManage.getText(),window);
}
 catch (Exception e1) {
JOptionPane.showMessageDialog(frame,e1.getMessage());
}
refreshWindow();
textFieldTaskManage.setText("");
}
}
);
textFieldTaskManage.setDisabledTextColor(new Color(128,128,128));
textFieldTaskManage.setForeground(new Color(169,169,169));
textFieldTaskManage.setFont(new Font("Open Sans",Font.PLAIN,15));
textFieldTaskManage.setToolTipText("Manage your tasks here!");
textFieldTaskManage.setColumns(10);
textFieldTaskManage.setBounds(18,510,792,36);
textFieldTaskManage.setText("Manage your tasks here!");
frame.getContentPane().add(textFieldTaskManage);
refreshButtons();
}
 expected, but {
  initialize();
}
 found.
	at org.eclipse.wb.internal.core.utils.check.Assert.fail(Assert.java:225)
	at org.eclipse.wb.internal.core.utils.check.Assert.isTrue(Assert.java:291)
	at org.eclipse.wb.core.eval.ExecutionFlowDescription.leaveStatement(ExecutionFlowDescription.java:152)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:317)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.access$1(ExecutionFlowUtils.java:235)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:442)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:391)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$f1c6d1a8.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:241)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2759)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:145)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:421)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:389)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$f1c6d1a8.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:316)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2759)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:263)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2782)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:267)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2782)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:137)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2759)
	at org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:250)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2782)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:137)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2759)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:635)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2782)
	at org.eclipse.jdt.core.dom.AnonymousClassDeclaration.accept0(AnonymousClassDeclaration.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2759)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:314)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2782)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:239)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2759)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:145)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2711)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.core.model.JavaInfo.refresh_create(JavaInfo.java:1199)
	at org.eclipse.wb.core.model.ObjectInfo.refreshCreate0(ObjectInfo.java:550)
	at org.eclipse.wb.core.model.ObjectInfo.access$0(ObjectInfo.java:546)
	at org.eclipse.wb.core.model.ObjectInfo$5$1.run(ObjectInfo.java:486)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:145)
	at org.eclipse.wb.core.model.ObjectInfo$5.run(ObjectInfo.java:484)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$2.run(SwingUtils.java:76)
	at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:312)
	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:745)
	at java.awt.EventQueue.access$300(EventQueue.java:103)
	at java.awt.EventQueue$3.run(EventQueue.java:706)
	at java.awt.EventQueue$3.run(EventQueue.java:704)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.awt.EventQueue.dispatchEvent(EventQueue.java:715)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:242)
	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:161)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:150)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:146)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:138)
	at java.awt.EventDispatchThread.run(EventDispatchThread.java:91)

!ENTRY org.eclipse.ui 4 0 2016-04-11 10:29:58.996
!MESSAGE Unhandled event loop exception
!STACK 0
org.eclipse.core.runtime.AssertionFailedException: null argument:
	at org.eclipse.core.runtime.Assert.isNotNull(Assert.java:85)
	at org.eclipse.core.runtime.Assert.isNotNull(Assert.java:73)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.setSelection(AbstractEditPartViewer.java:249)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.resetSelectionFromModels(TreeDropListener.java:141)
	at org.eclipse.wb.internal.gef.tree.dnd.TreeDropListener.drop(TreeDropListener.java:107)
	at org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:91)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1491)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1514)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1499)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1299)
	at org.eclipse.swt.dnd.DropTarget.drop(DropTarget.java:728)
	at org.eclipse.swt.dnd.DropTarget.outlineView_acceptDrop_item_childIndex(DropTarget.java:746)
	at org.eclipse.swt.dnd.DropTarget.dropTargetProc(DropTarget.java:471)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.dnd.DropTarget.dndCallSuper(DropTarget.java:210)
	at org.eclipse.swt.dnd.DropTarget.performDragOperation(DropTarget.java:739)
	at org.eclipse.swt.dnd.DropTarget.dropTargetProc(DropTarget.java:456)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:227)
	at org.eclipse.swt.widgets.Widget.mouseDownSuper(Widget.java:1121)
	at org.eclipse.swt.widgets.Tree.mouseDownSuper(Tree.java:2047)
	at org.eclipse.swt.widgets.Widget.mouseDown(Widget.java:1113)
	at org.eclipse.swt.widgets.Control.mouseDown(Control.java:2569)
	at org.eclipse.swt.widgets.Tree.mouseDown(Tree.java:2015)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5692)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:227)
	at org.eclipse.swt.widgets.Widget.windowSendEvent(Widget.java:2130)
	at org.eclipse.swt.widgets.Shell.windowSendEvent(Shell.java:2337)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5756)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Display.applicationSendEvent(Display.java:5193)
	at org.eclipse.swt.widgets.Display.applicationProc(Display.java:5342)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSApplication.sendEvent(NSApplication.java:128)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3695)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:1127)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1018)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:156)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:654)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:598)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:139)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:380)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:235)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:669)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:608)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1515)

!ENTRY org.eclipse.jdt.core 4 2 2016-04-11 10:47:01.714
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core".
!STACK 0
java.lang.RuntimeException: java.io.FileNotFoundException: /Users/admin/Desktop/main/.metadata/.plugins/org.eclipse.recommenders.types.rcp/indexes/TaskScheduler/_2h.fnm (No such file or directory)
	at com.google.common.base.Throwables.propagate(Throwables.java:160)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.createReader(ProjectTypesIndex.java:303)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.getSearcher(ProjectTypesIndex.java:282)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.getIndexedRoots(ProjectTypesIndex.java:192)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.needsRebuild(ProjectTypesIndex.java:147)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.suggestRebuild(ProjectTypesIndex.java:464)
	at org.eclipse.recommenders.internal.types.rcp.TypesIndexService.rebuildIndex(TypesIndexService.java:120)
	at org.eclipse.recommenders.internal.types.rcp.TypesIndexService.process(TypesIndexService.java:57)
	at org.eclipse.recommenders.internal.types.rcp.TypesIndexService.process(TypesIndexService.java:63)
	at org.eclipse.recommenders.internal.types.rcp.TypesIndexService.elementChanged(TypesIndexService.java:49)
	at org.eclipse.jdt.internal.core.DeltaProcessor$3.run(DeltaProcessor.java:1662)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.core.DeltaProcessor.notifyListeners(DeltaProcessor.java:1652)
	at org.eclipse.jdt.internal.core.DeltaProcessor.firePostChangeDelta(DeltaProcessor.java:1486)
	at org.eclipse.jdt.internal.core.DeltaProcessor.fire(DeltaProcessor.java:1462)
	at org.eclipse.jdt.internal.core.DeltaProcessor.resourceChanged(DeltaProcessor.java:2074)
	at org.eclipse.jdt.internal.core.DeltaProcessingState.resourceChanged(DeltaProcessingState.java:477)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:299)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:289)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:152)
	at org.eclipse.core.internal.resources.Workspace.broadcastPostChange(Workspace.java:373)
	at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:1470)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2250)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:794)
	at org.eclipse.jdt.internal.core.JavaProject.setRawClasspath(JavaProject.java:3097)
	at org.eclipse.jdt.internal.core.JavaProject.setRawClasspath(JavaProject.java:3059)
	at org.eclipse.jdt.internal.core.JavaProject.setRawClasspath(JavaProject.java:3071)
	at org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier.commitClassPath(ClasspathModifier.java:1045)
	at org.eclipse.jdt.internal.ui.wizards.buildpaths.newsourcepage.AddFolderToBuildpathAction.addToClasspath(AddFolderToBuildpathAction.java:250)
	at org.eclipse.jdt.internal.ui.wizards.buildpaths.newsourcepage.AddFolderToBuildpathAction.access$0(AddFolderToBuildpathAction.java:200)
	at org.eclipse.jdt.internal.ui.wizards.buildpaths.newsourcepage.AddFolderToBuildpathAction$1.run(AddFolderToBuildpathAction.java:179)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:463)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:371)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:500)
	at org.eclipse.ui.internal.progress.ProgressMonitorJobsDialog.run(ProgressMonitorJobsDialog.java:284)
	at org.eclipse.ui.internal.progress.ProgressManager.run(ProgressManager.java:1204)
	at org.eclipse.jdt.internal.ui.wizards.buildpaths.newsourcepage.AddFolderToBuildpathAction.run(AddFolderToBuildpathAction.java:186)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:473)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:595)
	at org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:511)
	at org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:420)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1491)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1514)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1499)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1299)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4072)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3698)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:1127)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1018)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:156)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:654)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:598)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:139)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:380)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:235)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:669)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:608)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1515)
Caused by: java.io.FileNotFoundException: /Users/admin/Desktop/main/.metadata/.plugins/org.eclipse.recommenders.types.rcp/indexes/TaskScheduler/_2h.fnm (No such file or directory)
	at java.io.RandomAccessFile.open(Native Method)
	at java.io.RandomAccessFile.<init>(RandomAccessFile.java:241)
	at org.apache.lucene.store.SimpleFSDirectory$SimpleFSIndexInput$Descriptor.<init>(SimpleFSDirectory.java:70)
	at org.apache.lucene.store.SimpleFSDirectory$SimpleFSIndexInput.<init>(SimpleFSDirectory.java:97)
	at org.apache.lucene.store.NIOFSDirectory$NIOFSIndexInput.<init>(NIOFSDirectory.java:92)
	at org.apache.lucene.store.NIOFSDirectory.openInput(NIOFSDirectory.java:79)
	at org.apache.lucene.store.FSDirectory.openInput(FSDirectory.java:345)
	at org.apache.lucene.index.FieldInfos.<init>(FieldInfos.java:74)
	at org.apache.lucene.index.SegmentCoreReaders.<init>(SegmentCoreReaders.java:73)
	at org.apache.lucene.index.SegmentReader.get(SegmentReader.java:115)
	at org.apache.lucene.index.SegmentReader.get(SegmentReader.java:93)
	at org.apache.lucene.index.DirectoryReader.<init>(DirectoryReader.java:113)
	at org.apache.lucene.index.ReadOnlyDirectoryReader.<init>(ReadOnlyDirectoryReader.java:29)
	at org.apache.lucene.index.DirectoryReader$1.doBody(DirectoryReader.java:81)
	at org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:754)
	at org.apache.lucene.index.DirectoryReader.open(DirectoryReader.java:75)
	at org.apache.lucene.index.IndexReader.open(IndexReader.java:462)
	at org.apache.lucene.index.IndexReader.open(IndexReader.java:308)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.createReader(ProjectTypesIndex.java:301)
	... 69 more

!ENTRY org.eclipse.jdt.core 4 4 2016-04-11 10:47:01.731
!MESSAGE Exception occurred in listener of Java element change notification
!STACK 0
java.lang.RuntimeException: java.io.FileNotFoundException: /Users/admin/Desktop/main/.metadata/.plugins/org.eclipse.recommenders.types.rcp/indexes/TaskScheduler/_2h.fnm (No such file or directory)
	at com.google.common.base.Throwables.propagate(Throwables.java:160)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.createReader(ProjectTypesIndex.java:303)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.getSearcher(ProjectTypesIndex.java:282)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.getIndexedRoots(ProjectTypesIndex.java:192)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.needsRebuild(ProjectTypesIndex.java:147)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.suggestRebuild(ProjectTypesIndex.java:464)
	at org.eclipse.recommenders.internal.types.rcp.TypesIndexService.rebuildIndex(TypesIndexService.java:120)
	at org.eclipse.recommenders.internal.types.rcp.TypesIndexService.process(TypesIndexService.java:57)
	at org.eclipse.recommenders.internal.types.rcp.TypesIndexService.process(TypesIndexService.java:63)
	at org.eclipse.recommenders.internal.types.rcp.TypesIndexService.elementChanged(TypesIndexService.java:49)
	at org.eclipse.jdt.internal.core.DeltaProcessor$3.run(DeltaProcessor.java:1662)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.core.DeltaProcessor.notifyListeners(DeltaProcessor.java:1652)
	at org.eclipse.jdt.internal.core.DeltaProcessor.firePostChangeDelta(DeltaProcessor.java:1486)
	at org.eclipse.jdt.internal.core.DeltaProcessor.fire(DeltaProcessor.java:1462)
	at org.eclipse.jdt.internal.core.DeltaProcessor.resourceChanged(DeltaProcessor.java:2074)
	at org.eclipse.jdt.internal.core.DeltaProcessingState.resourceChanged(DeltaProcessingState.java:477)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:299)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:289)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:152)
	at org.eclipse.core.internal.resources.Workspace.broadcastPostChange(Workspace.java:373)
	at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:1470)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2250)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:794)
	at org.eclipse.jdt.internal.core.JavaProject.setRawClasspath(JavaProject.java:3097)
	at org.eclipse.jdt.internal.core.JavaProject.setRawClasspath(JavaProject.java:3059)
	at org.eclipse.jdt.internal.core.JavaProject.setRawClasspath(JavaProject.java:3071)
	at org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier.commitClassPath(ClasspathModifier.java:1045)
	at org.eclipse.jdt.internal.ui.wizards.buildpaths.newsourcepage.AddFolderToBuildpathAction.addToClasspath(AddFolderToBuildpathAction.java:250)
	at org.eclipse.jdt.internal.ui.wizards.buildpaths.newsourcepage.AddFolderToBuildpathAction.access$0(AddFolderToBuildpathAction.java:200)
	at org.eclipse.jdt.internal.ui.wizards.buildpaths.newsourcepage.AddFolderToBuildpathAction$1.run(AddFolderToBuildpathAction.java:179)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:463)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:371)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:500)
	at org.eclipse.ui.internal.progress.ProgressMonitorJobsDialog.run(ProgressMonitorJobsDialog.java:284)
	at org.eclipse.ui.internal.progress.ProgressManager.run(ProgressManager.java:1204)
	at org.eclipse.jdt.internal.ui.wizards.buildpaths.newsourcepage.AddFolderToBuildpathAction.run(AddFolderToBuildpathAction.java:186)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:473)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:595)
	at org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:511)
	at org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:420)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1491)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1514)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1499)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1299)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4072)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3698)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:1127)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1018)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:156)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:654)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:598)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:139)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:380)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:235)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:669)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:608)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1515)
Caused by: java.io.FileNotFoundException: /Users/admin/Desktop/main/.metadata/.plugins/org.eclipse.recommenders.types.rcp/indexes/TaskScheduler/_2h.fnm (No such file or directory)
	at java.io.RandomAccessFile.open(Native Method)
	at java.io.RandomAccessFile.<init>(RandomAccessFile.java:241)
	at org.apache.lucene.store.SimpleFSDirectory$SimpleFSIndexInput$Descriptor.<init>(SimpleFSDirectory.java:70)
	at org.apache.lucene.store.SimpleFSDirectory$SimpleFSIndexInput.<init>(SimpleFSDirectory.java:97)
	at org.apache.lucene.store.NIOFSDirectory$NIOFSIndexInput.<init>(NIOFSDirectory.java:92)
	at org.apache.lucene.store.NIOFSDirectory.openInput(NIOFSDirectory.java:79)
	at org.apache.lucene.store.FSDirectory.openInput(FSDirectory.java:345)
	at org.apache.lucene.index.FieldInfos.<init>(FieldInfos.java:74)
	at org.apache.lucene.index.SegmentCoreReaders.<init>(SegmentCoreReaders.java:73)
	at org.apache.lucene.index.SegmentReader.get(SegmentReader.java:115)
	at org.apache.lucene.index.SegmentReader.get(SegmentReader.java:93)
	at org.apache.lucene.index.DirectoryReader.<init>(DirectoryReader.java:113)
	at org.apache.lucene.index.ReadOnlyDirectoryReader.<init>(ReadOnlyDirectoryReader.java:29)
	at org.apache.lucene.index.DirectoryReader$1.doBody(DirectoryReader.java:81)
	at org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:754)
	at org.apache.lucene.index.DirectoryReader.open(DirectoryReader.java:75)
	at org.apache.lucene.index.IndexReader.open(IndexReader.java:462)
	at org.apache.lucene.index.IndexReader.open(IndexReader.java:308)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.createReader(ProjectTypesIndex.java:301)
	... 69 more

!ENTRY org.eclipse.ui.workbench 4 2 2016-04-11 13:36:19.648
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.ui.workbench".
!STACK 0
java.lang.IllegalStateException: Expected the service to be TERMINATED, but the service has FAILED
	at com.google.common.util.concurrent.AbstractService.checkCurrentState(AbstractService.java:334)
	at com.google.common.util.concurrent.AbstractService.awaitTerminated(AbstractService.java:303)
	at com.google.common.util.concurrent.AbstractIdleService.awaitTerminated(AbstractIdleService.java:191)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.close(ProjectTypesIndex.java:221)
	at org.eclipse.recommenders.internal.types.rcp.IndexProvider.close(IndexProvider.java:59)
	at org.eclipse.recommenders.internal.types.rcp.TypesIndexService$ShutdownListener.postShutdown(TypesIndexService.java:142)
	at org.eclipse.ui.internal.Workbench$8.run(Workbench.java:971)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:50)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:173)
	at org.eclipse.ui.internal.Workbench.firePostShutdown(Workbench.java:968)
	at org.eclipse.ui.internal.Workbench.shutdown(Workbench.java:3152)
	at org.eclipse.ui.internal.Workbench.busyClose(Workbench.java:1161)
	at org.eclipse.ui.internal.Workbench.access$21(Workbench.java:1073)
	at org.eclipse.ui.internal.Workbench$19.run(Workbench.java:1414)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.ui.internal.Workbench.close(Workbench.java:1411)
	at org.eclipse.ui.internal.Workbench.close(Workbench.java:1384)
	at org.eclipse.ui.internal.Workbench$58.handleEvent(Workbench.java:2906)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4219)
	at org.eclipse.swt.widgets.Display.applicationProc(Display.java:5349)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Display.applicationNextEventMatchingMask(Display.java:5051)
	at org.eclipse.swt.widgets.Display.applicationProc(Display.java:5432)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSApplication.nextEventMatchingMask(NSApplication.java:94)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3692)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:1127)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1018)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:156)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:654)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:598)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:139)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:380)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:235)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:669)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:608)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1515)
Caused by: java.io.FileNotFoundException: /Users/admin/Desktop/main/.metadata/.plugins/org.eclipse.recommenders.types.rcp/indexes/TaskScheduler/_2h.fnm (No such file or directory)
	at java.io.RandomAccessFile.open(Native Method)
	at java.io.RandomAccessFile.<init>(RandomAccessFile.java:241)
	at org.apache.lucene.store.SimpleFSDirectory$SimpleFSIndexInput$Descriptor.<init>(SimpleFSDirectory.java:70)
	at org.apache.lucene.store.SimpleFSDirectory$SimpleFSIndexInput.<init>(SimpleFSDirectory.java:97)
	at org.apache.lucene.store.NIOFSDirectory$NIOFSIndexInput.<init>(NIOFSDirectory.java:92)
	at org.apache.lucene.store.NIOFSDirectory.openInput(NIOFSDirectory.java:79)
	at org.apache.lucene.store.FSDirectory.openInput(FSDirectory.java:345)
	at org.apache.lucene.index.FieldInfos.<init>(FieldInfos.java:74)
	at org.apache.lucene.index.IndexWriter.getFieldInfos(IndexWriter.java:1222)
	at org.apache.lucene.index.IndexWriter.getCurrentFieldInfos(IndexWriter.java:1238)
	at org.apache.lucene.index.IndexWriter.<init>(IndexWriter.java:1171)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.initialize(ProjectTypesIndex.java:138)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.startUp(ProjectTypesIndex.java:125)
	at com.google.common.util.concurrent.AbstractIdleService$2$1.run(AbstractIdleService.java:54)
	at com.google.common.util.concurrent.Callables$3.run(Callables.java:93)
	at java.lang.Thread.run(Thread.java:745)
!SESSION 2016-04-11 20:21:41.229 -----------------------------------------------
eclipse.buildId=4.5.1.M20150904-0015
java.version=1.7.0_79
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/admin/.eclipse_keyring -showlocation
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/admin/.eclipse_keyring -showlocation

!ENTRY org.eclipse.core.net 1 0 2016-04-11 20:21:42.274
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences

!ENTRY org.eclipse.ui.workbench 4 2 2016-04-11 23:17:58.900
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.ui.workbench".
!STACK 0
java.lang.IllegalStateException: Expected the service to be TERMINATED, but the service has FAILED
	at com.google.common.util.concurrent.AbstractService.checkCurrentState(AbstractService.java:334)
	at com.google.common.util.concurrent.AbstractService.awaitTerminated(AbstractService.java:303)
	at com.google.common.util.concurrent.AbstractIdleService.awaitTerminated(AbstractIdleService.java:191)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.close(ProjectTypesIndex.java:221)
	at org.eclipse.recommenders.internal.types.rcp.IndexProvider.close(IndexProvider.java:59)
	at org.eclipse.recommenders.internal.types.rcp.TypesIndexService$ShutdownListener.postShutdown(TypesIndexService.java:142)
	at org.eclipse.ui.internal.Workbench$8.run(Workbench.java:971)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:50)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:173)
	at org.eclipse.ui.internal.Workbench.firePostShutdown(Workbench.java:968)
	at org.eclipse.ui.internal.Workbench.shutdown(Workbench.java:3152)
	at org.eclipse.ui.internal.Workbench.busyClose(Workbench.java:1161)
	at org.eclipse.ui.internal.Workbench.access$21(Workbench.java:1073)
	at org.eclipse.ui.internal.Workbench$19.run(Workbench.java:1414)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.ui.internal.Workbench.close(Workbench.java:1411)
	at org.eclipse.ui.internal.Workbench.close(Workbench.java:1384)
	at org.eclipse.ui.internal.Workbench$58.handleEvent(Workbench.java:2906)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4219)
	at org.eclipse.swt.widgets.Display.applicationProc(Display.java:5349)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Display.applicationNextEventMatchingMask(Display.java:5051)
	at org.eclipse.swt.widgets.Display.applicationProc(Display.java:5432)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSApplication.nextEventMatchingMask(NSApplication.java:94)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3692)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:1127)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1018)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:156)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:654)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:598)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:139)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:380)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:235)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:669)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:608)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1515)
Caused by: java.io.FileNotFoundException: /Users/admin/Desktop/main/.metadata/.plugins/org.eclipse.recommenders.types.rcp/indexes/TaskScheduler/_2h.fnm (No such file or directory)
	at java.io.RandomAccessFile.open(Native Method)
	at java.io.RandomAccessFile.<init>(RandomAccessFile.java:241)
	at org.apache.lucene.store.SimpleFSDirectory$SimpleFSIndexInput$Descriptor.<init>(SimpleFSDirectory.java:70)
	at org.apache.lucene.store.SimpleFSDirectory$SimpleFSIndexInput.<init>(SimpleFSDirectory.java:97)
	at org.apache.lucene.store.NIOFSDirectory$NIOFSIndexInput.<init>(NIOFSDirectory.java:92)
	at org.apache.lucene.store.NIOFSDirectory.openInput(NIOFSDirectory.java:79)
	at org.apache.lucene.store.FSDirectory.openInput(FSDirectory.java:345)
	at org.apache.lucene.index.FieldInfos.<init>(FieldInfos.java:74)
	at org.apache.lucene.index.IndexWriter.getFieldInfos(IndexWriter.java:1222)
	at org.apache.lucene.index.IndexWriter.getCurrentFieldInfos(IndexWriter.java:1238)
	at org.apache.lucene.index.IndexWriter.<init>(IndexWriter.java:1171)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.initialize(ProjectTypesIndex.java:138)
	at org.eclipse.recommenders.internal.types.rcp.ProjectTypesIndex.startUp(ProjectTypesIndex.java:125)
	at com.google.common.util.concurrent.AbstractIdleService$2$1.run(AbstractIdleService.java:54)
	at com.google.common.util.concurrent.Callables$3.run(Callables.java:93)
	at java.lang.Thread.run(Thread.java:745)
!SESSION 2016-04-15 13:25:00.154 -----------------------------------------------
eclipse.buildId=4.5.1.M20150904-0015
java.version=1.7.0_79
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/admin/.eclipse_keyring -showlocation
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/admin/.eclipse_keyring -showlocation

!ENTRY org.eclipse.core.net 1 0 2016-04-15 13:25:01.552
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences
