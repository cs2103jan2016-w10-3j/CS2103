import java.util.Scanner;


public class TextBuddy {
	
	private static final String WELCOME_MESSAGE = "Welcome to TextBuddy. %1$s is ready for use.";
	private static final String ADD_MESSAGE = "added to %1$s: \"%2$s\"";
	private static final String DELETE_MESSAGE = "deleted from %1$s: \"%2$s\"";
	private static final String CLEAR_MESSAGE = "all content deleted from %1$s";
	private static final String MESSAGE_INVALID_FORMAT = "invalid command format :%1$s";
	
	
	enum COMMAND_TYPE {
		ADD, DISPLAY, CLEAR, EXIT, DELETE, INVALID
	}
	
	private static Scanner scanner = new Scanner(System.in);
	private static String file_name;
	
	public static void main(String[] args) {
		showToUser(WELCOME_MESSAGE);
		while (true) {
			System.out.print("command:");
			String command = scanner.nextLine();
			String userCommand = command;
			String feedback = executeCommand(userCommand);
			showToUser(feedback);
		}
	}
	
	private static void showToUser(String text) {
		System.out.println(text);
	}
	
	public static String executeCommand(String userCommand) {
		if (userCommand.trim().equals(""))
			return String.format(MESSAGE_INVALID_FORMAT, userCommand);

		String commandTypeString = getFirstWord(userCommand);
		COMMAND_TYPE commandType = determineCommandType(commandTypeString);

		switch (commandType) {
		case ADD:
			return addRoute(userCommand);
		case DISPLAY:
			return getDistance(userCommand);
		case CLEAR:
		case DELETE:
		case INVALID:
			return String.format(MESSAGE_INVALID_FORMAT, userCommand);
		case EXIT:
			System.exit(0);
		default:
			//throw an error if the command is not recognized
			throw new Error("Unrecognized command type");
		}
	}
	
	private static String getFirstWord(String userCommand) {
		String commandTypeString = userCommand.trim().split("\\s+")[0];
		return commandTypeString;
	}
	
	private static COMMAND_TYPE determineCommandType(String commandTypeString) {
		if (commandTypeString == null) {
			throw new Error("command type string cannot be null!");
		} else if (commandTypeString.equalsIgnoreCase("add")) {
			return COMMAND_TYPE.ADD;
		} else if (commandTypeString.equalsIgnoreCase("display")) {
			return COMMAND_TYPE.DISPLAY;
		} else if (commandTypeString.equalsIgnoreCase("exit")) {
		 	return COMMAND_TYPE.EXIT;
		} else if (commandTypeString.equalsIgnoreCase("clear")) {
			return COMMAND_TYPE.CLEAR;
		} else if (commandTypeString.equalsIgnoreCase("delete")) {
				return COMMAND_TYPE.DELETE;
		} else {
			return COMMAND_TYPE.INVALID;
		}
	}
}
